{"version":3,"file":"index.js","sources":["../../src/borderRadius.ts","../../src/breakpoints.ts","../../src/color/color.types.ts","../../src/scrollbars/addScrollbarStyles.ts","../../src/shadows/addOverflowShadow.ts","../../src/color/darkModeColors.ts","../../src/color/lightModeColors.ts","../../src/color/color.ts","../../src/mode.ts","../../src/focusRing.ts","../../src/fontFamilies.ts","../../src/fontWeights.ts","../../src/hoverRing.ts","../../src/scrollbars/scrollbarColor.ts","../../src/shadows/shadow.ts","../../src/size.ts","../../src/spacing.ts","../../src/transitions.ts","../../src/typeScales.ts"],"sourcesContent":["const borderRadius = {\n  0: 0,\n  50: 2,\n  100: 4,\n  150: 6,\n  200: 8,\n  300: 12,\n  400: 16,\n  500: 20,\n  600: 24,\n} as const;\n\nexport default borderRadius;\n","const breakpoints = {\n  Mobile: 320,\n  Tablet: 768,\n  Desktop: 1024,\n  XLDesktop: 1440,\n} as const;\n\nexport default breakpoints;\n","/**\n * The element property a color token applies to\n */\nconst Property = {\n  Background: 'background',\n  Border: 'border',\n  Icon: 'icon',\n  Text: 'text',\n} as const;\ntype Property = (typeof Property)[keyof typeof Property];\n\n/**\n * The context variant in which a color token should be applied\n */\nconst Variant = {\n  Disabled: 'disabled',\n  Placeholder: 'placeholder',\n  Primary: 'primary',\n  Secondary: 'secondary',\n  InversePrimary: 'inversePrimary',\n  InverseSecondary: 'inverseSecondary',\n  Info: 'info',\n  Warning: 'warning',\n  Error: 'error',\n  Success: 'success',\n  Link: 'link',\n} as const;\ntype Variant = (typeof Variant)[keyof typeof Variant];\n\n/**\n * The interaction state in which a color token should be applied\n */\nconst InteractionState = {\n  Default: 'default',\n  Hover: 'hover',\n  Focus: 'focus',\n} as const;\ntype InteractionState =\n  (typeof InteractionState)[keyof typeof InteractionState];\n\n/**\n * A partial Record,\n * mapping a subset of {@link Variant} keys\n * to a Record of {@link InteractionState} color tokens\n */\nexport type VariantColorRecord = Partial<\n  Record<Variant, Record<InteractionState, string>>\n>;\n\n/**\n * A Record mapping {@link Property} keys to {@link VariantColorRecord}\n */\nexport type PropertyColorRecord = Record<Property, VariantColorRecord>;\n\nexport { InteractionState, Property, Variant };\n","import { css } from '@leafygreen-ui/emotion';\nimport { Theme } from '@leafygreen-ui/lib';\n\nimport { Variant } from '../color';\n\nimport { scrollbarColor, ScrollbarVariant } from './scrollbarColor';\n\nexport const addScrollbarStyles = ({\n  theme,\n  variant = Variant.Primary,\n}: {\n  theme: Theme;\n  variant: ScrollbarVariant;\n}): string => {\n  const thumbColor = scrollbarColor[theme].thumb[variant].default;\n  const trackColor = scrollbarColor[theme].track[variant].default;\n\n  return css`\n    scrollbar-color: ${thumbColor} ${trackColor};\n    &::-webkit-scrollbar-thumb {\n      background-color: ${thumbColor};\n    }\n    &::-webkit-scrollbar-track {\n      background-color: ${trackColor};\n    }\n  `;\n};\n","import { transparentize } from 'polished';\n\nimport { css } from '@leafygreen-ui/emotion';\nimport { Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\n\nexport const Side = {\n  Top: 'top',\n  Left: 'left',\n  Right: 'right',\n  Bottom: 'bottom',\n} as const;\nexport type Side = (typeof Side)[keyof typeof Side];\n\nconst BLUR_RADIUS = 16;\nconst SHORT_SIDE_SIZE = 36;\n\nconst shadowThemeColor: Record<Theme, string> = {\n  [Theme.Light]: palette.gray.dark1,\n  [Theme.Dark]: palette.black,\n};\n\nconst shadowOffset: Record<Theme, number> = {\n  [Theme.Light]: 2,\n  [Theme.Dark]: 16,\n};\n\nconst getZIndex = ({\n  isInside,\n  side,\n}: {\n  isInside: boolean;\n  side: Side;\n}): string => {\n  if (!isInside) {\n    return '-1';\n  }\n\n  if (side === Side.Top || side === Side.Left) {\n    return '1';\n  }\n\n  return 'initial';\n};\n\nconst getPositionStyles = ({\n  isInside,\n  shadowColor,\n  shadowOffsetVal,\n  side,\n}: {\n  isInside: boolean;\n  shadowColor: string;\n  shadowOffsetVal: number;\n  side: Side;\n}) => {\n  const sidePosition = isInside ? `-${SHORT_SIDE_SIZE}px` : '0';\n\n  const zIndex = getZIndex({ isInside, side });\n\n  const commonStyles = `\n    content: '';\n    position: absolute;\n    border-radius: 40%;\n    z-index: ${zIndex};\n  `;\n\n  switch (side) {\n    case Side.Top:\n      return `\n        ${commonStyles}\n        top: ${sidePosition};\n        left: 0;\n        right: 0;\n        width: 96%;\n        height: ${SHORT_SIDE_SIZE}px;\n        margin: 0 auto;\n        box-shadow: 0 ${\n          isInside ? '' : '-'\n        }${shadowOffsetVal}px ${BLUR_RADIUS}px ${shadowColor};\n      `;\n    case Side.Left:\n      return `\n        ${commonStyles}\n        top: 0;\n        bottom: 0;\n        left: ${sidePosition};\n        width: ${SHORT_SIDE_SIZE}px;\n        height: 96%;\n        margin: auto 0;\n        box-shadow: ${\n          isInside ? '' : '-'\n        }${shadowOffsetVal}px 0 ${BLUR_RADIUS}px ${shadowColor};\n      `;\n    case Side.Right:\n      return `\n        ${commonStyles}\n        top: 0;\n        bottom: 0;\n        right: ${sidePosition};\n        width: ${SHORT_SIDE_SIZE}px;\n        height: 96%;\n        margin: auto 0;\n        box-shadow: ${\n          isInside ? '-' : ''\n        }${shadowOffsetVal}px 0 ${BLUR_RADIUS}px ${shadowColor};\n      `;\n    case Side.Bottom:\n      return `\n        ${commonStyles}\n        bottom: ${sidePosition};\n        left: 0;\n        right: 0;\n        width: 96%;\n        height: ${SHORT_SIDE_SIZE}px;\n        margin: 0 auto;\n        box-shadow: 0 ${\n          isInside ? '-' : ''\n        }${shadowOffsetVal}px ${BLUR_RADIUS}px ${shadowColor};\n      `;\n    default:\n      return '';\n  }\n};\n\nexport const addOverflowShadow = ({\n  isInside,\n  side,\n  theme,\n}: {\n  isInside: boolean;\n  side: Side;\n  theme: Theme;\n}) => {\n  const pseudoElement =\n    side === Side.Top || side === Side.Left ? '::before' : '::after';\n  const shadowColor = transparentize(0.7, shadowThemeColor[theme]);\n  const shadowOffsetVal = shadowOffset[theme];\n\n  return css`\n    position: relative;\n    ${pseudoElement} {\n      ${getPositionStyles({ isInside, shadowColor, shadowOffsetVal, side })}\n    }\n  `;\n};\n","import { palette } from '@leafygreen-ui/palette';\n\nimport {\n  InteractionState,\n  type PropertyColorRecord,\n  Variant,\n  type VariantColorRecord,\n} from './color.types';\n\nconst { black, blue, gray, green, red, white, yellow } = palette;\n\nconst darkModeBackgroundColors = {\n  [Variant.Primary]: {\n    [InteractionState.Default]: black,\n    [InteractionState.Hover]: gray.dark2,\n    [InteractionState.Focus]: blue.dark3,\n  },\n  [Variant.Secondary]: {\n    [InteractionState.Default]: gray.dark4,\n    [InteractionState.Hover]: gray.dark2,\n    [InteractionState.Focus]: blue.dark3,\n  },\n  [Variant.InversePrimary]: {\n    [InteractionState.Default]: gray.light2,\n    [InteractionState.Hover]: gray.light3,\n    [InteractionState.Focus]: blue.light2,\n  },\n  [Variant.Info]: {\n    [InteractionState.Default]: blue.dark3,\n    [InteractionState.Hover]: blue.dark3,\n    [InteractionState.Focus]: blue.dark3,\n  },\n  [Variant.Warning]: {\n    [InteractionState.Default]: yellow.dark3,\n    [InteractionState.Hover]: yellow.dark3,\n    [InteractionState.Focus]: yellow.dark3,\n  },\n  [Variant.Success]: {\n    [InteractionState.Default]: green.dark3,\n    [InteractionState.Hover]: green.dark3,\n    [InteractionState.Focus]: green.dark3,\n  },\n  [Variant.Error]: {\n    [InteractionState.Default]: red.dark3,\n    [InteractionState.Hover]: red.dark3,\n    [InteractionState.Focus]: red.dark3,\n  },\n  [Variant.Disabled]: {\n    [InteractionState.Default]: gray.dark3,\n    [InteractionState.Hover]: gray.dark3,\n    [InteractionState.Focus]: gray.dark3,\n  },\n} as const satisfies VariantColorRecord;\n\nconst darkModeBorderColors = {\n  [Variant.Primary]: {\n    [InteractionState.Default]: gray.base,\n    [InteractionState.Hover]: gray.base,\n    [InteractionState.Focus]: blue.light1,\n  },\n  [Variant.Secondary]: {\n    [InteractionState.Default]: gray.dark2,\n    [InteractionState.Hover]: gray.dark2,\n    [InteractionState.Focus]: blue.light1,\n  },\n  [Variant.Success]: {\n    [InteractionState.Default]: green.dark1,\n    [InteractionState.Hover]: green.dark1,\n    [InteractionState.Focus]: blue.light1,\n  },\n  [Variant.Error]: {\n    [InteractionState.Default]: red.light1,\n    [InteractionState.Hover]: red.light1,\n    [InteractionState.Focus]: blue.light1,\n  },\n  [Variant.Disabled]: {\n    [InteractionState.Default]: gray.dark2,\n    [InteractionState.Hover]: gray.dark2,\n    [InteractionState.Focus]: gray.dark2,\n  },\n} as const satisfies VariantColorRecord;\n\nconst darkModeIconColors = {\n  [Variant.Primary]: {\n    [InteractionState.Default]: gray.light1,\n    [InteractionState.Hover]: gray.light3,\n    [InteractionState.Focus]: blue.light3,\n  },\n  [Variant.Secondary]: {\n    [InteractionState.Default]: gray.base,\n    [InteractionState.Hover]: gray.light3,\n    [InteractionState.Focus]: blue.light3,\n  },\n  [Variant.InversePrimary]: {\n    [InteractionState.Default]: white,\n    [InteractionState.Hover]: black,\n    [InteractionState.Focus]: blue.dark2,\n  },\n  [Variant.Info]: {\n    [InteractionState.Default]: blue.light1,\n    [InteractionState.Hover]: blue.light1,\n    [InteractionState.Focus]: blue.light1,\n  },\n  [Variant.Warning]: {\n    [InteractionState.Default]: yellow.base,\n    [InteractionState.Hover]: yellow.base,\n    [InteractionState.Focus]: yellow.base,\n  },\n  [Variant.Success]: {\n    [InteractionState.Default]: green.base,\n    [InteractionState.Hover]: green.base,\n    [InteractionState.Focus]: green.base,\n  },\n  [Variant.Error]: {\n    [InteractionState.Default]: red.light1,\n    [InteractionState.Hover]: red.light1,\n    [InteractionState.Focus]: red.light1,\n  },\n  [Variant.Disabled]: {\n    [InteractionState.Default]: gray.dark1,\n    [InteractionState.Hover]: gray.dark1,\n    [InteractionState.Focus]: gray.dark1,\n  },\n} as const satisfies VariantColorRecord;\n\nconst darkModeTextColors = {\n  [Variant.Primary]: {\n    [InteractionState.Default]: gray.light2,\n    [InteractionState.Hover]: gray.light2,\n    [InteractionState.Focus]: blue.light3,\n  },\n  [Variant.Placeholder]: {\n    [InteractionState.Default]: gray.dark1,\n    [InteractionState.Hover]: gray.dark1,\n    [InteractionState.Focus]: gray.dark1,\n  },\n  [Variant.Secondary]: {\n    [InteractionState.Default]: gray.light1,\n    [InteractionState.Hover]: gray.light2,\n    [InteractionState.Focus]: blue.light3,\n  },\n  [Variant.InversePrimary]: {\n    [InteractionState.Default]: black,\n    [InteractionState.Hover]: black,\n    [InteractionState.Focus]: blue.dark2,\n  },\n  [Variant.InverseSecondary]: {\n    [InteractionState.Default]: gray.dark2,\n    [InteractionState.Hover]: black,\n    [InteractionState.Focus]: blue.dark2,\n  },\n  [Variant.Error]: {\n    [InteractionState.Default]: red.light1,\n    [InteractionState.Hover]: red.light1,\n    [InteractionState.Focus]: red.light1,\n  },\n  [Variant.Disabled]: {\n    [InteractionState.Default]: gray.dark1,\n    [InteractionState.Hover]: gray.dark1,\n    [InteractionState.Focus]: gray.dark1,\n  },\n  [Variant.Link]: {\n    [InteractionState.Default]: blue.light1,\n    [InteractionState.Hover]: blue.light1,\n    [InteractionState.Focus]: blue.light1,\n  },\n} as const satisfies VariantColorRecord;\n\nexport const darkModeColors = {\n  background: darkModeBackgroundColors,\n  border: darkModeBorderColors,\n  icon: darkModeIconColors,\n  text: darkModeTextColors,\n} as const satisfies PropertyColorRecord;\n","import { palette } from '@leafygreen-ui/palette';\n\nimport {\n  InteractionState,\n  type PropertyColorRecord,\n  Variant,\n  type VariantColorRecord,\n} from './color.types';\n\nconst { black, blue, gray, green, red, white, yellow } = palette;\n\nconst lightModeBackgroundColors = {\n  [Variant.Primary]: {\n    [InteractionState.Default]: white,\n    [InteractionState.Hover]: gray.light2,\n    [InteractionState.Focus]: blue.light3,\n  },\n  [Variant.Secondary]: {\n    [InteractionState.Default]: gray.light3,\n    [InteractionState.Hover]: gray.light2,\n    [InteractionState.Focus]: blue.light3,\n  },\n  [Variant.InversePrimary]: {\n    [InteractionState.Default]: black,\n    [InteractionState.Hover]: gray.dark3,\n    [InteractionState.Focus]: blue.dark2,\n  },\n  [Variant.Info]: {\n    [InteractionState.Default]: blue.light3,\n    [InteractionState.Hover]: blue.light3,\n    [InteractionState.Focus]: blue.light3,\n  },\n  [Variant.Warning]: {\n    [InteractionState.Default]: yellow.light3,\n    [InteractionState.Hover]: yellow.light3,\n    [InteractionState.Focus]: yellow.light3,\n  },\n  [Variant.Success]: {\n    [InteractionState.Default]: green.light3,\n    [InteractionState.Hover]: green.light3,\n    [InteractionState.Focus]: green.light3,\n  },\n  [Variant.Error]: {\n    [InteractionState.Default]: red.light3,\n    [InteractionState.Hover]: red.light3,\n    [InteractionState.Focus]: red.light3,\n  },\n  [Variant.Disabled]: {\n    [InteractionState.Default]: gray.light2,\n    [InteractionState.Hover]: gray.light2,\n    [InteractionState.Focus]: gray.light2,\n  },\n} as const satisfies VariantColorRecord;\n\nconst lightModeBorderColors = {\n  [Variant.Primary]: {\n    [InteractionState.Default]: gray.base,\n    [InteractionState.Hover]: gray.base,\n    [InteractionState.Focus]: blue.light1,\n  },\n  [Variant.Secondary]: {\n    [InteractionState.Default]: gray.light2,\n    [InteractionState.Hover]: gray.light2,\n    [InteractionState.Focus]: blue.light1,\n  },\n  [Variant.Success]: {\n    [InteractionState.Default]: green.dark1,\n    [InteractionState.Hover]: green.dark1,\n    [InteractionState.Focus]: blue.light1,\n  },\n  [Variant.Error]: {\n    [InteractionState.Default]: red.base,\n    [InteractionState.Hover]: red.base,\n    [InteractionState.Focus]: blue.light1,\n  },\n  [Variant.Disabled]: {\n    [InteractionState.Default]: gray.light1,\n    [InteractionState.Hover]: gray.light1,\n    [InteractionState.Focus]: gray.light1,\n  },\n} as const satisfies VariantColorRecord;\n\nconst lightModeIconColors = {\n  [Variant.Primary]: {\n    [InteractionState.Default]: gray.dark1,\n    [InteractionState.Hover]: black,\n    [InteractionState.Focus]: blue.dark1,\n  },\n  [Variant.Secondary]: {\n    [InteractionState.Default]: gray.base,\n    [InteractionState.Hover]: black,\n    [InteractionState.Focus]: blue.dark1,\n  },\n  [Variant.InversePrimary]: {\n    [InteractionState.Default]: white,\n    [InteractionState.Hover]: white,\n    [InteractionState.Focus]: blue.light2,\n  },\n  [Variant.Info]: {\n    [InteractionState.Default]: blue.base,\n    [InteractionState.Hover]: blue.base,\n    [InteractionState.Focus]: blue.base,\n  },\n  [Variant.Warning]: {\n    [InteractionState.Default]: yellow.dark2,\n    [InteractionState.Hover]: yellow.dark2,\n    [InteractionState.Focus]: yellow.dark2,\n  },\n  [Variant.Success]: {\n    [InteractionState.Default]: green.dark1,\n    [InteractionState.Hover]: green.dark1,\n    [InteractionState.Focus]: green.dark1,\n  },\n  [Variant.Error]: {\n    [InteractionState.Default]: red.base,\n    [InteractionState.Hover]: red.base,\n    [InteractionState.Focus]: red.base,\n  },\n  [Variant.Disabled]: {\n    [InteractionState.Default]: gray.base,\n    [InteractionState.Hover]: gray.base,\n    [InteractionState.Focus]: gray.base,\n  },\n} as const satisfies VariantColorRecord;\n\nconst lightModeTextColors = {\n  [Variant.Primary]: {\n    [InteractionState.Default]: black,\n    [InteractionState.Hover]: black,\n    [InteractionState.Focus]: blue.dark1,\n  },\n  [Variant.Secondary]: {\n    [InteractionState.Default]: gray.dark1,\n    [InteractionState.Hover]: black,\n    [InteractionState.Focus]: blue.dark1,\n  },\n  [Variant.InversePrimary]: {\n    [InteractionState.Default]: white,\n    [InteractionState.Hover]: white,\n    [InteractionState.Focus]: blue.light2,\n  },\n  [Variant.InverseSecondary]: {\n    [InteractionState.Default]: gray.light1,\n    [InteractionState.Hover]: white,\n    [InteractionState.Focus]: blue.light2,\n  },\n  [Variant.Error]: {\n    [InteractionState.Default]: red.base,\n    [InteractionState.Hover]: red.base,\n    [InteractionState.Focus]: red.base,\n  },\n  [Variant.Disabled]: {\n    [InteractionState.Default]: gray.base,\n    [InteractionState.Hover]: gray.base,\n    [InteractionState.Focus]: gray.base,\n  },\n  [Variant.Placeholder]: {\n    [InteractionState.Default]: gray.base,\n    [InteractionState.Hover]: gray.base,\n    [InteractionState.Focus]: gray.base,\n  },\n  [Variant.Link]: {\n    [InteractionState.Default]: blue.base,\n    [InteractionState.Hover]: blue.base,\n    [InteractionState.Focus]: blue.base,\n  },\n} as const satisfies VariantColorRecord;\n\nexport const lightModeColors = {\n  background: lightModeBackgroundColors,\n  border: lightModeBorderColors,\n  icon: lightModeIconColors,\n  text: lightModeTextColors,\n} as const satisfies PropertyColorRecord;\n","import { Theme } from '@leafygreen-ui/lib';\n\nimport { PropertyColorRecord } from './color.types';\nimport { darkModeColors } from './darkModeColors';\nimport { lightModeColors } from './lightModeColors';\n\nexport const color = {\n  [Theme.Dark]: darkModeColors,\n  [Theme.Light]: lightModeColors,\n} as const satisfies Record<Theme, PropertyColorRecord>;\n","/** @deprecated prefer Theme */\nconst Mode = {\n  Dark: 'dark',\n  Light: 'light',\n} as const;\n\n/** @deprecated prefer Theme */\ntype Mode = (typeof Mode)[keyof typeof Mode];\n\nexport { Mode };\n","import { palette } from '@leafygreen-ui/palette';\n\nimport { Mode } from './mode';\n\n/**\n * Apply the `focusRing` token as the `box-shadow` value for any elemnent when focused\n */\nconst focusRing = {\n  [Mode.Light]: {\n    /**\n     * Use the default focus ring for any clickable element\n     */\n    default: `0 0 0 2px ${palette.white}, 0 0 0 4px ${palette.blue.light1}`,\n\n    /**\n     * Use the `input` focus ring for elements that have a cursor\n     */\n    input: `0 0 0 3px ${palette.blue.light1}`,\n  },\n  [Mode.Dark]: {\n    /**\n     * Use the default focus ring for any clickable element\n     */\n    default: `0 0 0 2px ${palette.black}, 0 0 0 4px ${palette.blue.light1}`,\n\n    /**\n     * Use the `input` focus ring for elements that have a cursor\n     */\n    input: `0 0 0 3px ${palette.blue.light1}`,\n  },\n} as const;\n\nexport default focusRing;\n","const fontFamilies = {\n  default: `'Euclid Circular A', 'Helvetica Neue', Helvetica, Arial, sans-serif`,\n  serif: `'MongoDB Value Serif', 'Times New Roman', serif`,\n  code: `'Source Code Pro', Menlo, monospace`,\n} as const;\n\nexport default fontFamilies;\n","export const fontWeights = {\n  regular: 400,\n  medium: 500,\n  semiBold: 600,\n  /**\n   * @deprecated The font face used has always been a semibold font. Even\n   * though a bold weight was offered, it still was rendering a semibold font.\n   * This has been deprecated in favor of {@link semiBold} to more accurately\n   * reflect the font face being used.\n   */\n  bold: 700, // semi-bold inherent to font file is locally defined as bold\n} as const;\n\nexport const FontWeight = {\n  Regular: 'regular',\n  Medium: 'medium',\n  SemiBold: 'semiBold',\n  /** @deprecated - Prefer {@link SemiBold} */\n  Bold: 'bold',\n} as const;\nexport type FontWeight = keyof typeof fontWeights;\n\nexport default fontWeights;\n","import { palette } from '@leafygreen-ui/palette';\n\nimport { Mode } from './mode';\n\n/**\n * Add the `hoverRing` token to the `box-shadow` value of any element when hovered\n */\nconst hoverRing = {\n  [Mode.Light]: {\n    gray: `0 0 0 3px ${palette.gray.light2}`,\n    green: `0 0 0 3px ${palette.green.light2}`,\n    red: `0 0 0 3px ${palette.red.light2}`,\n  },\n  [Mode.Dark]: {\n    gray: `0 0 0 3px ${palette.gray.dark2}`,\n    green: `0 0 0 3px ${palette.green.dark3}`,\n    red: `0 0 0 3px ${palette.yellow.dark3}`, // Yes, yellow\n  },\n} as const;\n\nexport default hoverRing;\n","import { Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\n\nimport { InteractionState, Variant } from '../color/color.types';\nconst { black, gray, white } = palette;\n\nexport const ScrollbarProperty = {\n  Thumb: 'thumb',\n  Track: 'track',\n} as const;\ntype ScrollbarProperty =\n  (typeof ScrollbarProperty)[keyof typeof ScrollbarProperty];\n\nexport type ScrollbarVariant = Extract<Variant, 'primary' | 'secondary'>;\n\nexport interface ScrollbarColorRecord {\n  [ScrollbarProperty.Thumb]: {\n    [Variant.Primary]: {\n      [InteractionState.Default]: string;\n    };\n    [Variant.Secondary]: {\n      [InteractionState.Default]: string;\n    };\n  };\n  [ScrollbarProperty.Track]: {\n    [Variant.Primary]: {\n      [InteractionState.Default]: string;\n    };\n    [Variant.Secondary]: {\n      [InteractionState.Default]: string;\n    };\n  };\n}\n\nconst darkModeScrollbarColors = {\n  thumb: {\n    [Variant.Primary]: {\n      [InteractionState.Default]: gray.base,\n    },\n    [Variant.Secondary]: {\n      [InteractionState.Default]: gray.dark1,\n    },\n  },\n  track: {\n    [Variant.Primary]: {\n      [InteractionState.Default]: black,\n    },\n    [Variant.Secondary]: {\n      [InteractionState.Default]: gray.dark4,\n    },\n  },\n} as const satisfies ScrollbarColorRecord;\n\nconst lightModeScrollbarColors = {\n  thumb: {\n    [Variant.Primary]: {\n      [InteractionState.Default]: gray.base,\n    },\n    [Variant.Secondary]: {\n      [InteractionState.Default]: gray.light1,\n    },\n  },\n  track: {\n    [Variant.Primary]: {\n      [InteractionState.Default]: white,\n    },\n    [Variant.Secondary]: {\n      [InteractionState.Default]: gray.light3,\n    },\n  },\n} as const satisfies ScrollbarColorRecord;\n\n/**\n * Scrollbar colors for dark and light themes.\n *\n * Use the `scrollbar-color` CSS property to set the colors of the scrollbar thumb and track.\n * For Safari, use the `-webkit-scrollbar-thumb` and `-webkit-scrollbar-track` pseudo-elements.\n *\n * Usage:\n * ```tsx\n * import { scrollbarColor } from '@leafygreen-ui/tokens'\n *\n * css`\n *   scrollbar-color: ${scrollbarColor[theme].thumb.primary.default} ${scrollbarColor[theme].track.primary.default};\n *   &::-webkit-scrollbar-thumb {\n *     background-color: ${scrollbarColor[theme].thumb.primary.default};\n *   }\n *   &::-webkit-scrollbar-track {\n *    background-color: ${scrollbarColor[theme].track.primary.default};\n *   }\n * `\n * ;\n *```\n */\nexport const scrollbarColor = {\n  dark: darkModeScrollbarColors,\n  light: lightModeScrollbarColors,\n} as const satisfies Record<Theme, ScrollbarColorRecord>;\n","import { transparentize } from 'polished';\n\nimport { Theme } from '@leafygreen-ui/lib';\nimport { palette } from '@leafygreen-ui/palette';\n\nconst lightModeShadowColor = transparentize(0.75, palette.black);\n\ninterface Value {\n  readonly 100: string;\n}\n\nexport const shadow: Record<Theme, Value> = {\n  [Theme.Light]: {\n    100: `0px 2px 4px 1px ${lightModeShadowColor}`,\n  },\n  [Theme.Dark]: {\n    100: `unset`, // no shadow in dark mode\n  },\n} as const;\n","export const Size = {\n  XSmall: 'xsmall',\n  Small: 'small',\n  Default: 'default',\n  Large: 'large',\n} as const;\n\nexport type Size = (typeof Size)[keyof typeof Size];\n","const spacing = {\n  0: 0,\n  25: 1,\n  50: 2,\n  100: 4,\n  150: 6,\n  200: 8,\n  300: 12,\n  400: 16,\n  500: 20,\n  600: 24,\n  800: 32,\n  900: 36,\n  1000: 40,\n  1200: 48,\n  1400: 56,\n  1600: 64,\n  1800: 72,\n\n  /**  @deprecated use 100 instead */\n  1: 4,\n  /**  @deprecated use 200 instead */\n  2: 8,\n  /**  @deprecated use 400 instead*/\n  3: 16,\n  /**  @deprecated */\n  4: 24,\n  /**  @deprecated */\n  5: 32,\n  /**  @deprecated */\n  6: 64,\n  /**  @deprecated */\n  7: 88,\n} as const;\n\nexport default spacing;\n","const transitionDuration = {\n  faster: 100,\n  default: 150,\n  slower: 300,\n  slowest: 500,\n} as const;\n\nexport default transitionDuration;\n","export const BaseFontSize = {\n  Body1: 13,\n  Body2: 16,\n} as const;\n\nexport type BaseFontSize = (typeof BaseFontSize)[keyof typeof BaseFontSize];\n\n/**\n * Defines font sizes and line heights of common typographic elements.\n * Units are in `px`\n */\nconst typeScales = {\n  body1: {\n    fontSize: BaseFontSize.Body1,\n    lineHeight: 20,\n  } as const,\n  body2: {\n    fontSize: BaseFontSize.Body2,\n    lineHeight: 28,\n  } as const,\n  code1: {\n    fontSize: 13,\n    lineHeight: 20,\n  } as const,\n  code2: {\n    fontSize: 15,\n    lineHeight: 24,\n  } as const,\n  disclaimer: {\n    fontSize: 12,\n    lineHeight: 20,\n  } as const,\n  large: {\n    fontSize: 18,\n    lineHeight: 24,\n  } as const,\n} as const;\n\nexport default typeScales;\n"],"names":["borderRadius$1","breakpoints$1","Mobile","Tablet","Desktop","XLDesktop","_templateObject","Property","Background","Border","Icon","Text","Variant","Disabled","Placeholder","Primary","Secondary","InversePrimary","InverseSecondary","Info","Warning","Error","Success","Link","InteractionState","Default","Hover","Focus","black","palette","blue","gray","green","red","white","yellow","darkModeColors","background","_defineProperty","dark2","dark3","dark4","light2","light3","border","base","light1","dark1","icon","text","lightModeColors","color","Theme","Dark","Light","Mode","focusRing$1","default","concat","input","fontFamilies$1","serif","code","FontWeight","Regular","Medium","SemiBold","Bold","fontWeights$1","regular","medium","semiBold","bold","hoverRing$1","ScrollbarProperty","Thumb","Track","scrollbarColor","dark","thumb","track","light","addScrollbarStyles","_ref","theme","_ref$variant","variant","thumbColor","trackColor","css","_taggedTemplateLiteral","Side","Top","Left","Right","Bottom","shadowThemeColor","shadowOffset","getPositionStyles","_ref2","isInside","shadowColor","shadowOffsetVal","side","sidePosition","zIndex","getZIndex","commonStyles","addOverflowShadow","_ref3","pseudoElement","transparentize","lightModeShadowColor","shadow","Size","XSmall","Small","Large","spacing$1","transitionDuration$1","faster","slower","slowest","BaseFontSize","Body1","Body2","typeScales$1","body1","fontSize","lineHeight","body2","code1","code2","disclaimer","large"],"mappings":"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"}