{"version":3,"file":"index.js","sources":["../../src/createUniqueClassName/index.ts","../../src/DarkModeProps/index.ts","../../src/getNodeTextContent/index.ts","../../src/getTheme.ts","../../src/typeIs.ts","../../src/childQueries/hasStaticProperty/hasStaticProperty.tsx","../../src/childQueries/filterChildren/filterChildren.tsx","../../src/childQueries/isChildWithProperty/isChildWithProperty.ts","../../src/childQueries/unwrapRootFragment/unwrapRootFragment.ts","../../src/childQueries/findChild/findChild.tsx","../../src/childQueries/findChildren/findChildren.ts","../../src/createSyntheticEvent/createSyntheticEvent.ts","../../src/deepMapValues/deepMapValues.ts","../../src/formatCssSize/formatCssSize.ts","../../src/getClosestFocusableElement/getClosestFocusableElement.tsx","../../src/getMobileMediaQuery/getMobileMediaQuery.ts","../../src/helpers/allEqual/index.ts","../../src/helpers/cloneReverse/index.ts","../../src/helpers/consoleOnce/index.ts","../../src/helpers/deepOmit/deepOmit.ts","../../src/helpers/isDefined/index.ts","../../src/helpers/isZeroLike/index.ts","../../src/helpers/pickAndOmit/index.ts","../../src/helpers/rollover/index.ts","../../src/helpers/truncateStart/index.ts","../../src/queryFocusableElements/queryFocusableElements.ts","../../src/validateChildren.tsx","../../src/index.ts"],"sourcesContent":["/**\n * `generateUniqueClassName` creates a string intended to be used as a pseudo-unique className.\n *\n * It returns a consecutive 4-number string prefixed by `lg-ui`, followed by a custom second prefix defined by the `prefix` param.\n *\n * @param prefix: a custom prefix that follows the `lg-ui` prefix.\n */\nconst generateUniqueClassName = (prefix: string) => {\n  const count = classNameRegistry.get(prefix)?.length ?? 0;\n  const postfix = count.toString().padStart(4, '0');\n  return `lg-ui${prefix ? `-${prefix}` : ''}-${postfix}`;\n};\n\nconst classNameRegistry: Map<string, Array<string>> = new Map();\n\nconst createUniqueClassName = (prefix = ''): string => {\n  const uniqueClassName = generateUniqueClassName(prefix);\n\n  if (classNameRegistry.has(prefix)) {\n    const prefixClasses = classNameRegistry.get(prefix);\n    classNameRegistry.set(prefix, [\n      uniqueClassName,\n      ...(prefixClasses as Array<string>),\n    ]);\n  } else {\n    classNameRegistry.set(prefix, [uniqueClassName]);\n  }\n\n  return uniqueClassName;\n};\n\nexport default createUniqueClassName;\n","/**\n * Base interface used by components that support dark mode.\n *\n * @public\n */\nexport default interface DarkModeProps {\n  /**\n   * Renders the component with dark mode styles.\n   *\n   * @default false\n   */\n  darkMode?: boolean;\n}\n\nexport const Theme = { Light: 'light', Dark: 'dark' } as const;\nexport type Theme = (typeof Theme)[keyof typeof Theme];\n","import { FunctionComponent, ReactElement, ReactNode, ReactText } from 'react';\n\n/**\n * Returns the text string of a React node\n */\nexport default function getNodeTextContent(node?: ReactNode): string {\n  if (isText(node)) {\n    return node.toString().trim();\n  }\n\n  if (Array.isArray(node)) {\n    return node.map(getNodeTextContent).join(' ').trim();\n  }\n\n  if (isReactElement(node)) {\n    if (isFunctionalComponent(node)) {\n      const Component = node.type as FunctionComponent<any>;\n      return getNodeTextContent(Component(node.props));\n    }\n\n    return getNodeTextContent(node.props.children);\n  }\n\n  return '';\n}\n\nfunction isFunctionalComponent(item?: any): item is FunctionComponent<any> {\n  return isReactElement(item) && typeof item.type === 'function';\n}\n\nfunction isReactElement(item?: any): item is ReactElement {\n  return item && typeof item === 'object' && item.props;\n}\n\nfunction isText(item?: any): item is ReactText {\n  return typeof item === 'string' || typeof item === 'number';\n}\n","import { Theme } from './DarkModeProps';\n\n/**\n *\n * Given a `darkMode` boolean, returns a `Theme` value - either dark or light.\n *\n * @param darkMode\n * @returns `Theme.Dark || Theme.Light`\n */\nconst getTheme = (darkMode: boolean): Theme =>\n  darkMode ? Theme.Dark : Theme.Light;\n\nexport default getTheme;\n","export function element(node?: Node | null): node is HTMLElement {\n  return node != null && node.nodeType === Node.ELEMENT_NODE;\n}\n\nexport function button(el?: Node | null): el is HTMLButtonElement {\n  return element(el) && el.tagName.toLowerCase() === 'button';\n}\n\nexport function input(el?: Node | null): el is HTMLInputElement {\n  return element(el) && el.tagName.toLowerCase() === 'input';\n}\n\nexport function array(item?: any): item is Array<unknown> {\n  return item != null && item instanceof Array;\n}\n","import { ComponentType } from 'react';\n\n/**\n * Type for things that might have static properties.\n * Includes React component types (functions/objects), HTML tag names (strings), and null/undefined.\n */\ntype ComponentLike =\n  | string // HTML elements like \"div\", \"span\"\n  | ComponentType // Function components\n  | Record<string, any> // Object components (styled components, etc.)\n  | null\n  | undefined;\n\n/**\n * Check if a component has the specified static property.\n * Handles React components, styled components, HTML elements, and forwardRef components.\n *\n * @param component The component to check (React component, HTML tag name, or null/undefined)\n * @param staticProperty The static property name to check for\n * @returns True if the component has the static property\n *\n * @example\n * ```ts\n * // Regular component\n * const MyComponent = () => <div />;\n * MyComponent.isMyComponent = true;\n * hasStaticProperty(MyComponent, 'isMyComponent'); // true\n *\n * // Styled component\n * const StyledComponent = styled(MyComponent)`color: red;`;\n * hasStaticProperty(StyledComponent, 'isMyComponent'); // true (via .target)\n *\n * // HTML element (returns false)\n * hasStaticProperty('div', 'someProp'); // false\n * ```\n */\nexport function hasStaticProperty(\n  component: ComponentLike,\n  staticProperty: string,\n): boolean {\n  if (!component || typeof component === 'string') return false;\n\n  return !!(\n    (component as any)[staticProperty] || // Direct property on component\n    (component as any).target?.[staticProperty] || // Standard styled() components: original component is stored in .target\n    // For components created by styled() wrapping a component that uses React.forwardRef,\n    // Emotion does NOT hoist static properties to the styled wrapper. Instead, the original\n    // component is stored in .__emotion_base, and static properties must be checked there.\n    // This is required for correct detection when styled wraps a forwardRef component.\n    (component as any).__emotion_base?.[staticProperty]\n  );\n}\n\n/**\n * Check if a component has any of the specified static properties.\n * Handles React components, styled components, HTML elements, and forwardRef components.\n *\n * @param component The component to check (React component, HTML tag name, or null/undefined)\n * @param staticProperties Array of static property names to check for\n * @returns True if the component has any of the static properties\n *\n * @example\n * ```ts\n * // Check multiple properties\n * const MyComponent = () => <div />;\n * MyComponent.isButton = true;\n * hasAnyStaticProperty(MyComponent, ['isButton', 'isInput']); // true\n * hasAnyStaticProperty(MyComponent, ['isInput', 'isSelect']); // false\n * ```\n */\nexport function hasAnyStaticProperty(\n  component: ComponentLike,\n  staticProperties: Array<string>,\n): boolean {\n  return staticProperties.some(property =>\n    hasStaticProperty(component, property),\n  );\n}\n","import { Children, Fragment, isValidElement, ReactNode } from 'react';\n\nimport { hasAnyStaticProperty } from '../hasStaticProperty';\n\n/**\n * Filter out child components that have any of the specified static properties\n *\n * **Search Depth:** This function only searches 1 level deep:\n * - Direct children of the provided children\n * - Direct children inside React.Fragment components (1 level of fragment nesting)\n * - Does NOT recursively search nested fragments or deeply nested components\n *\n * **Styled Component Support:** Checks component.target and component.__emotion_base\n * for styled() wrapped components.\n *\n * @example\n * ```ts\n * // ✅ Will filter out: Direct children with matching properties\n * <Foo isFoo={true} />\n *\n * // ✅ Will filter out: Children inside fragments with matching properties\n * <><Bar isBar={true} /></>\n *\n * // ❌ Will NOT filter: Nested fragments\n * <><><Baz isBaz={true} /></></>\n *\n * // ❌ Will NOT filter: Deeply nested\n * <div><Foo isFoo={true} /></div>\n * ```\n *\n * @param children Any React children\n * @param staticPropertiesToExclude Array of static property names to filter out\n * @returns ReactNode with matching components filtered out\n */\nexport const filterChildren = (\n  children: ReactNode,\n  staticPropertiesToExclude: Array<string>,\n): ReactNode => {\n  // Handle empty/null children - Children.map returns null for these cases\n  if (!children) return [];\n\n  return Children.map(children, child => {\n    if (!isValidElement(child)) return child;\n\n    // Handle fragments by filtering their children\n    if (child.type === Fragment) {\n      // Children.map automatically flattens the returned array,\n      // maintaining the fragment flattening behavior\n      return Children.map(child.props.children, fragmentChild => {\n        if (!isValidElement(fragmentChild)) return fragmentChild;\n\n        if (\n          hasAnyStaticProperty(fragmentChild.type, staticPropertiesToExclude)\n        ) {\n          return null; // Filter out - React ignores null returns\n        }\n\n        return fragmentChild;\n      });\n    }\n\n    // Filter direct children\n    if (hasAnyStaticProperty(child.type, staticPropertiesToExclude)) {\n      return null; // Filter out - React ignores null returns\n    }\n\n    return child;\n  });\n};\n","import {\n  Children,\n  ComponentType,\n  isValidElement,\n  ReactElement,\n  ReactNode,\n} from 'react';\n\nimport { hasStaticProperty } from '../hasStaticProperty';\n\nexport const isChildWithProperty = <S extends string>(\n  child: ReactNode,\n  staticProperty: S,\n): child is ReactElement<any, ComponentType & { [K in S]: any }> => {\n  if (!isValidElement(child)) return false;\n\n  // child must be a single node\n  if (Children.count(child) !== 1) return false;\n\n  return hasStaticProperty(child.type, staticProperty);\n};\n","import { Children, Fragment, isValidElement, ReactNode } from 'react';\n\n/**\n * If the provided `ReactNode` is a single Fragment,\n * return the children of that fragment.\n *\n * Otherwise, returns the `children` or an empty array\n *\n * @example\n * ```tsx\n * unwrapRootFragment(\n *  <Fragment>\n *    <Foo />\n *    <Bar />\n *  </Fragment>\n * ) // [<Foo />, <Bar />]\n * ```\n */\nexport const unwrapRootFragment = (\n  children: ReactNode,\n): Array<ReactNode> | undefined => {\n  if (!children) return undefined;\n\n  if (Children.count(children) === 0) {\n    return [];\n  }\n\n  if (Children.count(children) === 1) {\n    const rootChild = Children.toArray(children)[0];\n\n    if (isValidElement(rootChild) && rootChild.type === Fragment) {\n      return Children.toArray(rootChild.props.children);\n    }\n\n    return [children];\n  }\n\n  return children as Array<ReactNode>;\n};\n","import { Children, ReactElement, ReactNode } from 'react';\n\nimport { isChildWithProperty } from '../isChildWithProperty';\nimport { unwrapRootFragment } from '../unwrapRootFragment';\n\n/**\n * Find the first child component with a matching static property\n *\n * **Search Depth:** This function only searches 1 level deep:\n * - Direct children of the provided children\n * - Direct children inside React.Fragment components (1 level of fragment nesting)\n * - Does NOT recursively search nested fragments or deeply nested components\n *\n * **Styled Component Support:** Checks component.target and component.__emotion_base\n * for styled() wrapped components.\n *\n * @example\n * ```ts\n * // ✅ Will find: Direct child\n * findChild(<Foo />, 'isFoo') // <Foo />\n *\n * // ✅ Will find: Child inside a single fragment\n * findChild(<><Foo /></>, 'isFoo') // <Foo />\n *\n * // ❌ Will NOT find: Deeply nested fragments\n * findChild(<><><Foo /></></>, 'isFoo') // undefined\n *\n * // ❌ Will NOT find: Nested in other elements\n * findChild(<div><Foo /></div>, 'isFoo') // undefined\n * ```\n *\n * @param children Any React children\n * @param staticProperty The static property name to check for\n * @returns The first matching ReactElement or undefined if not found\n */\nexport const findChild = (\n  children: ReactNode,\n  staticProperty: string,\n): ReactElement | undefined => {\n  if (!children || Children.count(children) === 0) {\n    return undefined;\n  }\n\n  const allChildren = unwrapRootFragment(children);\n\n  return allChildren?.find(child =>\n    isChildWithProperty(child, staticProperty),\n  ) as ReactElement | undefined;\n};\n","import { ReactElement, ReactNode } from 'react';\n\nimport { isChildWithProperty } from '../isChildWithProperty';\nimport { unwrapRootFragment } from '../unwrapRootFragment';\n\n/**\n *\n * Finds all children with a matching static property\n *\n * * **Search Depth:** This function only searches 1 level deep:\n * - Direct children of the provided children\n * - Direct children inside React.Fragment components (1 level of fragment nesting)\n * - Does NOT recursively search nested fragments or deeply nested components\n *\n * **Styled Component Support:** Checks component.target and component.__emotion_base\n * for styled() wrapped components.\n *\n *  * @example\n * ```ts\n * // ✅ Will find: Direct children\n * findChildren([\n *   <Foo />,\n *   <Foo />\n * ], 'isFoo') // [<Foo />, <Foo />]\n *\n * // ✅ Will find: Children inside a single fragment\n * findChildren((\n *   <>\n *     <Foo />\n *     <Foo />\n *   </>\n * ), 'isFoo') // [<Foo />, <Foo />]\n *\n * // ❌ Will NOT find: Deeply nested fragments\n * findChildren((\n *   <>\n *     <>\n *       <Foo />\n *     </>\n *   </>\n * ), 'isFoo') // []\n *\n * // ❌ Will NOT find: Nested in other elements\n * findChildren(<div><Foo /></div>, 'isFoo') // []\n * ```\n *\n * @param children Any React children\n * @param staticProperty The static property name to check for\n * @returns All matching ReactElements (or empty array if not found)\n */\nexport const findChildren = (\n  children: ReactNode,\n  staticProperty: string,\n): Array<ReactElement> => {\n  const allChildren = unwrapRootFragment(children);\n\n  if (!allChildren) return [];\n\n  return allChildren.filter(child =>\n    isChildWithProperty(child, staticProperty),\n  ) as Array<ReactElement>;\n};\n","import React from 'react';\n\n/**\n * Creates a React SyntheticEvent based on the provided native event and target.\n *\n * Based on https://stackoverflow.com/a/68979462/2200383\n */\nexport const createSyntheticEvent = <\n  ReactEventType extends React.SyntheticEvent<TargetType, NativeEventType>,\n  TargetType extends Element | EventTarget = Element,\n  NativeEventType extends Event = Event,\n>(\n  event: NativeEventType,\n  target: TargetType,\n): ReactEventType => {\n  // Assign the target property to the event\n  Object.defineProperty(event, 'target', { writable: false, value: target });\n\n  let isDefaultPrevented = false;\n  let isPropagationStopped = false;\n\n  const preventDefault = () => {\n    isDefaultPrevented = true;\n    event.preventDefault();\n  };\n\n  const stopPropagation = () => {\n    isPropagationStopped = true;\n    event.stopPropagation();\n  };\n\n  const syntheticEvent = {\n    nativeEvent: event,\n    ...event,\n    currentTarget: event.currentTarget as EventTarget & TargetType,\n    target: event.target as EventTarget & TargetType,\n    bubbles: event.bubbles,\n    cancelable: event.cancelable,\n    defaultPrevented: event.defaultPrevented,\n    eventPhase: event.eventPhase,\n    isTrusted: event.isTrusted,\n    timeStamp: event.timeStamp,\n    type: event.type,\n    preventDefault,\n    isDefaultPrevented: () => isDefaultPrevented,\n    stopPropagation,\n    isPropagationStopped: () => isPropagationStopped,\n    persist: () => {},\n  };\n\n  return syntheticEvent as unknown as ReactEventType;\n};\n","import type { ObjectIterator } from 'lodash';\nimport mapValues from 'lodash/mapValues';\n\n/**\n * Recursively maps the values of an object using a callback function.\n */\nexport const deepMapValues = <TObj extends object, TReturn>(\n  obj: TObj | null | undefined,\n  callback: ObjectIterator<any, TReturn>,\n): { [K in keyof TObj]: any } => {\n  const cb: ObjectIterator<TObj, TReturn | any> = (val, key, collection) => {\n    if (typeof val === 'object') {\n      return deepMapValues(val, callback);\n    }\n\n    return callback(val, key, collection);\n  };\n\n  return mapValues(obj, cb);\n};\n","/**\n * Formats a number or string value into a valid CSS size string.\n * If the value is a number or a numeric string, it appends 'px'.\n * If the value is a string with units, it returns it as is.\n *\n * This utility improves developer experience by making components more\n * forgiving with size-related props.\n *\n * @param value - The value to format, e.g., 100, \"100\", or \"100px\".\n * @returns A valid CSS size string (e.g., \"100px\") or undefined if the input is invalid.\n *\n * @example\n * formatCssSize(100);       // \"100px\"\n * formatCssSize(\"100\");    // \"100px\"\n * formatCssSize(\"100px\");   // \"100px\"\n * formatCssSize(\"5rem\");    // \"5rem\"\n * formatCssSize(\"auto\");    // \"auto\"\n * formatCssSize(undefined); // undefined\n */\nexport const formatCssSize = (value: number | string): string => {\n  // If the value is a number, simply append 'px'.\n  if (typeof value === 'number') {\n    return `${value}px`;\n  }\n\n  const trimmedValue = value.trim();\n\n  // If the value is a string, check if it's purely numeric.\n  // `isFinite` is used to correctly handle string-to-number conversion\n  // and reject strings that already have units (e.g., \"100px\").\n  if (\n    typeof trimmedValue === 'string' &&\n    !isNaN(parseFloat(trimmedValue)) &&\n    isFinite(Number(trimmedValue))\n  ) {\n    return `${trimmedValue}px`;\n  }\n\n  // If it's a string that's not purely numeric (e.g., \"5rem\", \"auto\"),\n  // return it directly, assuming it's a valid CSS value.\n  return trimmedValue;\n};\n","const focusableSelectors = [\n  'a',\n  'button',\n  'frame',\n  'iframe',\n  'input:not([type=hidden])',\n  'select',\n  'textarea',\n  '*[tabindex]',\n] as const;\n\nconst focusableSelectorString = focusableSelectors.join(', ');\n\n/**\n * Crawls up the DOM tree (using `el.closest`) to find the closest focusable element.\n * Returns the element itself if it is focusable.\n * If no focusable element is found, it returns the body element.\n *\n * This is useful for ensuring that focus is returned to a valid element\n * after an event, such as a click or key press.\n */\nexport const getClosestFocusableElement = (el: HTMLElement): HTMLElement => {\n  const focusableElement = el.closest(\n    focusableSelectorString,\n  ) as HTMLElement | null;\n  return focusableElement ?? document.body;\n};\n","const _baseQuery = (size: number) =>\n  `@media only screen and (max-width: ${size}px) and (hover: none)`;\n\n/** Any screen with no pointer, or a coarse pointer and no hover capability (i.e. touch screen)\n * For more details, see: https://css-tricks.com/touch-devices-not-judged-size/\n * @param size - The maximum width of the screen\n */\nexport const getMobileMediaQuery = (size: number) =>\n  `${_baseQuery(size)} and (pointer: coarse), ${_baseQuery(\n    size,\n  )} and (pointer: none)`;\n","/**\n * Utility function that checks if the values in an array are all equal\n *\n *\n * @param arr `Array<any>`\n * @returns boolean\n */\nexport function allEqual<T>(arr: Array<T>): boolean {\n  return new Set(arr).size == 1;\n}\n","export const cloneReverse = <T extends any>(\n  arr?: Array<T>,\n): Array<T> | undefined => {\n  if (!(arr && Array.isArray(arr))) return;\n\n  const clone = [...arr];\n  clone.reverse();\n  return clone;\n};\n","import once from 'lodash/once';\n\nexport const consoleOnce = {\n  error: once(console.error),\n  warn: once(console.warn),\n  log: once(console.log), // eslint-disable-line no-console\n};\n","import isObject from 'lodash/isObject';\nimport omit from 'lodash/omit';\n\n/**\n * Deeply omits properties from an object based on specified paths.\n *\n * @example\n * ```ts\n * const obj = {\n *  a: 1,\n *  b: {\n *   c: 2,\n *   d: 3,\n *   e: {\n *    f: 4\n *   }\n *  }\n * };\n * deepOmit(obj, ['b.d', 'b.e.f']);\n * // returns { a: 1, b: { c: 2, e: {} } }\n *```\n * @param obj\n * @param paths\n * @returns\n */\nexport function deepOmit(obj: Record<string, any>, paths: Array<string>) {\n  const omittedObject: Record<string, any> = omit(obj, paths);\n\n  for (const key in omittedObject) {\n    const value = omittedObject[key];\n\n    if (\n      isObject(value) &&\n      // Only transform simple objects, not arrays or other complex classes\n      value.constructor === Object\n    ) {\n      // Filter and transform paths for the nested object\n      const nestedPaths = paths\n        .filter(p => p.startsWith(key + '.'))\n        .map(p => p.slice(key.length + 1));\n      omittedObject[key] = deepOmit(omittedObject[key], nestedPaths);\n    }\n  }\n\n  return omittedObject;\n}\n","import isNull from 'lodash/isNull';\nimport isUndefined from 'lodash/isUndefined';\n\n/** Whether the value is _not_ `null` or `undefined` */\nexport const isDefined = <T>(\n  val: T | null | undefined,\n): val is Exclude<T, null | undefined> => {\n  return !isUndefined(val) && !isNull(val);\n};\n","import { isDefined } from '../isDefined';\n\n/** Returns whether the provided value is some form of zero value */\nexport const isZeroLike = (val: any) =>\n  !isDefined(val) || ['', '0', '00', 0].includes(val);\n\n/** Returns whether the provided value is _not_ some form of zero value */\nexport const isNotZeroLike = (val: any) => !isZeroLike(val);\n","import omit from 'lodash/omit';\nimport pick from 'lodash/pick';\n\n/**\n * Returns an array of 2 objects,\n * first, the result of calling `_.pick`,\n * second, the result of calling `_.omit`\n *\n * e.g.\n * ```js\n * const obj = { a: 'A', b: 'B', c: 'C', d: 'D' }\n * pickAndOmit(obj, ['a', 'b']) // [{a: \"A\", b: \"B\"}, {c: \"C\", d: \"D\"}]\n * ```\n */\nexport const pickAndOmit = <T extends object, K extends keyof T>(\n  object: T,\n  keys: Array<K>,\n): [Pick<T, K>, Omit<T, K>] => {\n  const picked = pick(object, keys);\n  const omitted = omit(object, keys);\n\n  return [picked, omitted];\n};\n","/**\n * Returns value if it is between lower & upper bounds (inclusive).\n * Returns the difference between value & relevant bound if outside the bounds\n *\n * e.g.:\n * `rollover(6, 1, 5) // 1`\n * `rollover(0, 1, 5) // 5`\n */\nexport const rollover = (\n  value: number,\n  lowerBound: number,\n  upperBound: number,\n): number => {\n  const range = upperBound - lowerBound;\n\n  if (value > upperBound) {\n    const diff = value - upperBound - 1;\n    return lowerBound + (diff % range);\n  } else if (value < lowerBound) {\n    const diff = lowerBound - value - 1;\n    return upperBound - (diff % range);\n  }\n\n  return value;\n};\n","interface TruncateStartOptions {\n  length: number;\n  // TODO: Match this interface with lodash options\n  // https://lodash.com/docs/4.17.15#truncate\n}\n\nconst defaultTruncateStartOptions = {\n  length: 30,\n} as const;\n\n/** Truncates a string to a given length, starting from the front */\nexport const truncateStart = (\n  str: string,\n  { length }: TruncateStartOptions = defaultTruncateStartOptions,\n): string => {\n  if (str.length <= length) return str;\n  return str.substring(str.length - length);\n};\n","import last from 'lodash/last';\n\nconst notNegativeTabIndex = ':not([tabindex=\"-1\"])';\nconst notHidden = ':not([type=\"hidden\"])';\nconst notDisabled = ':not([disabled])';\n\n/**\n * Selectors for focusable elements in the DOM.\n *\n * Each of these elements can receive tab-focus,\n * and is not hidden or disabled.\n */\nconst baseFocusableElementSelectors = [\n  'button',\n  'a',\n  'input',\n  'select',\n  'textarea',\n  '[tabindex]',\n] as const;\nexport const focusableElementSelector = baseFocusableElementSelectors\n  .map(\n    selector => `${selector}${notNegativeTabIndex}${notHidden}${notDisabled}`,\n  )\n  .join(',');\n\n/**\n * Returns all focusable elements within a given element\n *\n * Focusable elements defined in the constant {@link baseFocusableElementSelectors}\n */\nexport const queryAllFocusableElements = (\n  root: HTMLElement = document.body,\n): Array<HTMLElement> => {\n  const focusableElements = root.querySelectorAll(focusableElementSelector);\n  return Array.from(focusableElements) as Array<HTMLElement>;\n};\n\n/**\n * Returns the first focusable element within a given element\n *\n * Focusable elements defined in the constant {@link baseFocusableElementSelectors}\n */\nexport const queryFirstFocusableElement = (\n  root: HTMLElement = document.body,\n): HTMLElement | null => {\n  const first = root.querySelector(focusableElementSelector);\n  return first as HTMLElement;\n};\n\n/**\n * Returns the last focusable element within a given element\n *\n * Focusable elements defined in the constant {@link baseFocusableElementSelectors}\n */\nexport const queryLastFocusableElement = (\n  root: HTMLElement = document.body,\n): HTMLElement | null => {\n  const allElements = queryAllFocusableElements(root);\n  return allElements.length ? last(allElements) ?? null : null;\n};\n","import React, { ReactElement } from 'react';\nimport isObject from 'lodash/isObject';\nimport isUndefined from 'lodash/isUndefined';\n\nimport { consoleOnce } from '.';\n\n/** Helper type to check if element is a specific React Component  */\nexport function isComponentType<\n  T extends React.ReactElement = React.ReactElement,\n>(element: React.ReactNode, displayName: string): element is T {\n  return (\n    element != null &&\n    typeof element === 'object' &&\n    'type' in element &&\n    ((element.type as any).displayName === displayName ||\n      // TODO: temp solution; Components using InferredPolymorphic have a displayName inside render.\n      // https://jira.mongodb.org/browse/LG-3232\n      (isObject(element.type as any) &&\n        'render' in (element.type as any) &&\n        (element.type as any).render?.displayName === displayName))\n  );\n}\n\n/**\n * Filters children down to a restricted set of component types.\n *\n * Example:\n * ```ts\n * // `options` will only include `ComboboxOption` components,\n * // and log an error to the console for any invalid children\n * const options = validateChildren(children, ['ComboboxOption'])\n * ```\n *\n * @returns Array<ReactElement>\n */\nexport const validateChildren = (\n  /** Any React children */\n  children: React.ReactNode,\n  /** Array of `displayNames` for valid components */\n  validTypes: Array<string>,\n): Array<ReactElement> | undefined => {\n  const validChildren = React.Children.map(children, child => {\n    if (validTypes.some(type => isComponentType(child, type))) {\n      return child as React.ReactElement;\n    }\n  })?.filter(child => !isUndefined(child));\n\n  if (\n    !isUndefined(children) &&\n    validChildren?.length !== React.Children.count(children)\n  ) {\n    consoleOnce.error(\n      `Children must be one of: ${validTypes.join(', ')}`,\n      `Received children: `,\n      children,\n    );\n  }\n\n  return validChildren;\n};\n","import createUniqueClassName from './createUniqueClassName';\nimport DarkModeProps, { Theme } from './DarkModeProps';\nimport getNodeTextContent from './getNodeTextContent';\nimport getTheme from './getTheme';\nimport { type LgIdProps, type LgIdString } from './LgIdProps';\nimport * as typeIs from './typeIs';\nexport {\n  /** @deprecated Use the utility exported from `@leafygreen-ui/compound-component` */\n  filterChildren,\n  /** @deprecated Use the utility exported from `@leafygreen-ui/compound-component` */\n  findChild,\n  /** @deprecated Use the utility exported from `@leafygreen-ui/compound-component` */\n  findChildren,\n  /** @deprecated Use the utility exported from `@leafygreen-ui/compound-component` */\n  hasAnyStaticProperty,\n  /** @deprecated Use the utility exported from `@leafygreen-ui/compound-component` */\n  hasStaticProperty,\n  /** @deprecated Use the utility exported from `@leafygreen-ui/compound-component` */\n  isChildWithProperty,\n} from './childQueries';\nexport { createSyntheticEvent } from './createSyntheticEvent';\nexport { deepMapValues } from './deepMapValues';\nexport { formatCssSize } from './formatCssSize';\nexport { getClosestFocusableElement } from './getClosestFocusableElement';\nexport { getMobileMediaQuery } from './getMobileMediaQuery';\nexport * from './helpers';\nexport {\n  focusableElementSelector,\n  queryAllFocusableElements,\n  queryFirstFocusableElement,\n  queryLastFocusableElement,\n} from './queryFocusableElements';\nexport type {\n  Concat,\n  DeepKeys,\n  DeepPartial,\n  DeepPathValues,\n  DeepPick,\n  DeepUnion,\n  ExclusiveUnion,\n  Exists,\n  Mutable,\n  Only,\n  Optional,\n  PartialRequired,\n  RecursiveRecord,\n  ValuesOf,\n} from './types';\nexport { isComponentType, validateChildren } from './validateChildren';\n\nexport { createUniqueClassName, getNodeTextContent, getTheme, Theme, typeIs };\nexport type { DarkModeProps, LgIdProps, LgIdString };\n\n/**\n * Helper type to extract an HTML element's valid props\n *\n * @deprecated - Prefer the built-in React type {@link React.ComponentProps}\n * */\nexport type HTMLElementProps<\n  Element extends keyof JSX.IntrinsicElements,\n  RefType extends HTMLElement = never,\n> = React.PropsWithChildren<Omit<JSX.IntrinsicElements[Element], 'ref'>> & {\n  ref?: [RefType] extends [never] ? never : React.Ref<RefType>;\n  key?: React.Key | null;\n};\n\n/**\n * Helper that constructs a type requiring at least one of the passed keys\n * to be present in the passed interface.\n *\n * Example\n * ```\n * interface ExampleInterface {\n *   alwaysRequired: boolean,\n *   sometimesRequired: boolean,\n *   requiredOtherTimes: boolean,\n * }\n *\n * type ExampleEither = Either<ExampleInterface, 'sometimesRequired' | 'requiredOtherTimes'>\n *\n * // The above is equivalent to:\n * interface SharedInExampleInterface {\n *   alwaysRequired: boolean,\n * }\n *\n * interface FirstIsRequired extends SharedInExampleInterface {\n *   sometimesRequired: boolean,\n *   requiredOtherTimes?: boolean,\n * }\n *\n * interface SecondIsRequired extends SharedInExampleInterface {\n *   sometimesRequired?: boolean,\n *   requiredOtherTimes: boolean,\n * }\n *\n * type EquivalentToExampleEither = FirstIsRequired | SecondIsRequired\n * ```\n */\nexport type Either<T, Keys extends keyof T = keyof T> = Omit<T, Keys> &\n  {\n    [K in Keys]-?: Required<Pick<T, K>> & Partial<Pick<T, Exclude<Keys, K>>>;\n  }[Keys];\n\n/**\n * Helper that constructs mutually exclusive record types. Refer to tests for usage.\n */\nexport type OneOf<T1, T2> =\n  | (T1 & Partial<Record<Exclude<keyof T2, keyof T1>, never>>)\n  | (T2 & Partial<Record<Exclude<keyof T1, keyof T2>, never>>);\n\n/**\n * Utility for making it easier to couple a React Component to a css selector.\n * Useful when writing css selectors that rely on interactivity, i.e. :hover.\n * Example:\n *  const checkBoxWrapper = createDataProp('checkbox-wrapper');\n *  // Used as selector:\n *  css`&:hover ${checkboxWrapper.selector} { }`\n *  // Used on React Component\n *  <div {...checkboxWrapper.prop} />\n * @param {string} name Name of element we want to reference.\n *\n * @deprecated\n */\nexport function createDataProp(name: string) {\n  // ts:emit throws an error if this is not typed. Usually this can be inferred.\n  const prefix = 'data-leafygreen-ui' as string;\n\n  return {\n    prop: {\n      [prefix]: name,\n    },\n    selector: `[${prefix}=\"${name}\"]`,\n  };\n}\n\n/** Object mapping keyCodes to keys */\nexport const keyMap = {\n  ArrowUp: 'ArrowUp',\n  ArrowDown: 'ArrowDown',\n  ArrowLeft: 'ArrowLeft',\n  ArrowRight: 'ArrowRight',\n  Backspace: 'Backspace',\n  BracketLeft: '[',\n  Delete: 'Delete',\n  Enter: 'Enter',\n  Escape: 'Escape',\n  Space: ' ',\n  Tab: 'Tab',\n} as const;\n\n/**\n * An enum of accepted values for the \"aria-current\" attribute, used for\n * indicating current/active state across several contexts.\n *\n * The values \"false\", the empty string, and an ommission of this attribute\n * are all treated identically by user agents and screen readers.\n *\n * W3C Recommendation: https://www.w3.org/TR/wai-aria-1.1/#aria-current\n */\nexport const AriaCurrentValue = {\n  Page: 'page', // current value in a set of pagination links\n  Step: 'step', // current value in a step indicator\n  Location: 'location', // current value in a chart or other visual flow\n  Date: 'date', // current value in a calendar or date picker\n  Time: 'time', // current value in a timetable or time picker\n  True: 'true', // (fallback) current value in any set of options/elements\n  Unset: 'false', // equivalent to omitting the aria-current attribute\n} as const;\n\nexport type AriaCurrentValue =\n  (typeof AriaCurrentValue)[keyof typeof AriaCurrentValue];\n\n/**\n * Accepts a type as an argument and makes all of the keys of the type optional\n */\nexport type RecursivePartial<T> = {\n  [P in keyof T]?: T[P] extends Array<infer U>\n    ? Array<RecursivePartial<U>>\n    : T[P] extends object\n    ? RecursivePartial<T[P]>\n    : T[P] extends infer U | undefined\n    ? RecursivePartial<U> | undefined\n    : T[P] extends infer U | null\n    ? RecursivePartial<U> | null\n    : T[P];\n};\n\n/**\n * Helper function to use the typechecker to catch when\n * not all cases of a type have been handled.\n *\n * Example 1:\n *   let color: 'red' | 'blue' | 'green';\n *   switch (color) {\n *      case 'red':\n *        ...\n *        break;\n *      case 'blue':\n *        ...\n *        break;\n *      default:\n *        enforceExhaustive(color);\n *                          ^^^^^\n *          Argument of type 'string' is not assignable to parameter of type 'never'.\n *   }\n *\n * Example 2:\n *   let key: number | string | symbol;\n *\n *   if (typeof key === 'string') {\n *     ...\n *     return;\n *   }\n *\n *   if (typeof key === 'number') {\n *      ...\n *      return;\n *   }\n *\n *   enforceExhaustive(key);\n *                     ^^^\n *     Argument of type 'symbol' is not assignable to parameter of type 'never'.\n */\nexport function enforceExhaustive(value: never): never {\n  throw Error(`Received unhandled value: ${value}`);\n}\n"],"names":["classNameRegistry","Map","createUniqueClassName$1","prefix","arguments","length","undefined","uniqueClassName","_classNameRegistry$ge","_classNameRegistry$ge2","postfix","get","toString","padStart","concat","generateUniqueClassName","has","prefixClasses","set","_toConsumableArray","Theme","Light","Dark","getNodeTextContent","node","item","trim","Array","isArray","map","join","isReactElement","type","isFunctionalComponent","Component","props","children","_typeof","getTheme$1","darkMode","element","nodeType","Node","ELEMENT_NODE","el","tagName","toLowerCase","hasStaticProperty","component","staticProperty","_target","_emotion_base","target","__emotion_base","hasAnyStaticProperty","staticProperties","some","property","filterChildren","staticPropertiesToExclude","Children","child","isValidElement","Fragment","fragmentChild","isChildWithProperty","count","unwrapRootFragment","rootChild","toArray","findChild","allChildren","find","findChildren","filter","createSyntheticEvent","event","Object","defineProperty","writable","value","_isDefaultPrevented","_isPropagationStopped","_objectSpread","nativeEvent","currentTarget","bubbles","cancelable","defaultPrevented","eventPhase","isTrusted","timeStamp","preventDefault","isDefaultPrevented","stopPropagation","isPropagationStopped","persist","_deepMapValues","obj","callback","mapValues","val","key","collection","formatCssSize","trimmedValue","isNaN","parseFloat","isFinite","Number","focusableSelectorString","getClosestFocusableElement","focusableElement","closest","document","body","_baseQuery","size","getMobileMediaQuery","allEqual","arr","Set","cloneReverse","clone","reverse","consoleOnce","error","once","console","warn","log","deepOmit","paths","omittedObject","omit","_loop","isObject","constructor","nestedPaths","p","startsWith","slice","isDefined","isUndefined","isNull","isZeroLike","includes","isNotZeroLike","pickAndOmit","object","keys","pick","rollover","lowerBound","upperBound","range","defaultTruncateStartOptions","truncateStart","str","substring","focusableElementSelector","selector","queryAllFocusableElements","focusableElements","querySelectorAll","from","queryFirstFocusableElement","querySelector","queryLastFocusableElement","_last","root","allElements","last","isComponentType","displayName","_render","render","validateChildren","validTypes","_React$Children$map","validChildren","React","createDataProp","name","prop","_defineProperty","keyMap","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","Backspace","BracketLeft","Delete","Enter","Escape","Space","Tab","AriaCurrentValue","Page","Step","Location","Date","Time","True","Unset","enforceExhaustive","Error"],"mappings":"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"}