[
  {
    "tags": {},
    "description": "",
    "methods": [],
    "displayName": "createUniqueClassName",
    "props": {
      "String": "",
      "RelativeIndexable": {
        "at": {
          "name": "at",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(index: number) => string"
          },
          "tags": {}
        }
      }
    }
  },
  {
    "tags": {},
    "description": "Crawls up the DOM tree (using `el.closest`) to find the closest focusable element.\nReturns the element itself if it is focusable.\nIf no focusable element is found, it returns the body element.\n\nThis is useful for ensuring that focus is returned to a valid element\nafter an event, such as a click or key press.",
    "methods": [],
    "displayName": "getClosestFocusableElement",
    "props": {
      "HTMLElement": {
        "accessKey": {
          "name": "accessKey",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/accessKey)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "accessKeyLabel": {
          "name": "accessKeyLabel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/accessKeyLabel)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "autocapitalize": {
          "name": "autocapitalize",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/autocapitalize)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "dir": {
          "name": "dir",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dir)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "draggable": {
          "name": "draggable",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/draggable)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "hidden": {
          "name": "hidden",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/hidden)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "inert": {
          "name": "inert",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/inert)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "innerText": {
          "name": "innerText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/innerText)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "lang": {
          "name": "lang",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/lang)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "offsetHeight": {
          "name": "offsetHeight",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetHeight)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "offsetLeft": {
          "name": "offsetLeft",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetLeft)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "offsetParent": {
          "name": "offsetParent",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetParent)",
          "required": true,
          "type": {
            "name": "Element"
          },
          "tags": {}
        },
        "offsetTop": {
          "name": "offsetTop",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetTop)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "offsetWidth": {
          "name": "offsetWidth",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetWidth)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "outerText": {
          "name": "outerText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/outerText)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "popover": {
          "name": "popover",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/popover)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "spellcheck": {
          "name": "spellcheck",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/spellcheck)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "title": {
          "name": "title",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/title)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "translate": {
          "name": "translate",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/translate)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "writingSuggestions": {
          "name": "writingSuggestions",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/writingSuggestions)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "attachInternals": {
          "name": "attachInternals",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/attachInternals)",
          "required": true,
          "type": {
            "name": "() => ElementInternals"
          },
          "tags": {}
        },
        "click": {
          "name": "click",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/click)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "hidePopover": {
          "name": "hidePopover",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/hidePopover)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "showPopover": {
          "name": "showPopover",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/showPopover)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "togglePopover": {
          "name": "togglePopover",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/togglePopover)",
          "required": true,
          "type": {
            "name": "(options?: boolean) => boolean"
          },
          "tags": {}
        },
        "addEventListener": {
          "name": "addEventListener",
          "defaultValue": null,
          "description": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/addEventListener)\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/addEventListener)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void; (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void; }"
          },
          "tags": {}
        },
        "removeEventListener": {
          "name": "removeEventListener",
          "defaultValue": null,
          "description": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/removeEventListener)\nRemoves the event listener in target's event listener list with the same type, callback, and options.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/removeEventListener)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void; (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void; }"
          },
          "tags": {}
        }
      },
      "Element": {
        "attributes": {
          "name": "attributes",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/attributes)",
          "required": true,
          "type": {
            "name": "NamedNodeMap"
          },
          "tags": {}
        },
        "classList": {
          "name": "classList",
          "defaultValue": null,
          "description": "Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/classList)",
          "required": true,
          "type": {
            "name": "DOMTokenList"
          },
          "tags": {}
        },
        "className": {
          "name": "className",
          "defaultValue": null,
          "description": "Returns the value of element's class content attribute. Can be set to change it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/className)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "clientHeight": {
          "name": "clientHeight",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientHeight)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "clientLeft": {
          "name": "clientLeft",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientLeft)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "clientTop": {
          "name": "clientTop",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientTop)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "clientWidth": {
          "name": "clientWidth",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientWidth)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "currentCSSZoom": {
          "name": "currentCSSZoom",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/currentCSSZoom)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "id": {
          "name": "id",
          "defaultValue": null,
          "description": "Returns the value of element's id content attribute. Can be set to change it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/id)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "innerHTML": {
          "name": "innerHTML",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/innerHTML)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "localName": {
          "name": "localName",
          "defaultValue": null,
          "description": "Returns the local name.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/localName)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "namespaceURI": {
          "name": "namespaceURI",
          "defaultValue": null,
          "description": "Returns the namespace.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/namespaceURI)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "onfullscreenchange": {
          "name": "onfullscreenchange",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/fullscreenchange_event)",
          "required": true,
          "type": {
            "name": "(this: Element, ev: Event) => any"
          },
          "tags": {}
        },
        "onfullscreenerror": {
          "name": "onfullscreenerror",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/fullscreenerror_event)",
          "required": true,
          "type": {
            "name": "(this: Element, ev: Event) => any"
          },
          "tags": {}
        },
        "outerHTML": {
          "name": "outerHTML",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/outerHTML)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ownerDocument": {
          "name": "ownerDocument",
          "defaultValue": null,
          "description": "Returns the node document. Returns null for documents.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/ownerDocument)",
          "required": true,
          "type": {
            "name": "Document"
          },
          "tags": {}
        },
        "part": {
          "name": "part",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/part)",
          "required": true,
          "type": {
            "name": "DOMTokenList"
          },
          "tags": {}
        },
        "prefix": {
          "name": "prefix",
          "defaultValue": null,
          "description": "Returns the namespace prefix.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/prefix)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "scrollHeight": {
          "name": "scrollHeight",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollHeight)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "scrollLeft": {
          "name": "scrollLeft",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollLeft)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "scrollTop": {
          "name": "scrollTop",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollTop)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "scrollWidth": {
          "name": "scrollWidth",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollWidth)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "shadowRoot": {
          "name": "shadowRoot",
          "defaultValue": null,
          "description": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/shadowRoot)",
          "required": true,
          "type": {
            "name": "ShadowRoot"
          },
          "tags": {}
        },
        "slot": {
          "name": "slot",
          "defaultValue": null,
          "description": "Returns the value of element's slot content attribute. Can be set to change it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/slot)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "tagName": {
          "name": "tagName",
          "defaultValue": null,
          "description": "Returns the HTML-uppercased qualified name.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/tagName)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "attachShadow": {
          "name": "attachShadow",
          "defaultValue": null,
          "description": "Creates a shadow root for element and returns it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/attachShadow)",
          "required": true,
          "type": {
            "name": "(init: ShadowRootInit) => ShadowRoot"
          },
          "tags": {}
        },
        "checkVisibility": {
          "name": "checkVisibility",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/checkVisibility)",
          "required": true,
          "type": {
            "name": "(options?: CheckVisibilityOptions) => boolean"
          },
          "tags": {}
        },
        "closest": {
          "name": "closest",
          "defaultValue": null,
          "description": "Returns the first (starting at element) inclusive ancestor that matches selectors, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/closest)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementTagNameMap>(selector: K): HTMLElementTagNameMap[K]; <K extends keyof SVGElementTagNameMap>(selector: K): SVGElementTagNameMap[K]; <K extends keyof MathMLElementTagNameMap>(selector: K): MathMLElementTagNameMap[K]; <E extends Element = Element>(selectors: string): E; }"
          },
          "tags": {}
        },
        "computedStyleMap": {
          "name": "computedStyleMap",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/computedStyleMap)",
          "required": true,
          "type": {
            "name": "() => StylePropertyMapReadOnly"
          },
          "tags": {}
        },
        "getAttribute": {
          "name": "getAttribute",
          "defaultValue": null,
          "description": "Returns element's first attribute whose qualified name is qualifiedName, and null if there is no such attribute otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttribute)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string) => string"
          },
          "tags": {}
        },
        "getAttributeNS": {
          "name": "getAttributeNS",
          "defaultValue": null,
          "description": "Returns element's attribute whose namespace is namespace and local name is localName, and null if there is no such attribute otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNS)",
          "required": true,
          "type": {
            "name": "(namespace: string, localName: string) => string"
          },
          "tags": {}
        },
        "getAttributeNames": {
          "name": "getAttributeNames",
          "defaultValue": null,
          "description": "Returns the qualified names of all element's attributes. Can contain duplicates.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNames)",
          "required": true,
          "type": {
            "name": "() => string[]"
          },
          "tags": {}
        },
        "getAttributeNode": {
          "name": "getAttributeNode",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNode)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string) => Attr"
          },
          "tags": {}
        },
        "getAttributeNodeNS": {
          "name": "getAttributeNodeNS",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNodeNS)",
          "required": true,
          "type": {
            "name": "(namespace: string, localName: string) => Attr"
          },
          "tags": {}
        },
        "getBoundingClientRect": {
          "name": "getBoundingClientRect",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getBoundingClientRect)",
          "required": true,
          "type": {
            "name": "() => DOMRect"
          },
          "tags": {}
        },
        "getClientRects": {
          "name": "getClientRects",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getClientRects)",
          "required": true,
          "type": {
            "name": "() => DOMRectList"
          },
          "tags": {}
        },
        "getElementsByClassName": {
          "name": "getElementsByClassName",
          "defaultValue": null,
          "description": "Returns a HTMLCollection of the elements in the object on which the method was invoked (a document or an element) that have all the classes given by classNames. The classNames argument is interpreted as a space-separated list of classes.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getElementsByClassName)",
          "required": true,
          "type": {
            "name": "(classNames: string) => HTMLCollectionOf<Element>"
          },
          "tags": {}
        },
        "getElementsByTagName": {
          "name": "getElementsByTagName",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getElementsByTagName)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<HTMLElementTagNameMap[K]>; <K extends keyof SVGElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<...>; <K extends keyof MathMLElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<...>; <K extends keyof HTMLElementDeprecatedTagNameMa..."
          },
          "tags": {
            "deprecated": ""
          }
        },
        "getElementsByTagNameNS": {
          "name": "getElementsByTagNameNS",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getElementsByTagNameNS)",
          "required": true,
          "type": {
            "name": "{ (namespaceURI: \"http://www.w3.org/1999/xhtml\", localName: string): HTMLCollectionOf<HTMLElement>; (namespaceURI: \"http://www.w3.org/2000/svg\", localName: string): HTMLCollectionOf<...>; (namespaceURI: \"http://www.w3.org/1998/Math/MathML\", localName: string): HTMLCollectionOf<...>; (namespace: string, localName: st..."
          },
          "tags": {}
        },
        "getHTML": {
          "name": "getHTML",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getHTML)",
          "required": true,
          "type": {
            "name": "(options?: GetHTMLOptions) => string"
          },
          "tags": {}
        },
        "hasAttribute": {
          "name": "hasAttribute",
          "defaultValue": null,
          "description": "Returns true if element has an attribute whose qualified name is qualifiedName, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasAttribute)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string) => boolean"
          },
          "tags": {}
        },
        "hasAttributeNS": {
          "name": "hasAttributeNS",
          "defaultValue": null,
          "description": "Returns true if element has an attribute whose namespace is namespace and local name is localName.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasAttributeNS)",
          "required": true,
          "type": {
            "name": "(namespace: string, localName: string) => boolean"
          },
          "tags": {}
        },
        "hasAttributes": {
          "name": "hasAttributes",
          "defaultValue": null,
          "description": "Returns true if element has attributes, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasAttributes)",
          "required": true,
          "type": {
            "name": "() => boolean"
          },
          "tags": {}
        },
        "hasPointerCapture": {
          "name": "hasPointerCapture",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasPointerCapture)",
          "required": true,
          "type": {
            "name": "(pointerId: number) => boolean"
          },
          "tags": {}
        },
        "insertAdjacentElement": {
          "name": "insertAdjacentElement",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/insertAdjacentElement)",
          "required": true,
          "type": {
            "name": "(where: InsertPosition, element: Element) => Element"
          },
          "tags": {}
        },
        "insertAdjacentHTML": {
          "name": "insertAdjacentHTML",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/insertAdjacentHTML)",
          "required": true,
          "type": {
            "name": "(position: InsertPosition, string: string) => void"
          },
          "tags": {}
        },
        "insertAdjacentText": {
          "name": "insertAdjacentText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/insertAdjacentText)",
          "required": true,
          "type": {
            "name": "(where: InsertPosition, data: string) => void"
          },
          "tags": {}
        },
        "matches": {
          "name": "matches",
          "defaultValue": null,
          "description": "Returns true if matching selectors against element's root yields element, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/matches)",
          "required": true,
          "type": {
            "name": "(selectors: string) => boolean"
          },
          "tags": {}
        },
        "releasePointerCapture": {
          "name": "releasePointerCapture",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/releasePointerCapture)",
          "required": true,
          "type": {
            "name": "(pointerId: number) => void"
          },
          "tags": {}
        },
        "removeAttribute": {
          "name": "removeAttribute",
          "defaultValue": null,
          "description": "Removes element's first attribute whose qualified name is qualifiedName.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/removeAttribute)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string) => void"
          },
          "tags": {}
        },
        "removeAttributeNS": {
          "name": "removeAttributeNS",
          "defaultValue": null,
          "description": "Removes element's attribute whose namespace is namespace and local name is localName.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/removeAttributeNS)",
          "required": true,
          "type": {
            "name": "(namespace: string, localName: string) => void"
          },
          "tags": {}
        },
        "removeAttributeNode": {
          "name": "removeAttributeNode",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/removeAttributeNode)",
          "required": true,
          "type": {
            "name": "(attr: Attr) => Attr"
          },
          "tags": {}
        },
        "requestFullscreen": {
          "name": "requestFullscreen",
          "defaultValue": null,
          "description": "Displays element fullscreen and resolves promise when done.\n\nWhen supplied, options's navigationUI member indicates whether showing navigation UI while in fullscreen is preferred or not. If set to \"show\", navigation simplicity is preferred over screen space, and if set to \"hide\", more screen space is preferred. User agents are always free to honor user preference over the application's. The default value \"auto\" indicates no application preference.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/requestFullscreen)",
          "required": true,
          "type": {
            "name": "(options?: FullscreenOptions) => Promise<void>"
          },
          "tags": {}
        },
        "requestPointerLock": {
          "name": "requestPointerLock",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/requestPointerLock)",
          "required": true,
          "type": {
            "name": "(options?: PointerLockOptions) => Promise<void>"
          },
          "tags": {}
        },
        "scroll": {
          "name": "scroll",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scroll)",
          "required": true,
          "type": {
            "name": "{ (options?: ScrollToOptions): void; (x: number, y: number): void; }"
          },
          "tags": {}
        },
        "scrollBy": {
          "name": "scrollBy",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollBy)",
          "required": true,
          "type": {
            "name": "{ (options?: ScrollToOptions): void; (x: number, y: number): void; }"
          },
          "tags": {}
        },
        "scrollIntoView": {
          "name": "scrollIntoView",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollIntoView)",
          "required": true,
          "type": {
            "name": "(arg?: boolean | ScrollIntoViewOptions) => void"
          },
          "tags": {}
        },
        "scrollTo": {
          "name": "scrollTo",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollTo)",
          "required": true,
          "type": {
            "name": "{ (options?: ScrollToOptions): void; (x: number, y: number): void; }"
          },
          "tags": {}
        },
        "setAttribute": {
          "name": "setAttribute",
          "defaultValue": null,
          "description": "Sets the value of element's first attribute whose qualified name is qualifiedName to value.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttribute)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string, value: string) => void"
          },
          "tags": {}
        },
        "setAttributeNS": {
          "name": "setAttributeNS",
          "defaultValue": null,
          "description": "Sets the value of element's attribute whose namespace is namespace and local name is localName to value.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttributeNS)",
          "required": true,
          "type": {
            "name": "(namespace: string, qualifiedName: string, value: string) => void"
          },
          "tags": {}
        },
        "setAttributeNode": {
          "name": "setAttributeNode",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttributeNode)",
          "required": true,
          "type": {
            "name": "(attr: Attr) => Attr"
          },
          "tags": {}
        },
        "setAttributeNodeNS": {
          "name": "setAttributeNodeNS",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttributeNodeNS)",
          "required": true,
          "type": {
            "name": "(attr: Attr) => Attr"
          },
          "tags": {}
        },
        "setHTMLUnsafe": {
          "name": "setHTMLUnsafe",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setHTMLUnsafe)",
          "required": true,
          "type": {
            "name": "(html: string) => void"
          },
          "tags": {}
        },
        "setPointerCapture": {
          "name": "setPointerCapture",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setPointerCapture)",
          "required": true,
          "type": {
            "name": "(pointerId: number) => void"
          },
          "tags": {}
        },
        "toggleAttribute": {
          "name": "toggleAttribute",
          "defaultValue": null,
          "description": "If force is not given, \"toggles\" qualifiedName, removing it if it is present and adding it if it is not present. If force is true, adds qualifiedName. If force is false, removes qualifiedName.\n\nReturns true if qualifiedName is now present, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/toggleAttribute)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string, force?: boolean) => boolean"
          },
          "tags": {}
        },
        "webkitMatchesSelector": {
          "name": "webkitMatchesSelector",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(selectors: string) => boolean"
          },
          "tags": {
            "deprecated": "This is a legacy alias of `matches`.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/matches)"
          }
        }
      },
      "Node": {
        "baseURI": {
          "name": "baseURI",
          "defaultValue": null,
          "description": "Returns node's node document's document base URL.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/baseURI)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "childNodes": {
          "name": "childNodes",
          "defaultValue": null,
          "description": "Returns the children.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/childNodes)",
          "required": true,
          "type": {
            "name": "NodeListOf<ChildNode>"
          },
          "tags": {}
        },
        "firstChild": {
          "name": "firstChild",
          "defaultValue": null,
          "description": "Returns the first child.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/firstChild)",
          "required": true,
          "type": {
            "name": "ChildNode"
          },
          "tags": {}
        },
        "isConnected": {
          "name": "isConnected",
          "defaultValue": null,
          "description": "Returns true if node is connected and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isConnected)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "lastChild": {
          "name": "lastChild",
          "defaultValue": null,
          "description": "Returns the last child.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lastChild)",
          "required": true,
          "type": {
            "name": "ChildNode"
          },
          "tags": {}
        },
        "nextSibling": {
          "name": "nextSibling",
          "defaultValue": null,
          "description": "Returns the next sibling.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nextSibling)",
          "required": true,
          "type": {
            "name": "ChildNode"
          },
          "tags": {}
        },
        "nodeName": {
          "name": "nodeName",
          "defaultValue": null,
          "description": "Returns a string appropriate for the type of node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeName)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "nodeType": {
          "name": "nodeType",
          "defaultValue": null,
          "description": "Returns the type of node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeType)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "nodeValue": {
          "name": "nodeValue",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeValue)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "parentElement": {
          "name": "parentElement",
          "defaultValue": null,
          "description": "Returns the parent element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/parentElement)",
          "required": true,
          "type": {
            "name": "HTMLElement"
          },
          "tags": {}
        },
        "parentNode": {
          "name": "parentNode",
          "defaultValue": null,
          "description": "Returns the parent.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/parentNode)",
          "required": true,
          "type": {
            "name": "ParentNode"
          },
          "tags": {}
        },
        "previousSibling": {
          "name": "previousSibling",
          "defaultValue": null,
          "description": "Returns the previous sibling.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/previousSibling)",
          "required": true,
          "type": {
            "name": "ChildNode"
          },
          "tags": {}
        },
        "textContent": {
          "name": "textContent",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/textContent)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "appendChild": {
          "name": "appendChild",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/appendChild)",
          "required": true,
          "type": {
            "name": "<T extends Node>(node: T) => T"
          },
          "tags": {}
        },
        "cloneNode": {
          "name": "cloneNode",
          "defaultValue": null,
          "description": "Returns a copy of node. If deep is true, the copy also includes the node's descendants.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/cloneNode)",
          "required": true,
          "type": {
            "name": "(subtree?: boolean) => Node"
          },
          "tags": {}
        },
        "compareDocumentPosition": {
          "name": "compareDocumentPosition",
          "defaultValue": null,
          "description": "Returns a bitmask indicating the position of other relative to node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/compareDocumentPosition)",
          "required": true,
          "type": {
            "name": "(other: Node) => number"
          },
          "tags": {}
        },
        "contains": {
          "name": "contains",
          "defaultValue": null,
          "description": "Returns true if other is an inclusive descendant of node, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/contains)",
          "required": true,
          "type": {
            "name": "(other: Node) => boolean"
          },
          "tags": {}
        },
        "getRootNode": {
          "name": "getRootNode",
          "defaultValue": null,
          "description": "Returns node's root.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/getRootNode)",
          "required": true,
          "type": {
            "name": "(options?: GetRootNodeOptions) => Node"
          },
          "tags": {}
        },
        "hasChildNodes": {
          "name": "hasChildNodes",
          "defaultValue": null,
          "description": "Returns whether node has children.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/hasChildNodes)",
          "required": true,
          "type": {
            "name": "() => boolean"
          },
          "tags": {}
        },
        "insertBefore": {
          "name": "insertBefore",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/insertBefore)",
          "required": true,
          "type": {
            "name": "<T extends Node>(node: T, child: Node) => T"
          },
          "tags": {}
        },
        "isDefaultNamespace": {
          "name": "isDefaultNamespace",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isDefaultNamespace)",
          "required": true,
          "type": {
            "name": "(namespace: string) => boolean"
          },
          "tags": {}
        },
        "isEqualNode": {
          "name": "isEqualNode",
          "defaultValue": null,
          "description": "Returns whether node and otherNode have the same properties.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isEqualNode)",
          "required": true,
          "type": {
            "name": "(otherNode: Node) => boolean"
          },
          "tags": {}
        },
        "isSameNode": {
          "name": "isSameNode",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isSameNode)",
          "required": true,
          "type": {
            "name": "(otherNode: Node) => boolean"
          },
          "tags": {}
        },
        "lookupNamespaceURI": {
          "name": "lookupNamespaceURI",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lookupNamespaceURI)",
          "required": true,
          "type": {
            "name": "(prefix: string) => string"
          },
          "tags": {}
        },
        "lookupPrefix": {
          "name": "lookupPrefix",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lookupPrefix)",
          "required": true,
          "type": {
            "name": "(namespace: string) => string"
          },
          "tags": {}
        },
        "normalize": {
          "name": "normalize",
          "defaultValue": null,
          "description": "Removes empty exclusive Text nodes and concatenates the data of remaining contiguous exclusive Text nodes into the first of their nodes.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/normalize)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "removeChild": {
          "name": "removeChild",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/removeChild)",
          "required": true,
          "type": {
            "name": "<T extends Node>(child: T) => T"
          },
          "tags": {}
        },
        "replaceChild": {
          "name": "replaceChild",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/replaceChild)",
          "required": true,
          "type": {
            "name": "<T extends Node>(node: Node, child: T) => T"
          },
          "tags": {}
        },
        "ELEMENT_NODE": {
          "name": "ELEMENT_NODE",
          "defaultValue": null,
          "description": "node is an element.",
          "required": true,
          "type": {
            "name": "1"
          },
          "tags": {}
        },
        "ATTRIBUTE_NODE": {
          "name": "ATTRIBUTE_NODE",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "2"
          },
          "tags": {}
        },
        "TEXT_NODE": {
          "name": "TEXT_NODE",
          "defaultValue": null,
          "description": "node is a Text node.",
          "required": true,
          "type": {
            "name": "3"
          },
          "tags": {}
        },
        "CDATA_SECTION_NODE": {
          "name": "CDATA_SECTION_NODE",
          "defaultValue": null,
          "description": "node is a CDATASection node.",
          "required": true,
          "type": {
            "name": "4"
          },
          "tags": {}
        },
        "ENTITY_REFERENCE_NODE": {
          "name": "ENTITY_REFERENCE_NODE",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "5"
          },
          "tags": {}
        },
        "ENTITY_NODE": {
          "name": "ENTITY_NODE",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "6"
          },
          "tags": {}
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "name": "PROCESSING_INSTRUCTION_NODE",
          "defaultValue": null,
          "description": "node is a ProcessingInstruction node.",
          "required": true,
          "type": {
            "name": "7"
          },
          "tags": {}
        },
        "COMMENT_NODE": {
          "name": "COMMENT_NODE",
          "defaultValue": null,
          "description": "node is a Comment node.",
          "required": true,
          "type": {
            "name": "8"
          },
          "tags": {}
        },
        "DOCUMENT_NODE": {
          "name": "DOCUMENT_NODE",
          "defaultValue": null,
          "description": "node is a document.",
          "required": true,
          "type": {
            "name": "9"
          },
          "tags": {}
        },
        "DOCUMENT_TYPE_NODE": {
          "name": "DOCUMENT_TYPE_NODE",
          "defaultValue": null,
          "description": "node is a doctype.",
          "required": true,
          "type": {
            "name": "10"
          },
          "tags": {}
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "name": "DOCUMENT_FRAGMENT_NODE",
          "defaultValue": null,
          "description": "node is a DocumentFragment node.",
          "required": true,
          "type": {
            "name": "11"
          },
          "tags": {}
        },
        "NOTATION_NODE": {
          "name": "NOTATION_NODE",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "12"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "name": "DOCUMENT_POSITION_DISCONNECTED",
          "defaultValue": null,
          "description": "Set when node and other are not in the same tree.",
          "required": true,
          "type": {
            "name": "1"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "name": "DOCUMENT_POSITION_PRECEDING",
          "defaultValue": null,
          "description": "Set when other is preceding node.",
          "required": true,
          "type": {
            "name": "2"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "name": "DOCUMENT_POSITION_FOLLOWING",
          "defaultValue": null,
          "description": "Set when other is following node.",
          "required": true,
          "type": {
            "name": "4"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "name": "DOCUMENT_POSITION_CONTAINS",
          "defaultValue": null,
          "description": "Set when other is an ancestor of node.",
          "required": true,
          "type": {
            "name": "8"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "name": "DOCUMENT_POSITION_CONTAINED_BY",
          "defaultValue": null,
          "description": "Set when other is a descendant of node.",
          "required": true,
          "type": {
            "name": "16"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "name": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "32"
          },
          "tags": {}
        }
      },
      "EventTarget": {
        "dispatchEvent": {
          "name": "dispatchEvent",
          "defaultValue": null,
          "description": "Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent)",
          "required": true,
          "type": {
            "name": "(event: Event) => boolean"
          },
          "tags": {}
        }
      },
      "ARIAMixin": {
        "ariaAtomic": {
          "name": "ariaAtomic",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaAtomic)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaAutoComplete": {
          "name": "ariaAutoComplete",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaAutoComplete)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaBrailleLabel": {
          "name": "ariaBrailleLabel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaBrailleLabel)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaBrailleRoleDescription": {
          "name": "ariaBrailleRoleDescription",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaBrailleRoleDescription)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaBusy": {
          "name": "ariaBusy",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaBusy)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaChecked": {
          "name": "ariaChecked",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaChecked)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaColCount": {
          "name": "ariaColCount",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColCount)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaColIndex": {
          "name": "ariaColIndex",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColIndex)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaColIndexText": {
          "name": "ariaColIndexText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColIndexText)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaColSpan": {
          "name": "ariaColSpan",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColSpan)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaCurrent": {
          "name": "ariaCurrent",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaCurrent)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaDescription": {
          "name": "ariaDescription",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaDescription)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaDisabled": {
          "name": "ariaDisabled",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaDisabled)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaExpanded": {
          "name": "ariaExpanded",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaExpanded)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaHasPopup": {
          "name": "ariaHasPopup",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaHasPopup)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaHidden": {
          "name": "ariaHidden",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaHidden)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaInvalid": {
          "name": "ariaInvalid",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaKeyShortcuts": {
          "name": "ariaKeyShortcuts",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaKeyShortcuts)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaLabel": {
          "name": "ariaLabel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaLabel)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaLevel": {
          "name": "ariaLevel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaLevel)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaLive": {
          "name": "ariaLive",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaLive)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaModal": {
          "name": "ariaModal",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaModal)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaMultiLine": {
          "name": "ariaMultiLine",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaMultiLine)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaMultiSelectable": {
          "name": "ariaMultiSelectable",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaMultiSelectable)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaOrientation": {
          "name": "ariaOrientation",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaOrientation)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaPlaceholder": {
          "name": "ariaPlaceholder",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaPlaceholder)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaPosInSet": {
          "name": "ariaPosInSet",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaPosInSet)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaPressed": {
          "name": "ariaPressed",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaPressed)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaReadOnly": {
          "name": "ariaReadOnly",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaReadOnly)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRelevant": {
          "name": "ariaRelevant",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRelevant)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRequired": {
          "name": "ariaRequired",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRequired)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRoleDescription": {
          "name": "ariaRoleDescription",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRoleDescription)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRowCount": {
          "name": "ariaRowCount",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowCount)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRowIndex": {
          "name": "ariaRowIndex",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowIndex)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRowIndexText": {
          "name": "ariaRowIndexText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowIndexText)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRowSpan": {
          "name": "ariaRowSpan",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowSpan)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaSelected": {
          "name": "ariaSelected",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaSelected)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaSetSize": {
          "name": "ariaSetSize",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaSetSize)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaSort": {
          "name": "ariaSort",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaSort)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaValueMax": {
          "name": "ariaValueMax",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueMax)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaValueMin": {
          "name": "ariaValueMin",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueMin)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaValueNow": {
          "name": "ariaValueNow",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueNow)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaValueText": {
          "name": "ariaValueText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueText)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "role": {
          "name": "role",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        }
      },
      "Animatable": {
        "animate": {
          "name": "animate",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animate)",
          "required": true,
          "type": {
            "name": "(keyframes: Keyframe[] | PropertyIndexedKeyframes, options?: number | KeyframeAnimationOptions) => Animation"
          },
          "tags": {}
        },
        "getAnimations": {
          "name": "getAnimations",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAnimations)",
          "required": true,
          "type": {
            "name": "(options?: GetAnimationsOptions) => Animation[]"
          },
          "tags": {}
        }
      },
      "ChildNode": {
        "after": {
          "name": "after",
          "defaultValue": null,
          "description": "Inserts nodes just after node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/after)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        },
        "before": {
          "name": "before",
          "defaultValue": null,
          "description": "Inserts nodes just before node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/before)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        },
        "remove": {
          "name": "remove",
          "defaultValue": null,
          "description": "Removes node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/remove)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "replaceWith": {
          "name": "replaceWith",
          "defaultValue": null,
          "description": "Replaces node with nodes, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/replaceWith)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        }
      },
      "NonDocumentTypeChildNode": {
        "nextElementSibling": {
          "name": "nextElementSibling",
          "defaultValue": null,
          "description": "Returns the first following sibling that is an element, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/nextElementSibling)",
          "required": true,
          "type": {
            "name": "Element"
          },
          "tags": {}
        },
        "previousElementSibling": {
          "name": "previousElementSibling",
          "defaultValue": null,
          "description": "Returns the first preceding sibling that is an element, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/previousElementSibling)",
          "required": true,
          "type": {
            "name": "Element"
          },
          "tags": {}
        }
      },
      "ParentNode": {
        "childElementCount": {
          "name": "childElementCount",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/childElementCount)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "children": {
          "name": "children",
          "defaultValue": null,
          "description": "Returns the child elements.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/children)",
          "required": true,
          "type": {
            "name": "HTMLCollection"
          },
          "tags": {}
        },
        "firstElementChild": {
          "name": "firstElementChild",
          "defaultValue": null,
          "description": "Returns the first child that is an element, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/firstElementChild)",
          "required": true,
          "type": {
            "name": "Element"
          },
          "tags": {}
        },
        "lastElementChild": {
          "name": "lastElementChild",
          "defaultValue": null,
          "description": "Returns the last child that is an element, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/lastElementChild)",
          "required": true,
          "type": {
            "name": "Element"
          },
          "tags": {}
        },
        "append": {
          "name": "append",
          "defaultValue": null,
          "description": "Inserts nodes after the last child of node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/append)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        },
        "prepend": {
          "name": "prepend",
          "defaultValue": null,
          "description": "Inserts nodes before the first child of node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/prepend)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        },
        "querySelector": {
          "name": "querySelector",
          "defaultValue": null,
          "description": "Returns the first element that is a descendant of node that matches selectors.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/querySelector)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementTagNameMap>(selectors: K): HTMLElementTagNameMap[K]; <K extends keyof SVGElementTagNameMap>(selectors: K): SVGElementTagNameMap[K]; <K extends keyof MathMLElementTagNameMap>(selectors: K): MathMLElementTagNameMap[K]; <K extends keyof HTMLElementDeprecatedTagNameMap>(selectors: K): HTMLE..."
          },
          "tags": {
            "deprecated": ""
          }
        },
        "querySelectorAll": {
          "name": "querySelectorAll",
          "defaultValue": null,
          "description": "Returns all element descendants of node that match selectors.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/querySelectorAll)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementTagNameMap>(selectors: K): NodeListOf<HTMLElementTagNameMap[K]>; <K extends keyof SVGElementTagNameMap>(selectors: K): NodeListOf<...>; <K extends keyof MathMLElementTagNameMap>(selectors: K): NodeListOf<...>; <K extends keyof HTMLElementDeprecatedTagNameMap>(selectors: K): NodeListOf<...."
          },
          "tags": {
            "deprecated": ""
          }
        },
        "replaceChildren": {
          "name": "replaceChildren",
          "defaultValue": null,
          "description": "Replace all children of node with nodes, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/replaceChildren)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        }
      },
      "Slottable": {
        "assignedSlot": {
          "name": "assignedSlot",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/assignedSlot)",
          "required": true,
          "type": {
            "name": "HTMLSlotElement"
          },
          "tags": {}
        }
      },
      "ElementCSSInlineStyle": {
        "attributeStyleMap": {
          "name": "attributeStyleMap",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/attributeStyleMap)",
          "required": true,
          "type": {
            "name": "StylePropertyMap"
          },
          "tags": {}
        },
        "style": {
          "name": "style",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/style)",
          "required": true,
          "type": {
            "name": "CSSStyleDeclaration"
          },
          "tags": {}
        }
      },
      "ElementContentEditable": {
        "contentEditable": {
          "name": "contentEditable",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/contentEditable)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "enterKeyHint": {
          "name": "enterKeyHint",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/enterKeyHint)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "inputMode": {
          "name": "inputMode",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/inputMode)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "isContentEditable": {
          "name": "isContentEditable",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/isContentEditable)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        }
      },
      "GlobalEventHandlers": {
        "onabort": {
          "name": "onabort",
          "defaultValue": null,
          "description": "Fires when the user aborts the download.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: UIEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/abort_event)"
          }
        },
        "onanimationcancel": {
          "name": "onanimationcancel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationcancel_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: AnimationEvent) => any"
          },
          "tags": {}
        },
        "onanimationend": {
          "name": "onanimationend",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: AnimationEvent) => any"
          },
          "tags": {}
        },
        "onanimationiteration": {
          "name": "onanimationiteration",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: AnimationEvent) => any"
          },
          "tags": {}
        },
        "onanimationstart": {
          "name": "onanimationstart",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: AnimationEvent) => any"
          },
          "tags": {}
        },
        "onauxclick": {
          "name": "onauxclick",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/auxclick_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {}
        },
        "onbeforeinput": {
          "name": "onbeforeinput",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/beforeinput_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: InputEvent) => any"
          },
          "tags": {}
        },
        "onbeforetoggle": {
          "name": "onbeforetoggle",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/beforetoggle_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onblur": {
          "name": "onblur",
          "defaultValue": null,
          "description": "Fires when the object loses the input focus.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: FocusEvent) => any"
          },
          "tags": {
            "param": "ev The focus event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/blur_event)"
          }
        },
        "oncancel": {
          "name": "oncancel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/cancel_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oncanplay": {
          "name": "oncanplay",
          "defaultValue": null,
          "description": "Occurs when playback is possible, but would require further buffering.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplay_event)"
          }
        },
        "oncanplaythrough": {
          "name": "oncanplaythrough",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplaythrough_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onchange": {
          "name": "onchange",
          "defaultValue": null,
          "description": "Fires when the contents of the object or selection have changed.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/change_event)"
          }
        },
        "onclick": {
          "name": "onclick",
          "defaultValue": null,
          "description": "Fires when the user clicks the left mouse button on the object",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/click_event)"
          }
        },
        "onclose": {
          "name": "onclose",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/close_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oncontextlost": {
          "name": "oncontextlost",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/contextlost_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oncontextmenu": {
          "name": "oncontextmenu",
          "defaultValue": null,
          "description": "Fires when the user clicks the right mouse button in the client area, opening the context menu.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/contextmenu_event)"
          }
        },
        "oncontextrestored": {
          "name": "oncontextrestored",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/contextrestored_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oncopy": {
          "name": "oncopy",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/copy_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: ClipboardEvent) => any"
          },
          "tags": {}
        },
        "oncuechange": {
          "name": "oncuechange",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/cuechange_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oncut": {
          "name": "oncut",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/cut_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: ClipboardEvent) => any"
          },
          "tags": {}
        },
        "ondblclick": {
          "name": "ondblclick",
          "defaultValue": null,
          "description": "Fires when the user double-clicks the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/dblclick_event)"
          }
        },
        "ondrag": {
          "name": "ondrag",
          "defaultValue": null,
          "description": "Fires on the source object continuously during a drag operation.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drag_event)"
          }
        },
        "ondragend": {
          "name": "ondragend",
          "defaultValue": null,
          "description": "Fires on the source object when the user releases the mouse at the close of a drag operation.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragend_event)"
          }
        },
        "ondragenter": {
          "name": "ondragenter",
          "defaultValue": null,
          "description": "Fires on the target element when the user drags the object to a valid drop target.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The drag event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragenter_event)"
          }
        },
        "ondragleave": {
          "name": "ondragleave",
          "defaultValue": null,
          "description": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The drag event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragleave_event)"
          }
        },
        "ondragover": {
          "name": "ondragover",
          "defaultValue": null,
          "description": "Fires on the target element continuously while the user drags the object over a valid drop target.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragover_event)"
          }
        },
        "ondragstart": {
          "name": "ondragstart",
          "defaultValue": null,
          "description": "Fires on the source object when the user starts to drag a text selection or selected object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragstart_event)"
          }
        },
        "ondrop": {
          "name": "ondrop",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drop_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {}
        },
        "ondurationchange": {
          "name": "ondurationchange",
          "defaultValue": null,
          "description": "Occurs when the duration attribute is updated.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/durationchange_event)"
          }
        },
        "onemptied": {
          "name": "onemptied",
          "defaultValue": null,
          "description": "Occurs when the media element is reset to its initial state.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/emptied_event)"
          }
        },
        "onended": {
          "name": "onended",
          "defaultValue": null,
          "description": "Occurs when the end of playback is reached.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ended_event)"
          }
        },
        "onerror": {
          "name": "onerror",
          "defaultValue": null,
          "description": "Fires when an error occurs during object loading.",
          "required": true,
          "type": {
            "name": "OnErrorEventHandlerNonNull"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/error_event)"
          }
        },
        "onfocus": {
          "name": "onfocus",
          "defaultValue": null,
          "description": "Fires when the object receives focus.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: FocusEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/focus_event)"
          }
        },
        "onformdata": {
          "name": "onformdata",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/formdata_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: FormDataEvent) => any"
          },
          "tags": {}
        },
        "ongotpointercapture": {
          "name": "ongotpointercapture",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/gotpointercapture_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "oninput": {
          "name": "oninput",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/input_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oninvalid": {
          "name": "oninvalid",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/invalid_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onkeydown": {
          "name": "onkeydown",
          "defaultValue": null,
          "description": "Fires when the user presses a key.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: KeyboardEvent) => any"
          },
          "tags": {
            "param": "ev The keyboard event\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keydown_event)"
          }
        },
        "onkeypress": {
          "name": "onkeypress",
          "defaultValue": null,
          "description": "Fires when the user presses an alphanumeric key.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: KeyboardEvent) => any"
          },
          "tags": {
            "param": "ev The event.",
            "deprecated": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keypress_event)"
          }
        },
        "onkeyup": {
          "name": "onkeyup",
          "defaultValue": null,
          "description": "Fires when the user releases a key.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: KeyboardEvent) => any"
          },
          "tags": {
            "param": "ev The keyboard event\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keyup_event)"
          }
        },
        "onload": {
          "name": "onload",
          "defaultValue": null,
          "description": "Fires immediately after the browser loads the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGElement/load_event)"
          }
        },
        "onloadeddata": {
          "name": "onloadeddata",
          "defaultValue": null,
          "description": "Occurs when media data is loaded at the current playback position.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadeddata_event)"
          }
        },
        "onloadedmetadata": {
          "name": "onloadedmetadata",
          "defaultValue": null,
          "description": "Occurs when the duration and dimensions of the media have been determined.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadedmetadata_event)"
          }
        },
        "onloadstart": {
          "name": "onloadstart",
          "defaultValue": null,
          "description": "Occurs when Internet Explorer begins looking for media data.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadstart_event)"
          }
        },
        "onlostpointercapture": {
          "name": "onlostpointercapture",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/lostpointercapture_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onmousedown": {
          "name": "onmousedown",
          "defaultValue": null,
          "description": "Fires when the user clicks the object with either mouse button.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mousedown_event)"
          }
        },
        "onmouseenter": {
          "name": "onmouseenter",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseenter_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {}
        },
        "onmouseleave": {
          "name": "onmouseleave",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseleave_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {}
        },
        "onmousemove": {
          "name": "onmousemove",
          "defaultValue": null,
          "description": "Fires when the user moves the mouse over the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mousemove_event)"
          }
        },
        "onmouseout": {
          "name": "onmouseout",
          "defaultValue": null,
          "description": "Fires when the user moves the mouse pointer outside the boundaries of the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseout_event)"
          }
        },
        "onmouseover": {
          "name": "onmouseover",
          "defaultValue": null,
          "description": "Fires when the user moves the mouse pointer into the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseover_event)"
          }
        },
        "onmouseup": {
          "name": "onmouseup",
          "defaultValue": null,
          "description": "Fires when the user releases a mouse button while the mouse is over the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseup_event)"
          }
        },
        "onpaste": {
          "name": "onpaste",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/paste_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: ClipboardEvent) => any"
          },
          "tags": {}
        },
        "onpause": {
          "name": "onpause",
          "defaultValue": null,
          "description": "Occurs when playback is paused.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/pause_event)"
          }
        },
        "onplay": {
          "name": "onplay",
          "defaultValue": null,
          "description": "Occurs when the play method is requested.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/play_event)"
          }
        },
        "onplaying": {
          "name": "onplaying",
          "defaultValue": null,
          "description": "Occurs when the audio or video has started playing.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/playing_event)"
          }
        },
        "onpointercancel": {
          "name": "onpointercancel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointercancel_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerdown": {
          "name": "onpointerdown",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerdown_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerenter": {
          "name": "onpointerenter",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerenter_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerleave": {
          "name": "onpointerleave",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerleave_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointermove": {
          "name": "onpointermove",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointermove_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerout": {
          "name": "onpointerout",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerout_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerover": {
          "name": "onpointerover",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerover_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerup": {
          "name": "onpointerup",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerup_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onprogress": {
          "name": "onprogress",
          "defaultValue": null,
          "description": "Occurs to indicate progress while downloading media data.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: ProgressEvent<EventTarget>) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/progress_event)"
          }
        },
        "onratechange": {
          "name": "onratechange",
          "defaultValue": null,
          "description": "Occurs when the playback rate is increased or decreased.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ratechange_event)"
          }
        },
        "onreset": {
          "name": "onreset",
          "defaultValue": null,
          "description": "Fires when the user resets a form.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/reset_event)"
          }
        },
        "onresize": {
          "name": "onresize",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/resize_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: UIEvent) => any"
          },
          "tags": {}
        },
        "onscroll": {
          "name": "onscroll",
          "defaultValue": null,
          "description": "Fires when the user repositions the scroll box in the scroll bar on the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scroll_event)"
          }
        },
        "onscrollend": {
          "name": "onscrollend",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scrollend_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onsecuritypolicyviolation": {
          "name": "onsecuritypolicyviolation",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/securitypolicyviolation_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: SecurityPolicyViolationEvent) => any"
          },
          "tags": {}
        },
        "onseeked": {
          "name": "onseeked",
          "defaultValue": null,
          "description": "Occurs when the seek operation ends.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeked_event)"
          }
        },
        "onseeking": {
          "name": "onseeking",
          "defaultValue": null,
          "description": "Occurs when the current playback position is moved.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeking_event)"
          }
        },
        "onselect": {
          "name": "onselect",
          "defaultValue": null,
          "description": "Fires when the current selection changes.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/select_event)"
          }
        },
        "onselectionchange": {
          "name": "onselectionchange",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/selectionchange_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onselectstart": {
          "name": "onselectstart",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/selectstart_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onslotchange": {
          "name": "onslotchange",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSlotElement/slotchange_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onstalled": {
          "name": "onstalled",
          "defaultValue": null,
          "description": "Occurs when the download has stopped.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/stalled_event)"
          }
        },
        "onsubmit": {
          "name": "onsubmit",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/submit_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: SubmitEvent) => any"
          },
          "tags": {}
        },
        "onsuspend": {
          "name": "onsuspend",
          "defaultValue": null,
          "description": "Occurs if the load operation has been intentionally halted.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/suspend_event)"
          }
        },
        "ontimeupdate": {
          "name": "ontimeupdate",
          "defaultValue": null,
          "description": "Occurs to indicate the current playback position.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/timeupdate_event)"
          }
        },
        "ontoggle": {
          "name": "ontoggle",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/toggle_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "ontouchcancel": {
          "name": "ontouchcancel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchcancel_event)",
          "required": false,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TouchEvent) => any"
          },
          "tags": {}
        },
        "ontouchend": {
          "name": "ontouchend",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchend_event)",
          "required": false,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TouchEvent) => any"
          },
          "tags": {}
        },
        "ontouchmove": {
          "name": "ontouchmove",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchmove_event)",
          "required": false,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TouchEvent) => any"
          },
          "tags": {}
        },
        "ontouchstart": {
          "name": "ontouchstart",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchstart_event)",
          "required": false,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TouchEvent) => any"
          },
          "tags": {}
        },
        "ontransitioncancel": {
          "name": "ontransitioncancel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitioncancel_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TransitionEvent) => any"
          },
          "tags": {}
        },
        "ontransitionend": {
          "name": "ontransitionend",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TransitionEvent) => any"
          },
          "tags": {}
        },
        "ontransitionrun": {
          "name": "ontransitionrun",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionrun_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TransitionEvent) => any"
          },
          "tags": {}
        },
        "ontransitionstart": {
          "name": "ontransitionstart",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionstart_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TransitionEvent) => any"
          },
          "tags": {}
        },
        "onvolumechange": {
          "name": "onvolumechange",
          "defaultValue": null,
          "description": "Occurs when the volume is changed, or playback is muted or unmuted.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/volumechange_event)"
          }
        },
        "onwaiting": {
          "name": "onwaiting",
          "defaultValue": null,
          "description": "Occurs when playback stops because the next frame of a video resource is not available.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/waiting_event)"
          }
        },
        "onwebkitanimationend": {
          "name": "onwebkitanimationend",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "deprecated": "This is a legacy alias of `onanimationend`.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event)"
          }
        },
        "onwebkitanimationiteration": {
          "name": "onwebkitanimationiteration",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "deprecated": "This is a legacy alias of `onanimationiteration`.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event)"
          }
        },
        "onwebkitanimationstart": {
          "name": "onwebkitanimationstart",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "deprecated": "This is a legacy alias of `onanimationstart`.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event)"
          }
        },
        "onwebkittransitionend": {
          "name": "onwebkittransitionend",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "deprecated": "This is a legacy alias of `ontransitionend`.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event)"
          }
        },
        "onwheel": {
          "name": "onwheel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/wheel_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: WheelEvent) => any"
          },
          "tags": {}
        }
      },
      "HTMLOrSVGElement": {
        "autofocus": {
          "name": "autofocus",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/autofocus)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "dataset": {
          "name": "dataset",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dataset)",
          "required": true,
          "type": {
            "name": "DOMStringMap"
          },
          "tags": {}
        },
        "nonce": {
          "name": "nonce",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/nonce)",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "tabIndex": {
          "name": "tabIndex",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/tabIndex)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "blur": {
          "name": "blur",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/blur)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "focus": {
          "name": "focus",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/focus)",
          "required": true,
          "type": {
            "name": "(options?: FocusOptions) => void"
          },
          "tags": {}
        }
      }
    }
  },
  {
    "tags": {
      "param": "size - The maximum width of the screen"
    },
    "description": "Any screen with no pointer, or a coarse pointer and no hover capability (i.e. touch screen)\nFor more details, see: https://css-tricks.com/touch-devices-not-judged-size/",
    "methods": [],
    "displayName": "getMobileMediaQuery",
    "props": {
      "Number": {
        "toString": {
          "name": "toString",
          "defaultValue": {},
          "description": "Returns a string representation of an object.",
          "required": false,
          "type": {
            "name": "(radix?: number) => string"
          },
          "tags": {
            "param": "radix Specifies a radix for converting numeric values to strings. This value is only used for numbers."
          }
        },
        "toFixed": {
          "name": "toFixed",
          "defaultValue": null,
          "description": "Returns a string representing a number in fixed-point notation.",
          "required": true,
          "type": {
            "name": "(fractionDigits?: number) => string"
          },
          "tags": {
            "param": "fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive."
          }
        },
        "toExponential": {
          "name": "toExponential",
          "defaultValue": null,
          "description": "Returns a string containing a number represented in exponential notation.",
          "required": true,
          "type": {
            "name": "(fractionDigits?: number) => string"
          },
          "tags": {
            "param": "fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive."
          }
        },
        "toPrecision": {
          "name": "toPrecision",
          "defaultValue": null,
          "description": "Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.",
          "required": true,
          "type": {
            "name": "(precision?: number) => string"
          },
          "tags": {
            "param": "precision Number of significant digits. Must be in the range 1 - 21, inclusive."
          }
        },
        "valueOf": {
          "name": "valueOf",
          "defaultValue": {},
          "description": "Returns the primitive value of the specified object.",
          "required": false,
          "type": {
            "name": "() => number"
          },
          "tags": {}
        },
        "toLocaleString": {
          "name": "toLocaleString",
          "defaultValue": {},
          "description": "Converts a number to a string by using the current or specified locale.",
          "required": false,
          "type": {
            "name": "{ (locales?: string | string[], options?: NumberFormatOptions): string; (locales?: LocalesArgument, options?: NumberFormatOptions): string; }"
          },
          "tags": {
            "param": "locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\noptions An object that contains one or more properties that specify comparison options.\nlocales A locale string, array of locale strings, Intl.Locale object, or array of Intl.Locale objects that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\noptions An object that contains one or more properties that specify comparison options."
          }
        }
      }
    }
  },
  {
    "tags": {},
    "description": "Returns the text string of a React node",
    "methods": [],
    "displayName": "getNodeTextContent",
    "props": {
      "String": "",
      "RelativeIndexable": {
        "at": {
          "name": "at",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(index: number) => string"
          },
          "tags": {}
        }
      },
      "Number": {
        "toFixed": {
          "name": "toFixed",
          "defaultValue": null,
          "description": "Returns a string representing a number in fixed-point notation.",
          "required": true,
          "type": {
            "name": "(fractionDigits?: number) => string"
          },
          "tags": {
            "param": "fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive."
          }
        },
        "toExponential": {
          "name": "toExponential",
          "defaultValue": null,
          "description": "Returns a string containing a number represented in exponential notation.",
          "required": true,
          "type": {
            "name": "(fractionDigits?: number) => string"
          },
          "tags": {
            "param": "fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive."
          }
        },
        "toPrecision": {
          "name": "toPrecision",
          "defaultValue": null,
          "description": "Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.",
          "required": true,
          "type": {
            "name": "(precision?: number) => string"
          },
          "tags": {
            "param": "precision Number of significant digits. Must be in the range 1 - 21, inclusive."
          }
        }
      },
      "Object": {
        "toLocaleString": {
          "name": "toLocaleString",
          "defaultValue": {},
          "description": "Returns a date converted to a string using the current locale.\nConverts a number to a string by using the current or specified locale.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "(() => string) | { (locales?: string | string[], options?: NumberFormatOptions): string; (locales?: LocalesArgument, options?: NumberFormatOptions): string; }",
            "value": [
              {
                "value": "() => string",
                "description": "Returns a date converted to a string using the current locale.",
                "fullComment": "Returns a date converted to a string using the current locale.",
                "tags": {}
              },
              {
                "value": "{ (locales?: string | string[], options?: NumberFormatOptions): string; (locales?: LocalesArgument, options?: NumberFormatOptions): string; }",
                "description": "Converts a number to a string by using the current or specified locale.",
                "fullComment": "Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.\n@param locales A locale string, array of locale strings, Intl.Locale object, or array of Intl.Locale objects that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",
                "tags": {
                  "param": "locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\noptions An object that contains one or more properties that specify comparison options.\nlocales A locale string, array of locale strings, Intl.Locale object, or array of Intl.Locale objects that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\noptions An object that contains one or more properties that specify comparison options."
                }
              }
            ]
          },
          "tags": {
            "param": "locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\noptions An object that contains one or more properties that specify comparison options.\nlocales A locale string, array of locale strings, Intl.Locale object, or array of Intl.Locale objects that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\noptions An object that contains one or more properties that specify comparison options."
          }
        }
      },
      "ReactElement": {
        "type": {
          "name": "type",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "string | JSXElementConstructor<any>",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "(props: any, deprecatedLegacyContext?: any) => ReactNode",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "new (props: any, deprecatedLegacyContext?: any) => Component<any, any, any>",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        },
        "props": {
          "name": "props",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "any"
          },
          "tags": {}
        }
      },
      "ReactPortal": {
        "children": {
          "name": "children",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "ReactNode",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              },
              {
                "value": "false"
              },
              {
                "value": "true"
              },
              {
                "value": "ReactElement<any, string | JSXElementConstructor<any>>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "Iterable<ReactNode>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "ReactPortal",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        }
      }
    }
  },
  {
    "tags": {
      "param": "arr `Array<any>`",
      "returns": "boolean"
    },
    "description": "Utility function that checks if the values in an array are all equal",
    "methods": [],
    "displayName": "allEqual",
    "props": {
      "Array": {
        "length": {
          "name": "length",
          "defaultValue": null,
          "description": "Gets or sets the length of the array. This is a number one higher than the highest index in the array.",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "toString": {
          "name": "toString",
          "defaultValue": {},
          "description": "Returns a string representation of an array.",
          "required": false,
          "type": {
            "name": "() => string"
          },
          "tags": {}
        },
        "toLocaleString": {
          "name": "toLocaleString",
          "defaultValue": {},
          "description": "Returns a string representation of an array. The elements are converted to string using their toLocaleString methods.",
          "required": false,
          "type": {
            "name": "{ (): string; (locales: string | string[], options?: NumberFormatOptions & DateTimeFormatOptions): string; }"
          },
          "tags": {}
        },
        "pop": {
          "name": "pop",
          "defaultValue": null,
          "description": "Removes the last element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified.",
          "required": true,
          "type": {
            "name": "() => T"
          },
          "tags": {}
        },
        "push": {
          "name": "push",
          "defaultValue": null,
          "description": "Appends new elements to the end of an array, and returns the new length of the array.",
          "required": true,
          "type": {
            "name": "(...items: T[]) => number"
          },
          "tags": {
            "param": "items New elements to add to the array."
          }
        },
        "concat": {
          "name": "concat",
          "defaultValue": null,
          "description": "Combines two or more arrays.\nThis method returns a new array without modifying any existing arrays.",
          "required": true,
          "type": {
            "name": "{ (...items: ConcatArray<T>[]): T[]; (...items: (T | ConcatArray<T>)[]): T[]; }"
          },
          "tags": {
            "param": "items Additional arrays and/or items to add to the end of the array.\nitems Additional arrays and/or items to add to the end of the array."
          }
        },
        "join": {
          "name": "join",
          "defaultValue": null,
          "description": "Adds all the elements of an array into a string, separated by the specified separator string.",
          "required": true,
          "type": {
            "name": "(separator?: string) => string"
          },
          "tags": {
            "param": "separator A string used to separate one element of the array from the next in the resulting string. If omitted, the array elements are separated with a comma."
          }
        },
        "reverse": {
          "name": "reverse",
          "defaultValue": null,
          "description": "Reverses the elements in an array in place.\nThis method mutates the array and returns a reference to the same array.",
          "required": true,
          "type": {
            "name": "() => T[]"
          },
          "tags": {}
        },
        "shift": {
          "name": "shift",
          "defaultValue": null,
          "description": "Removes the first element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified.",
          "required": true,
          "type": {
            "name": "() => T"
          },
          "tags": {}
        },
        "slice": {
          "name": "slice",
          "defaultValue": null,
          "description": "Returns a copy of a section of an array.\nFor both start and end, a negative index can be used to indicate an offset from the end of the array.\nFor example, -2 refers to the second to last element of the array.",
          "required": true,
          "type": {
            "name": "(start?: number, end?: number) => T[]"
          },
          "tags": {
            "param": "start The beginning index of the specified portion of the array.\nIf start is undefined, then the slice begins at index 0.\nend The end index of the specified portion of the array. This is exclusive of the element at the index 'end'.\nIf end is undefined, then the slice extends to the end of the array."
          }
        },
        "sort": {
          "name": "sort",
          "defaultValue": null,
          "description": "Sorts an array in place.\nThis method mutates the array and returns a reference to the same array.",
          "required": true,
          "type": {
            "name": "(compareFn?: (a: T, b: T) => number) => T[]"
          },
          "tags": {
            "param": "compareFn Function used to determine the order of the elements. It is expected to return\na negative value if the first argument is less than the second argument, zero if they're equal, and a positive\nvalue otherwise. If omitted, the elements are sorted in ascending, UTF-16 code unit order.\n```ts\n[11,2,22,1].sort((a, b) => a - b)\n```"
          }
        },
        "splice": {
          "name": "splice",
          "defaultValue": null,
          "description": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.",
          "required": true,
          "type": {
            "name": "{ (start: number, deleteCount?: number): T[]; (start: number, deleteCount: number, ...items: T[]): T[]; }"
          },
          "tags": {
            "param": "start The zero-based location in the array from which to start removing elements.\ndeleteCount The number of elements to remove.\nstart The zero-based location in the array from which to start removing elements.\ndeleteCount The number of elements to remove.\nitems Elements to insert into the array in place of the deleted elements.",
            "returns": "An array containing the elements that were deleted.\nAn array containing the elements that were deleted."
          }
        },
        "unshift": {
          "name": "unshift",
          "defaultValue": null,
          "description": "Inserts new elements at the start of an array, and returns the new length of the array.",
          "required": true,
          "type": {
            "name": "(...items: T[]) => number"
          },
          "tags": {
            "param": "items Elements to insert at the start of the array."
          }
        },
        "indexOf": {
          "name": "indexOf",
          "defaultValue": null,
          "description": "Returns the index of the first occurrence of a value in an array, or -1 if it is not present.",
          "required": true,
          "type": {
            "name": "(searchElement: T, fromIndex?: number) => number"
          },
          "tags": {
            "param": "searchElement The value to locate in the array.\nfromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0."
          }
        },
        "lastIndexOf": {
          "name": "lastIndexOf",
          "defaultValue": null,
          "description": "Returns the index of the last occurrence of a specified value in an array, or -1 if it is not present.",
          "required": true,
          "type": {
            "name": "(searchElement: T, fromIndex?: number) => number"
          },
          "tags": {
            "param": "searchElement The value to locate in the array.\nfromIndex The array index at which to begin searching backward. If fromIndex is omitted, the search starts at the last index in the array."
          }
        },
        "every": {
          "name": "every",
          "defaultValue": null,
          "description": "Determines whether all the members of an array satisfy the specified test.",
          "required": true,
          "type": {
            "name": "{ <S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?: any): this is S[]; (predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): boolean; }"
          },
          "tags": {
            "param": "predicate A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array.\nthisArg An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\npredicate A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array.\nthisArg An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value."
          }
        },
        "some": {
          "name": "some",
          "defaultValue": null,
          "description": "Determines whether the specified callback function returns true for any element of an array.",
          "required": true,
          "type": {
            "name": "(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any) => boolean"
          },
          "tags": {
            "param": "predicate A function that accepts up to three arguments. The some method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value true, or until the end of the array.\nthisArg An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value."
          }
        },
        "forEach": {
          "name": "forEach",
          "defaultValue": null,
          "description": "Performs the specified action for each element in an array.",
          "required": true,
          "type": {
            "name": "(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: any) => void"
          },
          "tags": {
            "param": "callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\nthisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value."
          }
        },
        "map": {
          "name": "map",
          "defaultValue": null,
          "description": "Calls a defined callback function on each element of an array, and returns an array that contains the results.",
          "required": true,
          "type": {
            "name": "<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any) => U[]"
          },
          "tags": {
            "param": "callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\nthisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value."
          }
        },
        "filter": {
          "name": "filter",
          "defaultValue": null,
          "description": "Returns the elements of an array that meet the condition specified in a callback function.",
          "required": true,
          "type": {
            "name": "{ <S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?: any): S[]; (predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): T[]; }"
          },
          "tags": {
            "param": "predicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\nthisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\npredicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\nthisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value."
          }
        },
        "reduce": {
          "name": "reduce",
          "defaultValue": null,
          "description": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
          "required": true,
          "type": {
            "name": "{ (callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T; (callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T; <U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U; }"
          },
          "tags": {
            "param": "callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\ninitialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\ncallbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\ninitialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."
          }
        },
        "reduceRight": {
          "name": "reduceRight",
          "defaultValue": null,
          "description": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
          "required": true,
          "type": {
            "name": "{ (callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T; (callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T; <U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U; }"
          },
          "tags": {
            "param": "callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\ninitialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\ncallbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\ninitialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."
          }
        },
        "find": {
          "name": "find",
          "defaultValue": null,
          "description": "Returns the value of the first element in the array where predicate is true, and undefined\notherwise.",
          "required": true,
          "type": {
            "name": "{ <S extends T>(predicate: (value: T, index: number, obj: T[]) => value is S, thisArg?: any): S; (predicate: (value: T, index: number, obj: T[]) => unknown, thisArg?: any): T; }"
          },
          "tags": {
            "param": "predicate find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found, find\nimmediately returns that element value. Otherwise, find returns undefined.\nthisArg If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead."
          }
        },
        "findIndex": {
          "name": "findIndex",
          "defaultValue": null,
          "description": "Returns the index of the first element in the array where predicate is true, and -1\notherwise.",
          "required": true,
          "type": {
            "name": "(predicate: (value: T, index: number, obj: T[]) => unknown, thisArg?: any) => number"
          },
          "tags": {
            "param": "predicate find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found,\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\nthisArg If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead."
          }
        },
        "fill": {
          "name": "fill",
          "defaultValue": null,
          "description": "Changes all array elements from `start` to `end` index to a static `value` and returns the modified array",
          "required": true,
          "type": {
            "name": "(value: T, start?: number, end?: number) => T[]"
          },
          "tags": {
            "param": "value value to fill array section with\nstart index to start filling the array at. If start is negative, it is treated as\nlength+start where length is the length of the array.\nend index to stop filling the array at. If end is negative, it is treated as\nlength+end."
          }
        },
        "copyWithin": {
          "name": "copyWithin",
          "defaultValue": null,
          "description": "Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target",
          "required": true,
          "type": {
            "name": "(target: number, start: number, end?: number) => T[]"
          },
          "tags": {
            "param": "target If target is negative, it is treated as length+target where length is the\nlength of the array.\nstart If start is negative, it is treated as length+start. If end is negative, it\nis treated as length+end.\nend If not specified, length of the this object is used as its default value."
          }
        },
        "entries": {
          "name": "entries",
          "defaultValue": null,
          "description": "Returns an iterable of key, value pairs for every entry in the array",
          "required": true,
          "type": {
            "name": "() => ArrayIterator<[number, T]>"
          },
          "tags": {}
        },
        "keys": {
          "name": "keys",
          "defaultValue": null,
          "description": "Returns an iterable of keys in the array",
          "required": true,
          "type": {
            "name": "() => ArrayIterator<number>"
          },
          "tags": {}
        },
        "values": {
          "name": "values",
          "defaultValue": null,
          "description": "Returns an iterable of values in the array",
          "required": true,
          "type": {
            "name": "() => ArrayIterator<T>"
          },
          "tags": {}
        },
        "includes": {
          "name": "includes",
          "defaultValue": null,
          "description": "Determines whether an array includes a certain element, returning true or false as appropriate.",
          "required": true,
          "type": {
            "name": "(searchElement: T, fromIndex?: number) => boolean"
          },
          "tags": {
            "param": "searchElement The element to search for.\nfromIndex The position in this array at which to begin searching for searchElement."
          }
        },
        "flatMap": {
          "name": "flatMap",
          "defaultValue": null,
          "description": "Calls a defined callback function on each element of an array. Then, flattens the result into\na new array.\nThis is identical to a map followed by flat with depth 1.",
          "required": true,
          "type": {
            "name": "<U, This = undefined>(callback: (this: This, value: T, index: number, array: T[]) => U | readonly U[], thisArg?: This) => U[]"
          },
          "tags": {
            "param": "callback A function that accepts up to three arguments. The flatMap method calls the\ncallback function one time for each element in the array.\nthisArg An object to which the this keyword can refer in the callback function. If\nthisArg is omitted, undefined is used as the this value."
          }
        },
        "flat": {
          "name": "flat",
          "defaultValue": null,
          "description": "Returns a new array with all sub-array elements concatenated into it recursively up to the\nspecified depth.",
          "required": true,
          "type": {
            "name": "<A, D extends number = 1>(this: A, depth?: D) => FlatArray<A, D>[]"
          },
          "tags": {
            "param": "depth The maximum recursion depth"
          }
        },
        "__@iterator@11": {
          "name": "__@iterator@11",
          "defaultValue": null,
          "description": "Iterator",
          "required": true,
          "type": {
            "name": "() => ArrayIterator<T>"
          },
          "tags": {}
        },
        "__@unscopables@4228": {
          "name": "__@unscopables@4228",
          "defaultValue": null,
          "description": "Is an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement.",
          "required": true,
          "type": {
            "name": "{ [x: number]: boolean; length?: boolean; toString?: boolean; toLocaleString?: boolean; pop?: boolean; push?: boolean; concat?: boolean; join?: boolean; reverse?: boolean; shift?: boolean; slice?: boolean; sort?: boolean; ... 23 more ...; at?: boolean; }"
          },
          "tags": {}
        }
      },
      "RelativeIndexable": {
        "at": {
          "name": "at",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(index: number) => T"
          },
          "tags": {}
        }
      }
    }
  },
  {
    "tags": {},
    "description": "",
    "methods": [],
    "displayName": "cloneReverse",
    "props": {
      "Array": {
        "length": {
          "name": "length",
          "defaultValue": null,
          "description": "Gets or sets the length of the array. This is a number one higher than the highest index in the array.",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "toString": {
          "name": "toString",
          "defaultValue": {},
          "description": "Returns a string representation of an array.",
          "required": false,
          "type": {
            "name": "() => string"
          },
          "tags": {}
        },
        "toLocaleString": {
          "name": "toLocaleString",
          "defaultValue": {},
          "description": "Returns a string representation of an array. The elements are converted to string using their toLocaleString methods.",
          "required": false,
          "type": {
            "name": "{ (): string; (locales: string | string[], options?: NumberFormatOptions & DateTimeFormatOptions): string; }"
          },
          "tags": {}
        },
        "pop": {
          "name": "pop",
          "defaultValue": null,
          "description": "Removes the last element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified.",
          "required": true,
          "type": {
            "name": "() => T"
          },
          "tags": {}
        },
        "push": {
          "name": "push",
          "defaultValue": null,
          "description": "Appends new elements to the end of an array, and returns the new length of the array.",
          "required": true,
          "type": {
            "name": "(...items: T[]) => number"
          },
          "tags": {
            "param": "items New elements to add to the array."
          }
        },
        "concat": {
          "name": "concat",
          "defaultValue": null,
          "description": "Combines two or more arrays.\nThis method returns a new array without modifying any existing arrays.",
          "required": true,
          "type": {
            "name": "{ (...items: ConcatArray<T>[]): T[]; (...items: (T | ConcatArray<T>)[]): T[]; }"
          },
          "tags": {
            "param": "items Additional arrays and/or items to add to the end of the array.\nitems Additional arrays and/or items to add to the end of the array."
          }
        },
        "join": {
          "name": "join",
          "defaultValue": null,
          "description": "Adds all the elements of an array into a string, separated by the specified separator string.",
          "required": true,
          "type": {
            "name": "(separator?: string) => string"
          },
          "tags": {
            "param": "separator A string used to separate one element of the array from the next in the resulting string. If omitted, the array elements are separated with a comma."
          }
        },
        "reverse": {
          "name": "reverse",
          "defaultValue": null,
          "description": "Reverses the elements in an array in place.\nThis method mutates the array and returns a reference to the same array.",
          "required": true,
          "type": {
            "name": "() => T[]"
          },
          "tags": {}
        },
        "shift": {
          "name": "shift",
          "defaultValue": null,
          "description": "Removes the first element from an array and returns it.\nIf the array is empty, undefined is returned and the array is not modified.",
          "required": true,
          "type": {
            "name": "() => T"
          },
          "tags": {}
        },
        "slice": {
          "name": "slice",
          "defaultValue": null,
          "description": "Returns a copy of a section of an array.\nFor both start and end, a negative index can be used to indicate an offset from the end of the array.\nFor example, -2 refers to the second to last element of the array.",
          "required": true,
          "type": {
            "name": "(start?: number, end?: number) => T[]"
          },
          "tags": {
            "param": "start The beginning index of the specified portion of the array.\nIf start is undefined, then the slice begins at index 0.\nend The end index of the specified portion of the array. This is exclusive of the element at the index 'end'.\nIf end is undefined, then the slice extends to the end of the array."
          }
        },
        "sort": {
          "name": "sort",
          "defaultValue": null,
          "description": "Sorts an array in place.\nThis method mutates the array and returns a reference to the same array.",
          "required": true,
          "type": {
            "name": "(compareFn?: (a: T, b: T) => number) => T[]"
          },
          "tags": {
            "param": "compareFn Function used to determine the order of the elements. It is expected to return\na negative value if the first argument is less than the second argument, zero if they're equal, and a positive\nvalue otherwise. If omitted, the elements are sorted in ascending, UTF-16 code unit order.\n```ts\n[11,2,22,1].sort((a, b) => a - b)\n```"
          }
        },
        "splice": {
          "name": "splice",
          "defaultValue": null,
          "description": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.",
          "required": true,
          "type": {
            "name": "{ (start: number, deleteCount?: number): T[]; (start: number, deleteCount: number, ...items: T[]): T[]; }"
          },
          "tags": {
            "param": "start The zero-based location in the array from which to start removing elements.\ndeleteCount The number of elements to remove.\nstart The zero-based location in the array from which to start removing elements.\ndeleteCount The number of elements to remove.\nitems Elements to insert into the array in place of the deleted elements.",
            "returns": "An array containing the elements that were deleted.\nAn array containing the elements that were deleted."
          }
        },
        "unshift": {
          "name": "unshift",
          "defaultValue": null,
          "description": "Inserts new elements at the start of an array, and returns the new length of the array.",
          "required": true,
          "type": {
            "name": "(...items: T[]) => number"
          },
          "tags": {
            "param": "items Elements to insert at the start of the array."
          }
        },
        "indexOf": {
          "name": "indexOf",
          "defaultValue": null,
          "description": "Returns the index of the first occurrence of a value in an array, or -1 if it is not present.",
          "required": true,
          "type": {
            "name": "(searchElement: T, fromIndex?: number) => number"
          },
          "tags": {
            "param": "searchElement The value to locate in the array.\nfromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0."
          }
        },
        "lastIndexOf": {
          "name": "lastIndexOf",
          "defaultValue": null,
          "description": "Returns the index of the last occurrence of a specified value in an array, or -1 if it is not present.",
          "required": true,
          "type": {
            "name": "(searchElement: T, fromIndex?: number) => number"
          },
          "tags": {
            "param": "searchElement The value to locate in the array.\nfromIndex The array index at which to begin searching backward. If fromIndex is omitted, the search starts at the last index in the array."
          }
        },
        "every": {
          "name": "every",
          "defaultValue": null,
          "description": "Determines whether all the members of an array satisfy the specified test.",
          "required": true,
          "type": {
            "name": "{ <S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?: any): this is S[]; (predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): boolean; }"
          },
          "tags": {
            "param": "predicate A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array.\nthisArg An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\npredicate A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array.\nthisArg An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value."
          }
        },
        "some": {
          "name": "some",
          "defaultValue": null,
          "description": "Determines whether the specified callback function returns true for any element of an array.",
          "required": true,
          "type": {
            "name": "(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any) => boolean"
          },
          "tags": {
            "param": "predicate A function that accepts up to three arguments. The some method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value true, or until the end of the array.\nthisArg An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value."
          }
        },
        "forEach": {
          "name": "forEach",
          "defaultValue": null,
          "description": "Performs the specified action for each element in an array.",
          "required": true,
          "type": {
            "name": "(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: any) => void"
          },
          "tags": {
            "param": "callbackfn A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\nthisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value."
          }
        },
        "map": {
          "name": "map",
          "defaultValue": null,
          "description": "Calls a defined callback function on each element of an array, and returns an array that contains the results.",
          "required": true,
          "type": {
            "name": "<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any) => U[]"
          },
          "tags": {
            "param": "callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\nthisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value."
          }
        },
        "filter": {
          "name": "filter",
          "defaultValue": null,
          "description": "Returns the elements of an array that meet the condition specified in a callback function.",
          "required": true,
          "type": {
            "name": "{ <S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?: any): S[]; (predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): T[]; }"
          },
          "tags": {
            "param": "predicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\nthisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\npredicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\nthisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value."
          }
        },
        "reduce": {
          "name": "reduce",
          "defaultValue": null,
          "description": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
          "required": true,
          "type": {
            "name": "{ (callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T; (callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T; <U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U; }"
          },
          "tags": {
            "param": "callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\ninitialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\ncallbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\ninitialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."
          }
        },
        "reduceRight": {
          "name": "reduceRight",
          "defaultValue": null,
          "description": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.",
          "required": true,
          "type": {
            "name": "{ (callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T; (callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T; <U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U; }"
          },
          "tags": {
            "param": "callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\ninitialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\ncallbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\ninitialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value."
          }
        },
        "find": {
          "name": "find",
          "defaultValue": null,
          "description": "Returns the value of the first element in the array where predicate is true, and undefined\notherwise.",
          "required": true,
          "type": {
            "name": "{ <S extends T>(predicate: (value: T, index: number, obj: T[]) => value is S, thisArg?: any): S; (predicate: (value: T, index: number, obj: T[]) => unknown, thisArg?: any): T; }"
          },
          "tags": {
            "param": "predicate find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found, find\nimmediately returns that element value. Otherwise, find returns undefined.\nthisArg If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead."
          }
        },
        "findIndex": {
          "name": "findIndex",
          "defaultValue": null,
          "description": "Returns the index of the first element in the array where predicate is true, and -1\notherwise.",
          "required": true,
          "type": {
            "name": "(predicate: (value: T, index: number, obj: T[]) => unknown, thisArg?: any) => number"
          },
          "tags": {
            "param": "predicate find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found,\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1.\nthisArg If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead."
          }
        },
        "fill": {
          "name": "fill",
          "defaultValue": null,
          "description": "Changes all array elements from `start` to `end` index to a static `value` and returns the modified array",
          "required": true,
          "type": {
            "name": "(value: T, start?: number, end?: number) => T[]"
          },
          "tags": {
            "param": "value value to fill array section with\nstart index to start filling the array at. If start is negative, it is treated as\nlength+start where length is the length of the array.\nend index to stop filling the array at. If end is negative, it is treated as\nlength+end."
          }
        },
        "copyWithin": {
          "name": "copyWithin",
          "defaultValue": null,
          "description": "Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target",
          "required": true,
          "type": {
            "name": "(target: number, start: number, end?: number) => T[]"
          },
          "tags": {
            "param": "target If target is negative, it is treated as length+target where length is the\nlength of the array.\nstart If start is negative, it is treated as length+start. If end is negative, it\nis treated as length+end.\nend If not specified, length of the this object is used as its default value."
          }
        },
        "entries": {
          "name": "entries",
          "defaultValue": null,
          "description": "Returns an iterable of key, value pairs for every entry in the array",
          "required": true,
          "type": {
            "name": "() => ArrayIterator<[number, T]>"
          },
          "tags": {}
        },
        "keys": {
          "name": "keys",
          "defaultValue": null,
          "description": "Returns an iterable of keys in the array",
          "required": true,
          "type": {
            "name": "() => ArrayIterator<number>"
          },
          "tags": {}
        },
        "values": {
          "name": "values",
          "defaultValue": null,
          "description": "Returns an iterable of values in the array",
          "required": true,
          "type": {
            "name": "() => ArrayIterator<T>"
          },
          "tags": {}
        },
        "includes": {
          "name": "includes",
          "defaultValue": null,
          "description": "Determines whether an array includes a certain element, returning true or false as appropriate.",
          "required": true,
          "type": {
            "name": "(searchElement: T, fromIndex?: number) => boolean"
          },
          "tags": {
            "param": "searchElement The element to search for.\nfromIndex The position in this array at which to begin searching for searchElement."
          }
        },
        "flatMap": {
          "name": "flatMap",
          "defaultValue": null,
          "description": "Calls a defined callback function on each element of an array. Then, flattens the result into\na new array.\nThis is identical to a map followed by flat with depth 1.",
          "required": true,
          "type": {
            "name": "<U, This = undefined>(callback: (this: This, value: T, index: number, array: T[]) => U | readonly U[], thisArg?: This) => U[]"
          },
          "tags": {
            "param": "callback A function that accepts up to three arguments. The flatMap method calls the\ncallback function one time for each element in the array.\nthisArg An object to which the this keyword can refer in the callback function. If\nthisArg is omitted, undefined is used as the this value."
          }
        },
        "flat": {
          "name": "flat",
          "defaultValue": null,
          "description": "Returns a new array with all sub-array elements concatenated into it recursively up to the\nspecified depth.",
          "required": true,
          "type": {
            "name": "<A, D extends number = 1>(this: A, depth?: D) => FlatArray<A, D>[]"
          },
          "tags": {
            "param": "depth The maximum recursion depth"
          }
        },
        "__@iterator@11": {
          "name": "__@iterator@11",
          "defaultValue": null,
          "description": "Iterator",
          "required": true,
          "type": {
            "name": "() => ArrayIterator<T>"
          },
          "tags": {}
        },
        "__@unscopables@4228": {
          "name": "__@unscopables@4228",
          "defaultValue": null,
          "description": "Is an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement.",
          "required": true,
          "type": {
            "name": "{ [x: number]: boolean; length?: boolean; toString?: boolean; toLocaleString?: boolean; pop?: boolean; push?: boolean; concat?: boolean; join?: boolean; reverse?: boolean; shift?: boolean; slice?: boolean; sort?: boolean; ... 23 more ...; at?: boolean; }"
          },
          "tags": {}
        }
      },
      "RelativeIndexable": {
        "at": {
          "name": "at",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(index: number) => T"
          },
          "tags": {}
        }
      }
    }
  },
  {
    "tags": {
      "param": "name Name of element we want to reference.",
      "deprecated": ""
    },
    "description": "Utility for making it easier to couple a React Component to a css selector.\nUseful when writing css selectors that rely on interactivity, i.e. :hover.\nExample:\n const checkBoxWrapper = createDataProp('checkbox-wrapper');\n // Used as selector:\n css`&:hover ${checkboxWrapper.selector} { }`\n // Used on React Component\n <div {...checkboxWrapper.prop} />",
    "methods": [],
    "displayName": "createDataProp",
    "props": {
      "String": "",
      "RelativeIndexable": {
        "at": {
          "name": "at",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(index: number) => string"
          },
          "tags": {}
        }
      }
    }
  },
  {
    "tags": {},
    "description": "Returns all focusable elements within a given element\n\nFocusable elements defined in the constant {@link baseFocusableElementSelectors}",
    "methods": [],
    "displayName": "queryAllFocusableElements",
    "props": {
      "HTMLElement": {
        "accessKey": {
          "name": "accessKey",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/accessKey)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "accessKeyLabel": {
          "name": "accessKeyLabel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/accessKeyLabel)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "autocapitalize": {
          "name": "autocapitalize",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/autocapitalize)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "dir": {
          "name": "dir",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dir)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "draggable": {
          "name": "draggable",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/draggable)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "hidden": {
          "name": "hidden",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/hidden)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "inert": {
          "name": "inert",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/inert)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "innerText": {
          "name": "innerText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/innerText)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "lang": {
          "name": "lang",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/lang)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "offsetHeight": {
          "name": "offsetHeight",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetHeight)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "offsetLeft": {
          "name": "offsetLeft",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetLeft)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "offsetParent": {
          "name": "offsetParent",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetParent)",
          "required": true,
          "type": {
            "name": "Element"
          },
          "tags": {}
        },
        "offsetTop": {
          "name": "offsetTop",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetTop)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "offsetWidth": {
          "name": "offsetWidth",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetWidth)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "outerText": {
          "name": "outerText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/outerText)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "popover": {
          "name": "popover",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/popover)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "spellcheck": {
          "name": "spellcheck",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/spellcheck)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "title": {
          "name": "title",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/title)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "translate": {
          "name": "translate",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/translate)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "writingSuggestions": {
          "name": "writingSuggestions",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/writingSuggestions)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "attachInternals": {
          "name": "attachInternals",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/attachInternals)",
          "required": true,
          "type": {
            "name": "() => ElementInternals"
          },
          "tags": {}
        },
        "click": {
          "name": "click",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/click)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "hidePopover": {
          "name": "hidePopover",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/hidePopover)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "showPopover": {
          "name": "showPopover",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/showPopover)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "togglePopover": {
          "name": "togglePopover",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/togglePopover)",
          "required": true,
          "type": {
            "name": "(options?: boolean) => boolean"
          },
          "tags": {}
        },
        "addEventListener": {
          "name": "addEventListener",
          "defaultValue": null,
          "description": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/addEventListener)\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/addEventListener)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void; (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void; }"
          },
          "tags": {}
        },
        "removeEventListener": {
          "name": "removeEventListener",
          "defaultValue": null,
          "description": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/removeEventListener)\nRemoves the event listener in target's event listener list with the same type, callback, and options.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/removeEventListener)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void; (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void; }"
          },
          "tags": {}
        }
      },
      "Element": {
        "attributes": {
          "name": "attributes",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/attributes)",
          "required": true,
          "type": {
            "name": "NamedNodeMap"
          },
          "tags": {}
        },
        "classList": {
          "name": "classList",
          "defaultValue": null,
          "description": "Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/classList)",
          "required": true,
          "type": {
            "name": "DOMTokenList"
          },
          "tags": {}
        },
        "className": {
          "name": "className",
          "defaultValue": null,
          "description": "Returns the value of element's class content attribute. Can be set to change it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/className)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "clientHeight": {
          "name": "clientHeight",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientHeight)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "clientLeft": {
          "name": "clientLeft",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientLeft)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "clientTop": {
          "name": "clientTop",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientTop)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "clientWidth": {
          "name": "clientWidth",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientWidth)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "currentCSSZoom": {
          "name": "currentCSSZoom",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/currentCSSZoom)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "id": {
          "name": "id",
          "defaultValue": null,
          "description": "Returns the value of element's id content attribute. Can be set to change it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/id)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "innerHTML": {
          "name": "innerHTML",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/innerHTML)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "localName": {
          "name": "localName",
          "defaultValue": null,
          "description": "Returns the local name.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/localName)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "namespaceURI": {
          "name": "namespaceURI",
          "defaultValue": null,
          "description": "Returns the namespace.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/namespaceURI)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "onfullscreenchange": {
          "name": "onfullscreenchange",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/fullscreenchange_event)",
          "required": true,
          "type": {
            "name": "(this: Element, ev: Event) => any"
          },
          "tags": {}
        },
        "onfullscreenerror": {
          "name": "onfullscreenerror",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/fullscreenerror_event)",
          "required": true,
          "type": {
            "name": "(this: Element, ev: Event) => any"
          },
          "tags": {}
        },
        "outerHTML": {
          "name": "outerHTML",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/outerHTML)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ownerDocument": {
          "name": "ownerDocument",
          "defaultValue": null,
          "description": "Returns the node document. Returns null for documents.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/ownerDocument)",
          "required": true,
          "type": {
            "name": "Document"
          },
          "tags": {}
        },
        "part": {
          "name": "part",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/part)",
          "required": true,
          "type": {
            "name": "DOMTokenList"
          },
          "tags": {}
        },
        "prefix": {
          "name": "prefix",
          "defaultValue": null,
          "description": "Returns the namespace prefix.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/prefix)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "scrollHeight": {
          "name": "scrollHeight",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollHeight)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "scrollLeft": {
          "name": "scrollLeft",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollLeft)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "scrollTop": {
          "name": "scrollTop",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollTop)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "scrollWidth": {
          "name": "scrollWidth",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollWidth)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "shadowRoot": {
          "name": "shadowRoot",
          "defaultValue": null,
          "description": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/shadowRoot)",
          "required": true,
          "type": {
            "name": "ShadowRoot"
          },
          "tags": {}
        },
        "slot": {
          "name": "slot",
          "defaultValue": null,
          "description": "Returns the value of element's slot content attribute. Can be set to change it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/slot)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "tagName": {
          "name": "tagName",
          "defaultValue": null,
          "description": "Returns the HTML-uppercased qualified name.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/tagName)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "attachShadow": {
          "name": "attachShadow",
          "defaultValue": null,
          "description": "Creates a shadow root for element and returns it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/attachShadow)",
          "required": true,
          "type": {
            "name": "(init: ShadowRootInit) => ShadowRoot"
          },
          "tags": {}
        },
        "checkVisibility": {
          "name": "checkVisibility",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/checkVisibility)",
          "required": true,
          "type": {
            "name": "(options?: CheckVisibilityOptions) => boolean"
          },
          "tags": {}
        },
        "closest": {
          "name": "closest",
          "defaultValue": null,
          "description": "Returns the first (starting at element) inclusive ancestor that matches selectors, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/closest)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementTagNameMap>(selector: K): HTMLElementTagNameMap[K]; <K extends keyof SVGElementTagNameMap>(selector: K): SVGElementTagNameMap[K]; <K extends keyof MathMLElementTagNameMap>(selector: K): MathMLElementTagNameMap[K]; <E extends Element = Element>(selectors: string): E; }"
          },
          "tags": {}
        },
        "computedStyleMap": {
          "name": "computedStyleMap",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/computedStyleMap)",
          "required": true,
          "type": {
            "name": "() => StylePropertyMapReadOnly"
          },
          "tags": {}
        },
        "getAttribute": {
          "name": "getAttribute",
          "defaultValue": null,
          "description": "Returns element's first attribute whose qualified name is qualifiedName, and null if there is no such attribute otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttribute)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string) => string"
          },
          "tags": {}
        },
        "getAttributeNS": {
          "name": "getAttributeNS",
          "defaultValue": null,
          "description": "Returns element's attribute whose namespace is namespace and local name is localName, and null if there is no such attribute otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNS)",
          "required": true,
          "type": {
            "name": "(namespace: string, localName: string) => string"
          },
          "tags": {}
        },
        "getAttributeNames": {
          "name": "getAttributeNames",
          "defaultValue": null,
          "description": "Returns the qualified names of all element's attributes. Can contain duplicates.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNames)",
          "required": true,
          "type": {
            "name": "() => string[]"
          },
          "tags": {}
        },
        "getAttributeNode": {
          "name": "getAttributeNode",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNode)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string) => Attr"
          },
          "tags": {}
        },
        "getAttributeNodeNS": {
          "name": "getAttributeNodeNS",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNodeNS)",
          "required": true,
          "type": {
            "name": "(namespace: string, localName: string) => Attr"
          },
          "tags": {}
        },
        "getBoundingClientRect": {
          "name": "getBoundingClientRect",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getBoundingClientRect)",
          "required": true,
          "type": {
            "name": "() => DOMRect"
          },
          "tags": {}
        },
        "getClientRects": {
          "name": "getClientRects",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getClientRects)",
          "required": true,
          "type": {
            "name": "() => DOMRectList"
          },
          "tags": {}
        },
        "getElementsByClassName": {
          "name": "getElementsByClassName",
          "defaultValue": null,
          "description": "Returns a HTMLCollection of the elements in the object on which the method was invoked (a document or an element) that have all the classes given by classNames. The classNames argument is interpreted as a space-separated list of classes.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getElementsByClassName)",
          "required": true,
          "type": {
            "name": "(classNames: string) => HTMLCollectionOf<Element>"
          },
          "tags": {}
        },
        "getElementsByTagName": {
          "name": "getElementsByTagName",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getElementsByTagName)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<HTMLElementTagNameMap[K]>; <K extends keyof SVGElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<...>; <K extends keyof MathMLElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<...>; <K extends keyof HTMLElementDeprecatedTagNameMa..."
          },
          "tags": {
            "deprecated": ""
          }
        },
        "getElementsByTagNameNS": {
          "name": "getElementsByTagNameNS",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getElementsByTagNameNS)",
          "required": true,
          "type": {
            "name": "{ (namespaceURI: \"http://www.w3.org/1999/xhtml\", localName: string): HTMLCollectionOf<HTMLElement>; (namespaceURI: \"http://www.w3.org/2000/svg\", localName: string): HTMLCollectionOf<...>; (namespaceURI: \"http://www.w3.org/1998/Math/MathML\", localName: string): HTMLCollectionOf<...>; (namespace: string, localName: st..."
          },
          "tags": {}
        },
        "getHTML": {
          "name": "getHTML",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getHTML)",
          "required": true,
          "type": {
            "name": "(options?: GetHTMLOptions) => string"
          },
          "tags": {}
        },
        "hasAttribute": {
          "name": "hasAttribute",
          "defaultValue": null,
          "description": "Returns true if element has an attribute whose qualified name is qualifiedName, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasAttribute)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string) => boolean"
          },
          "tags": {}
        },
        "hasAttributeNS": {
          "name": "hasAttributeNS",
          "defaultValue": null,
          "description": "Returns true if element has an attribute whose namespace is namespace and local name is localName.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasAttributeNS)",
          "required": true,
          "type": {
            "name": "(namespace: string, localName: string) => boolean"
          },
          "tags": {}
        },
        "hasAttributes": {
          "name": "hasAttributes",
          "defaultValue": null,
          "description": "Returns true if element has attributes, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasAttributes)",
          "required": true,
          "type": {
            "name": "() => boolean"
          },
          "tags": {}
        },
        "hasPointerCapture": {
          "name": "hasPointerCapture",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasPointerCapture)",
          "required": true,
          "type": {
            "name": "(pointerId: number) => boolean"
          },
          "tags": {}
        },
        "insertAdjacentElement": {
          "name": "insertAdjacentElement",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/insertAdjacentElement)",
          "required": true,
          "type": {
            "name": "(where: InsertPosition, element: Element) => Element"
          },
          "tags": {}
        },
        "insertAdjacentHTML": {
          "name": "insertAdjacentHTML",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/insertAdjacentHTML)",
          "required": true,
          "type": {
            "name": "(position: InsertPosition, string: string) => void"
          },
          "tags": {}
        },
        "insertAdjacentText": {
          "name": "insertAdjacentText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/insertAdjacentText)",
          "required": true,
          "type": {
            "name": "(where: InsertPosition, data: string) => void"
          },
          "tags": {}
        },
        "matches": {
          "name": "matches",
          "defaultValue": null,
          "description": "Returns true if matching selectors against element's root yields element, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/matches)",
          "required": true,
          "type": {
            "name": "(selectors: string) => boolean"
          },
          "tags": {}
        },
        "releasePointerCapture": {
          "name": "releasePointerCapture",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/releasePointerCapture)",
          "required": true,
          "type": {
            "name": "(pointerId: number) => void"
          },
          "tags": {}
        },
        "removeAttribute": {
          "name": "removeAttribute",
          "defaultValue": null,
          "description": "Removes element's first attribute whose qualified name is qualifiedName.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/removeAttribute)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string) => void"
          },
          "tags": {}
        },
        "removeAttributeNS": {
          "name": "removeAttributeNS",
          "defaultValue": null,
          "description": "Removes element's attribute whose namespace is namespace and local name is localName.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/removeAttributeNS)",
          "required": true,
          "type": {
            "name": "(namespace: string, localName: string) => void"
          },
          "tags": {}
        },
        "removeAttributeNode": {
          "name": "removeAttributeNode",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/removeAttributeNode)",
          "required": true,
          "type": {
            "name": "(attr: Attr) => Attr"
          },
          "tags": {}
        },
        "requestFullscreen": {
          "name": "requestFullscreen",
          "defaultValue": null,
          "description": "Displays element fullscreen and resolves promise when done.\n\nWhen supplied, options's navigationUI member indicates whether showing navigation UI while in fullscreen is preferred or not. If set to \"show\", navigation simplicity is preferred over screen space, and if set to \"hide\", more screen space is preferred. User agents are always free to honor user preference over the application's. The default value \"auto\" indicates no application preference.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/requestFullscreen)",
          "required": true,
          "type": {
            "name": "(options?: FullscreenOptions) => Promise<void>"
          },
          "tags": {}
        },
        "requestPointerLock": {
          "name": "requestPointerLock",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/requestPointerLock)",
          "required": true,
          "type": {
            "name": "(options?: PointerLockOptions) => Promise<void>"
          },
          "tags": {}
        },
        "scroll": {
          "name": "scroll",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scroll)",
          "required": true,
          "type": {
            "name": "{ (options?: ScrollToOptions): void; (x: number, y: number): void; }"
          },
          "tags": {}
        },
        "scrollBy": {
          "name": "scrollBy",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollBy)",
          "required": true,
          "type": {
            "name": "{ (options?: ScrollToOptions): void; (x: number, y: number): void; }"
          },
          "tags": {}
        },
        "scrollIntoView": {
          "name": "scrollIntoView",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollIntoView)",
          "required": true,
          "type": {
            "name": "(arg?: boolean | ScrollIntoViewOptions) => void"
          },
          "tags": {}
        },
        "scrollTo": {
          "name": "scrollTo",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollTo)",
          "required": true,
          "type": {
            "name": "{ (options?: ScrollToOptions): void; (x: number, y: number): void; }"
          },
          "tags": {}
        },
        "setAttribute": {
          "name": "setAttribute",
          "defaultValue": null,
          "description": "Sets the value of element's first attribute whose qualified name is qualifiedName to value.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttribute)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string, value: string) => void"
          },
          "tags": {}
        },
        "setAttributeNS": {
          "name": "setAttributeNS",
          "defaultValue": null,
          "description": "Sets the value of element's attribute whose namespace is namespace and local name is localName to value.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttributeNS)",
          "required": true,
          "type": {
            "name": "(namespace: string, qualifiedName: string, value: string) => void"
          },
          "tags": {}
        },
        "setAttributeNode": {
          "name": "setAttributeNode",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttributeNode)",
          "required": true,
          "type": {
            "name": "(attr: Attr) => Attr"
          },
          "tags": {}
        },
        "setAttributeNodeNS": {
          "name": "setAttributeNodeNS",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttributeNodeNS)",
          "required": true,
          "type": {
            "name": "(attr: Attr) => Attr"
          },
          "tags": {}
        },
        "setHTMLUnsafe": {
          "name": "setHTMLUnsafe",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setHTMLUnsafe)",
          "required": true,
          "type": {
            "name": "(html: string) => void"
          },
          "tags": {}
        },
        "setPointerCapture": {
          "name": "setPointerCapture",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setPointerCapture)",
          "required": true,
          "type": {
            "name": "(pointerId: number) => void"
          },
          "tags": {}
        },
        "toggleAttribute": {
          "name": "toggleAttribute",
          "defaultValue": null,
          "description": "If force is not given, \"toggles\" qualifiedName, removing it if it is present and adding it if it is not present. If force is true, adds qualifiedName. If force is false, removes qualifiedName.\n\nReturns true if qualifiedName is now present, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/toggleAttribute)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string, force?: boolean) => boolean"
          },
          "tags": {}
        },
        "webkitMatchesSelector": {
          "name": "webkitMatchesSelector",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(selectors: string) => boolean"
          },
          "tags": {
            "deprecated": "This is a legacy alias of `matches`.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/matches)"
          }
        }
      },
      "Node": {
        "baseURI": {
          "name": "baseURI",
          "defaultValue": null,
          "description": "Returns node's node document's document base URL.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/baseURI)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "childNodes": {
          "name": "childNodes",
          "defaultValue": null,
          "description": "Returns the children.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/childNodes)",
          "required": true,
          "type": {
            "name": "NodeListOf<ChildNode>"
          },
          "tags": {}
        },
        "firstChild": {
          "name": "firstChild",
          "defaultValue": null,
          "description": "Returns the first child.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/firstChild)",
          "required": true,
          "type": {
            "name": "ChildNode"
          },
          "tags": {}
        },
        "isConnected": {
          "name": "isConnected",
          "defaultValue": null,
          "description": "Returns true if node is connected and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isConnected)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "lastChild": {
          "name": "lastChild",
          "defaultValue": null,
          "description": "Returns the last child.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lastChild)",
          "required": true,
          "type": {
            "name": "ChildNode"
          },
          "tags": {}
        },
        "nextSibling": {
          "name": "nextSibling",
          "defaultValue": null,
          "description": "Returns the next sibling.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nextSibling)",
          "required": true,
          "type": {
            "name": "ChildNode"
          },
          "tags": {}
        },
        "nodeName": {
          "name": "nodeName",
          "defaultValue": null,
          "description": "Returns a string appropriate for the type of node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeName)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "nodeType": {
          "name": "nodeType",
          "defaultValue": null,
          "description": "Returns the type of node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeType)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "nodeValue": {
          "name": "nodeValue",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeValue)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "parentElement": {
          "name": "parentElement",
          "defaultValue": null,
          "description": "Returns the parent element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/parentElement)",
          "required": true,
          "type": {
            "name": "HTMLElement"
          },
          "tags": {}
        },
        "parentNode": {
          "name": "parentNode",
          "defaultValue": null,
          "description": "Returns the parent.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/parentNode)",
          "required": true,
          "type": {
            "name": "ParentNode"
          },
          "tags": {}
        },
        "previousSibling": {
          "name": "previousSibling",
          "defaultValue": null,
          "description": "Returns the previous sibling.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/previousSibling)",
          "required": true,
          "type": {
            "name": "ChildNode"
          },
          "tags": {}
        },
        "textContent": {
          "name": "textContent",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/textContent)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "appendChild": {
          "name": "appendChild",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/appendChild)",
          "required": true,
          "type": {
            "name": "<T extends Node>(node: T) => T"
          },
          "tags": {}
        },
        "cloneNode": {
          "name": "cloneNode",
          "defaultValue": null,
          "description": "Returns a copy of node. If deep is true, the copy also includes the node's descendants.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/cloneNode)",
          "required": true,
          "type": {
            "name": "(subtree?: boolean) => Node"
          },
          "tags": {}
        },
        "compareDocumentPosition": {
          "name": "compareDocumentPosition",
          "defaultValue": null,
          "description": "Returns a bitmask indicating the position of other relative to node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/compareDocumentPosition)",
          "required": true,
          "type": {
            "name": "(other: Node) => number"
          },
          "tags": {}
        },
        "contains": {
          "name": "contains",
          "defaultValue": null,
          "description": "Returns true if other is an inclusive descendant of node, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/contains)",
          "required": true,
          "type": {
            "name": "(other: Node) => boolean"
          },
          "tags": {}
        },
        "getRootNode": {
          "name": "getRootNode",
          "defaultValue": null,
          "description": "Returns node's root.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/getRootNode)",
          "required": true,
          "type": {
            "name": "(options?: GetRootNodeOptions) => Node"
          },
          "tags": {}
        },
        "hasChildNodes": {
          "name": "hasChildNodes",
          "defaultValue": null,
          "description": "Returns whether node has children.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/hasChildNodes)",
          "required": true,
          "type": {
            "name": "() => boolean"
          },
          "tags": {}
        },
        "insertBefore": {
          "name": "insertBefore",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/insertBefore)",
          "required": true,
          "type": {
            "name": "<T extends Node>(node: T, child: Node) => T"
          },
          "tags": {}
        },
        "isDefaultNamespace": {
          "name": "isDefaultNamespace",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isDefaultNamespace)",
          "required": true,
          "type": {
            "name": "(namespace: string) => boolean"
          },
          "tags": {}
        },
        "isEqualNode": {
          "name": "isEqualNode",
          "defaultValue": null,
          "description": "Returns whether node and otherNode have the same properties.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isEqualNode)",
          "required": true,
          "type": {
            "name": "(otherNode: Node) => boolean"
          },
          "tags": {}
        },
        "isSameNode": {
          "name": "isSameNode",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isSameNode)",
          "required": true,
          "type": {
            "name": "(otherNode: Node) => boolean"
          },
          "tags": {}
        },
        "lookupNamespaceURI": {
          "name": "lookupNamespaceURI",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lookupNamespaceURI)",
          "required": true,
          "type": {
            "name": "(prefix: string) => string"
          },
          "tags": {}
        },
        "lookupPrefix": {
          "name": "lookupPrefix",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lookupPrefix)",
          "required": true,
          "type": {
            "name": "(namespace: string) => string"
          },
          "tags": {}
        },
        "normalize": {
          "name": "normalize",
          "defaultValue": null,
          "description": "Removes empty exclusive Text nodes and concatenates the data of remaining contiguous exclusive Text nodes into the first of their nodes.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/normalize)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "removeChild": {
          "name": "removeChild",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/removeChild)",
          "required": true,
          "type": {
            "name": "<T extends Node>(child: T) => T"
          },
          "tags": {}
        },
        "replaceChild": {
          "name": "replaceChild",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/replaceChild)",
          "required": true,
          "type": {
            "name": "<T extends Node>(node: Node, child: T) => T"
          },
          "tags": {}
        },
        "ELEMENT_NODE": {
          "name": "ELEMENT_NODE",
          "defaultValue": null,
          "description": "node is an element.",
          "required": true,
          "type": {
            "name": "1"
          },
          "tags": {}
        },
        "ATTRIBUTE_NODE": {
          "name": "ATTRIBUTE_NODE",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "2"
          },
          "tags": {}
        },
        "TEXT_NODE": {
          "name": "TEXT_NODE",
          "defaultValue": null,
          "description": "node is a Text node.",
          "required": true,
          "type": {
            "name": "3"
          },
          "tags": {}
        },
        "CDATA_SECTION_NODE": {
          "name": "CDATA_SECTION_NODE",
          "defaultValue": null,
          "description": "node is a CDATASection node.",
          "required": true,
          "type": {
            "name": "4"
          },
          "tags": {}
        },
        "ENTITY_REFERENCE_NODE": {
          "name": "ENTITY_REFERENCE_NODE",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "5"
          },
          "tags": {}
        },
        "ENTITY_NODE": {
          "name": "ENTITY_NODE",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "6"
          },
          "tags": {}
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "name": "PROCESSING_INSTRUCTION_NODE",
          "defaultValue": null,
          "description": "node is a ProcessingInstruction node.",
          "required": true,
          "type": {
            "name": "7"
          },
          "tags": {}
        },
        "COMMENT_NODE": {
          "name": "COMMENT_NODE",
          "defaultValue": null,
          "description": "node is a Comment node.",
          "required": true,
          "type": {
            "name": "8"
          },
          "tags": {}
        },
        "DOCUMENT_NODE": {
          "name": "DOCUMENT_NODE",
          "defaultValue": null,
          "description": "node is a document.",
          "required": true,
          "type": {
            "name": "9"
          },
          "tags": {}
        },
        "DOCUMENT_TYPE_NODE": {
          "name": "DOCUMENT_TYPE_NODE",
          "defaultValue": null,
          "description": "node is a doctype.",
          "required": true,
          "type": {
            "name": "10"
          },
          "tags": {}
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "name": "DOCUMENT_FRAGMENT_NODE",
          "defaultValue": null,
          "description": "node is a DocumentFragment node.",
          "required": true,
          "type": {
            "name": "11"
          },
          "tags": {}
        },
        "NOTATION_NODE": {
          "name": "NOTATION_NODE",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "12"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "name": "DOCUMENT_POSITION_DISCONNECTED",
          "defaultValue": null,
          "description": "Set when node and other are not in the same tree.",
          "required": true,
          "type": {
            "name": "1"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "name": "DOCUMENT_POSITION_PRECEDING",
          "defaultValue": null,
          "description": "Set when other is preceding node.",
          "required": true,
          "type": {
            "name": "2"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "name": "DOCUMENT_POSITION_FOLLOWING",
          "defaultValue": null,
          "description": "Set when other is following node.",
          "required": true,
          "type": {
            "name": "4"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "name": "DOCUMENT_POSITION_CONTAINS",
          "defaultValue": null,
          "description": "Set when other is an ancestor of node.",
          "required": true,
          "type": {
            "name": "8"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "name": "DOCUMENT_POSITION_CONTAINED_BY",
          "defaultValue": null,
          "description": "Set when other is a descendant of node.",
          "required": true,
          "type": {
            "name": "16"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "name": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "32"
          },
          "tags": {}
        }
      },
      "EventTarget": {
        "dispatchEvent": {
          "name": "dispatchEvent",
          "defaultValue": null,
          "description": "Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent)",
          "required": true,
          "type": {
            "name": "(event: Event) => boolean"
          },
          "tags": {}
        }
      },
      "ARIAMixin": {
        "ariaAtomic": {
          "name": "ariaAtomic",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaAtomic)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaAutoComplete": {
          "name": "ariaAutoComplete",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaAutoComplete)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaBrailleLabel": {
          "name": "ariaBrailleLabel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaBrailleLabel)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaBrailleRoleDescription": {
          "name": "ariaBrailleRoleDescription",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaBrailleRoleDescription)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaBusy": {
          "name": "ariaBusy",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaBusy)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaChecked": {
          "name": "ariaChecked",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaChecked)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaColCount": {
          "name": "ariaColCount",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColCount)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaColIndex": {
          "name": "ariaColIndex",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColIndex)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaColIndexText": {
          "name": "ariaColIndexText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColIndexText)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaColSpan": {
          "name": "ariaColSpan",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColSpan)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaCurrent": {
          "name": "ariaCurrent",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaCurrent)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaDescription": {
          "name": "ariaDescription",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaDescription)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaDisabled": {
          "name": "ariaDisabled",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaDisabled)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaExpanded": {
          "name": "ariaExpanded",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaExpanded)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaHasPopup": {
          "name": "ariaHasPopup",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaHasPopup)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaHidden": {
          "name": "ariaHidden",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaHidden)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaInvalid": {
          "name": "ariaInvalid",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaKeyShortcuts": {
          "name": "ariaKeyShortcuts",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaKeyShortcuts)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaLabel": {
          "name": "ariaLabel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaLabel)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaLevel": {
          "name": "ariaLevel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaLevel)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaLive": {
          "name": "ariaLive",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaLive)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaModal": {
          "name": "ariaModal",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaModal)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaMultiLine": {
          "name": "ariaMultiLine",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaMultiLine)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaMultiSelectable": {
          "name": "ariaMultiSelectable",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaMultiSelectable)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaOrientation": {
          "name": "ariaOrientation",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaOrientation)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaPlaceholder": {
          "name": "ariaPlaceholder",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaPlaceholder)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaPosInSet": {
          "name": "ariaPosInSet",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaPosInSet)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaPressed": {
          "name": "ariaPressed",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaPressed)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaReadOnly": {
          "name": "ariaReadOnly",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaReadOnly)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRelevant": {
          "name": "ariaRelevant",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRelevant)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRequired": {
          "name": "ariaRequired",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRequired)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRoleDescription": {
          "name": "ariaRoleDescription",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRoleDescription)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRowCount": {
          "name": "ariaRowCount",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowCount)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRowIndex": {
          "name": "ariaRowIndex",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowIndex)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRowIndexText": {
          "name": "ariaRowIndexText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowIndexText)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRowSpan": {
          "name": "ariaRowSpan",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowSpan)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaSelected": {
          "name": "ariaSelected",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaSelected)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaSetSize": {
          "name": "ariaSetSize",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaSetSize)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaSort": {
          "name": "ariaSort",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaSort)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaValueMax": {
          "name": "ariaValueMax",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueMax)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaValueMin": {
          "name": "ariaValueMin",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueMin)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaValueNow": {
          "name": "ariaValueNow",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueNow)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaValueText": {
          "name": "ariaValueText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueText)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "role": {
          "name": "role",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        }
      },
      "Animatable": {
        "animate": {
          "name": "animate",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animate)",
          "required": true,
          "type": {
            "name": "(keyframes: Keyframe[] | PropertyIndexedKeyframes, options?: number | KeyframeAnimationOptions) => Animation"
          },
          "tags": {}
        },
        "getAnimations": {
          "name": "getAnimations",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAnimations)",
          "required": true,
          "type": {
            "name": "(options?: GetAnimationsOptions) => Animation[]"
          },
          "tags": {}
        }
      },
      "ChildNode": {
        "after": {
          "name": "after",
          "defaultValue": null,
          "description": "Inserts nodes just after node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/after)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        },
        "before": {
          "name": "before",
          "defaultValue": null,
          "description": "Inserts nodes just before node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/before)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        },
        "remove": {
          "name": "remove",
          "defaultValue": null,
          "description": "Removes node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/remove)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "replaceWith": {
          "name": "replaceWith",
          "defaultValue": null,
          "description": "Replaces node with nodes, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/replaceWith)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        }
      },
      "NonDocumentTypeChildNode": {
        "nextElementSibling": {
          "name": "nextElementSibling",
          "defaultValue": null,
          "description": "Returns the first following sibling that is an element, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/nextElementSibling)",
          "required": true,
          "type": {
            "name": "Element"
          },
          "tags": {}
        },
        "previousElementSibling": {
          "name": "previousElementSibling",
          "defaultValue": null,
          "description": "Returns the first preceding sibling that is an element, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/previousElementSibling)",
          "required": true,
          "type": {
            "name": "Element"
          },
          "tags": {}
        }
      },
      "ParentNode": {
        "childElementCount": {
          "name": "childElementCount",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/childElementCount)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "children": {
          "name": "children",
          "defaultValue": null,
          "description": "Returns the child elements.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/children)",
          "required": true,
          "type": {
            "name": "HTMLCollection"
          },
          "tags": {}
        },
        "firstElementChild": {
          "name": "firstElementChild",
          "defaultValue": null,
          "description": "Returns the first child that is an element, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/firstElementChild)",
          "required": true,
          "type": {
            "name": "Element"
          },
          "tags": {}
        },
        "lastElementChild": {
          "name": "lastElementChild",
          "defaultValue": null,
          "description": "Returns the last child that is an element, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/lastElementChild)",
          "required": true,
          "type": {
            "name": "Element"
          },
          "tags": {}
        },
        "append": {
          "name": "append",
          "defaultValue": null,
          "description": "Inserts nodes after the last child of node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/append)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        },
        "prepend": {
          "name": "prepend",
          "defaultValue": null,
          "description": "Inserts nodes before the first child of node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/prepend)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        },
        "querySelector": {
          "name": "querySelector",
          "defaultValue": null,
          "description": "Returns the first element that is a descendant of node that matches selectors.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/querySelector)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementTagNameMap>(selectors: K): HTMLElementTagNameMap[K]; <K extends keyof SVGElementTagNameMap>(selectors: K): SVGElementTagNameMap[K]; <K extends keyof MathMLElementTagNameMap>(selectors: K): MathMLElementTagNameMap[K]; <K extends keyof HTMLElementDeprecatedTagNameMap>(selectors: K): HTMLE..."
          },
          "tags": {
            "deprecated": ""
          }
        },
        "querySelectorAll": {
          "name": "querySelectorAll",
          "defaultValue": null,
          "description": "Returns all element descendants of node that match selectors.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/querySelectorAll)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementTagNameMap>(selectors: K): NodeListOf<HTMLElementTagNameMap[K]>; <K extends keyof SVGElementTagNameMap>(selectors: K): NodeListOf<...>; <K extends keyof MathMLElementTagNameMap>(selectors: K): NodeListOf<...>; <K extends keyof HTMLElementDeprecatedTagNameMap>(selectors: K): NodeListOf<...."
          },
          "tags": {
            "deprecated": ""
          }
        },
        "replaceChildren": {
          "name": "replaceChildren",
          "defaultValue": null,
          "description": "Replace all children of node with nodes, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/replaceChildren)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        }
      },
      "Slottable": {
        "assignedSlot": {
          "name": "assignedSlot",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/assignedSlot)",
          "required": true,
          "type": {
            "name": "HTMLSlotElement"
          },
          "tags": {}
        }
      },
      "ElementCSSInlineStyle": {
        "attributeStyleMap": {
          "name": "attributeStyleMap",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/attributeStyleMap)",
          "required": true,
          "type": {
            "name": "StylePropertyMap"
          },
          "tags": {}
        },
        "style": {
          "name": "style",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/style)",
          "required": true,
          "type": {
            "name": "CSSStyleDeclaration"
          },
          "tags": {}
        }
      },
      "ElementContentEditable": {
        "contentEditable": {
          "name": "contentEditable",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/contentEditable)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "enterKeyHint": {
          "name": "enterKeyHint",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/enterKeyHint)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "inputMode": {
          "name": "inputMode",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/inputMode)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "isContentEditable": {
          "name": "isContentEditable",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/isContentEditable)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        }
      },
      "GlobalEventHandlers": {
        "onabort": {
          "name": "onabort",
          "defaultValue": null,
          "description": "Fires when the user aborts the download.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: UIEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/abort_event)"
          }
        },
        "onanimationcancel": {
          "name": "onanimationcancel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationcancel_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: AnimationEvent) => any"
          },
          "tags": {}
        },
        "onanimationend": {
          "name": "onanimationend",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: AnimationEvent) => any"
          },
          "tags": {}
        },
        "onanimationiteration": {
          "name": "onanimationiteration",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: AnimationEvent) => any"
          },
          "tags": {}
        },
        "onanimationstart": {
          "name": "onanimationstart",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: AnimationEvent) => any"
          },
          "tags": {}
        },
        "onauxclick": {
          "name": "onauxclick",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/auxclick_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {}
        },
        "onbeforeinput": {
          "name": "onbeforeinput",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/beforeinput_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: InputEvent) => any"
          },
          "tags": {}
        },
        "onbeforetoggle": {
          "name": "onbeforetoggle",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/beforetoggle_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onblur": {
          "name": "onblur",
          "defaultValue": null,
          "description": "Fires when the object loses the input focus.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: FocusEvent) => any"
          },
          "tags": {
            "param": "ev The focus event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/blur_event)"
          }
        },
        "oncancel": {
          "name": "oncancel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/cancel_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oncanplay": {
          "name": "oncanplay",
          "defaultValue": null,
          "description": "Occurs when playback is possible, but would require further buffering.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplay_event)"
          }
        },
        "oncanplaythrough": {
          "name": "oncanplaythrough",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplaythrough_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onchange": {
          "name": "onchange",
          "defaultValue": null,
          "description": "Fires when the contents of the object or selection have changed.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/change_event)"
          }
        },
        "onclick": {
          "name": "onclick",
          "defaultValue": null,
          "description": "Fires when the user clicks the left mouse button on the object",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/click_event)"
          }
        },
        "onclose": {
          "name": "onclose",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/close_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oncontextlost": {
          "name": "oncontextlost",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/contextlost_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oncontextmenu": {
          "name": "oncontextmenu",
          "defaultValue": null,
          "description": "Fires when the user clicks the right mouse button in the client area, opening the context menu.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/contextmenu_event)"
          }
        },
        "oncontextrestored": {
          "name": "oncontextrestored",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/contextrestored_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oncopy": {
          "name": "oncopy",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/copy_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: ClipboardEvent) => any"
          },
          "tags": {}
        },
        "oncuechange": {
          "name": "oncuechange",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/cuechange_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oncut": {
          "name": "oncut",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/cut_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: ClipboardEvent) => any"
          },
          "tags": {}
        },
        "ondblclick": {
          "name": "ondblclick",
          "defaultValue": null,
          "description": "Fires when the user double-clicks the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/dblclick_event)"
          }
        },
        "ondrag": {
          "name": "ondrag",
          "defaultValue": null,
          "description": "Fires on the source object continuously during a drag operation.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drag_event)"
          }
        },
        "ondragend": {
          "name": "ondragend",
          "defaultValue": null,
          "description": "Fires on the source object when the user releases the mouse at the close of a drag operation.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragend_event)"
          }
        },
        "ondragenter": {
          "name": "ondragenter",
          "defaultValue": null,
          "description": "Fires on the target element when the user drags the object to a valid drop target.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The drag event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragenter_event)"
          }
        },
        "ondragleave": {
          "name": "ondragleave",
          "defaultValue": null,
          "description": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The drag event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragleave_event)"
          }
        },
        "ondragover": {
          "name": "ondragover",
          "defaultValue": null,
          "description": "Fires on the target element continuously while the user drags the object over a valid drop target.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragover_event)"
          }
        },
        "ondragstart": {
          "name": "ondragstart",
          "defaultValue": null,
          "description": "Fires on the source object when the user starts to drag a text selection or selected object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragstart_event)"
          }
        },
        "ondrop": {
          "name": "ondrop",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drop_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {}
        },
        "ondurationchange": {
          "name": "ondurationchange",
          "defaultValue": null,
          "description": "Occurs when the duration attribute is updated.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/durationchange_event)"
          }
        },
        "onemptied": {
          "name": "onemptied",
          "defaultValue": null,
          "description": "Occurs when the media element is reset to its initial state.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/emptied_event)"
          }
        },
        "onended": {
          "name": "onended",
          "defaultValue": null,
          "description": "Occurs when the end of playback is reached.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ended_event)"
          }
        },
        "onerror": {
          "name": "onerror",
          "defaultValue": null,
          "description": "Fires when an error occurs during object loading.",
          "required": true,
          "type": {
            "name": "OnErrorEventHandlerNonNull"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/error_event)"
          }
        },
        "onfocus": {
          "name": "onfocus",
          "defaultValue": null,
          "description": "Fires when the object receives focus.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: FocusEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/focus_event)"
          }
        },
        "onformdata": {
          "name": "onformdata",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/formdata_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: FormDataEvent) => any"
          },
          "tags": {}
        },
        "ongotpointercapture": {
          "name": "ongotpointercapture",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/gotpointercapture_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "oninput": {
          "name": "oninput",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/input_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oninvalid": {
          "name": "oninvalid",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/invalid_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onkeydown": {
          "name": "onkeydown",
          "defaultValue": null,
          "description": "Fires when the user presses a key.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: KeyboardEvent) => any"
          },
          "tags": {
            "param": "ev The keyboard event\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keydown_event)"
          }
        },
        "onkeypress": {
          "name": "onkeypress",
          "defaultValue": null,
          "description": "Fires when the user presses an alphanumeric key.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: KeyboardEvent) => any"
          },
          "tags": {
            "param": "ev The event.",
            "deprecated": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keypress_event)"
          }
        },
        "onkeyup": {
          "name": "onkeyup",
          "defaultValue": null,
          "description": "Fires when the user releases a key.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: KeyboardEvent) => any"
          },
          "tags": {
            "param": "ev The keyboard event\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keyup_event)"
          }
        },
        "onload": {
          "name": "onload",
          "defaultValue": null,
          "description": "Fires immediately after the browser loads the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGElement/load_event)"
          }
        },
        "onloadeddata": {
          "name": "onloadeddata",
          "defaultValue": null,
          "description": "Occurs when media data is loaded at the current playback position.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadeddata_event)"
          }
        },
        "onloadedmetadata": {
          "name": "onloadedmetadata",
          "defaultValue": null,
          "description": "Occurs when the duration and dimensions of the media have been determined.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadedmetadata_event)"
          }
        },
        "onloadstart": {
          "name": "onloadstart",
          "defaultValue": null,
          "description": "Occurs when Internet Explorer begins looking for media data.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadstart_event)"
          }
        },
        "onlostpointercapture": {
          "name": "onlostpointercapture",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/lostpointercapture_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onmousedown": {
          "name": "onmousedown",
          "defaultValue": null,
          "description": "Fires when the user clicks the object with either mouse button.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mousedown_event)"
          }
        },
        "onmouseenter": {
          "name": "onmouseenter",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseenter_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {}
        },
        "onmouseleave": {
          "name": "onmouseleave",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseleave_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {}
        },
        "onmousemove": {
          "name": "onmousemove",
          "defaultValue": null,
          "description": "Fires when the user moves the mouse over the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mousemove_event)"
          }
        },
        "onmouseout": {
          "name": "onmouseout",
          "defaultValue": null,
          "description": "Fires when the user moves the mouse pointer outside the boundaries of the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseout_event)"
          }
        },
        "onmouseover": {
          "name": "onmouseover",
          "defaultValue": null,
          "description": "Fires when the user moves the mouse pointer into the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseover_event)"
          }
        },
        "onmouseup": {
          "name": "onmouseup",
          "defaultValue": null,
          "description": "Fires when the user releases a mouse button while the mouse is over the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseup_event)"
          }
        },
        "onpaste": {
          "name": "onpaste",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/paste_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: ClipboardEvent) => any"
          },
          "tags": {}
        },
        "onpause": {
          "name": "onpause",
          "defaultValue": null,
          "description": "Occurs when playback is paused.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/pause_event)"
          }
        },
        "onplay": {
          "name": "onplay",
          "defaultValue": null,
          "description": "Occurs when the play method is requested.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/play_event)"
          }
        },
        "onplaying": {
          "name": "onplaying",
          "defaultValue": null,
          "description": "Occurs when the audio or video has started playing.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/playing_event)"
          }
        },
        "onpointercancel": {
          "name": "onpointercancel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointercancel_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerdown": {
          "name": "onpointerdown",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerdown_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerenter": {
          "name": "onpointerenter",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerenter_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerleave": {
          "name": "onpointerleave",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerleave_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointermove": {
          "name": "onpointermove",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointermove_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerout": {
          "name": "onpointerout",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerout_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerover": {
          "name": "onpointerover",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerover_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerup": {
          "name": "onpointerup",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerup_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onprogress": {
          "name": "onprogress",
          "defaultValue": null,
          "description": "Occurs to indicate progress while downloading media data.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: ProgressEvent<EventTarget>) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/progress_event)"
          }
        },
        "onratechange": {
          "name": "onratechange",
          "defaultValue": null,
          "description": "Occurs when the playback rate is increased or decreased.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ratechange_event)"
          }
        },
        "onreset": {
          "name": "onreset",
          "defaultValue": null,
          "description": "Fires when the user resets a form.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/reset_event)"
          }
        },
        "onresize": {
          "name": "onresize",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/resize_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: UIEvent) => any"
          },
          "tags": {}
        },
        "onscroll": {
          "name": "onscroll",
          "defaultValue": null,
          "description": "Fires when the user repositions the scroll box in the scroll bar on the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scroll_event)"
          }
        },
        "onscrollend": {
          "name": "onscrollend",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scrollend_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onsecuritypolicyviolation": {
          "name": "onsecuritypolicyviolation",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/securitypolicyviolation_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: SecurityPolicyViolationEvent) => any"
          },
          "tags": {}
        },
        "onseeked": {
          "name": "onseeked",
          "defaultValue": null,
          "description": "Occurs when the seek operation ends.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeked_event)"
          }
        },
        "onseeking": {
          "name": "onseeking",
          "defaultValue": null,
          "description": "Occurs when the current playback position is moved.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeking_event)"
          }
        },
        "onselect": {
          "name": "onselect",
          "defaultValue": null,
          "description": "Fires when the current selection changes.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/select_event)"
          }
        },
        "onselectionchange": {
          "name": "onselectionchange",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/selectionchange_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onselectstart": {
          "name": "onselectstart",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/selectstart_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onslotchange": {
          "name": "onslotchange",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSlotElement/slotchange_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onstalled": {
          "name": "onstalled",
          "defaultValue": null,
          "description": "Occurs when the download has stopped.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/stalled_event)"
          }
        },
        "onsubmit": {
          "name": "onsubmit",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/submit_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: SubmitEvent) => any"
          },
          "tags": {}
        },
        "onsuspend": {
          "name": "onsuspend",
          "defaultValue": null,
          "description": "Occurs if the load operation has been intentionally halted.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/suspend_event)"
          }
        },
        "ontimeupdate": {
          "name": "ontimeupdate",
          "defaultValue": null,
          "description": "Occurs to indicate the current playback position.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/timeupdate_event)"
          }
        },
        "ontoggle": {
          "name": "ontoggle",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/toggle_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "ontouchcancel": {
          "name": "ontouchcancel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchcancel_event)",
          "required": false,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TouchEvent) => any"
          },
          "tags": {}
        },
        "ontouchend": {
          "name": "ontouchend",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchend_event)",
          "required": false,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TouchEvent) => any"
          },
          "tags": {}
        },
        "ontouchmove": {
          "name": "ontouchmove",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchmove_event)",
          "required": false,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TouchEvent) => any"
          },
          "tags": {}
        },
        "ontouchstart": {
          "name": "ontouchstart",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchstart_event)",
          "required": false,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TouchEvent) => any"
          },
          "tags": {}
        },
        "ontransitioncancel": {
          "name": "ontransitioncancel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitioncancel_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TransitionEvent) => any"
          },
          "tags": {}
        },
        "ontransitionend": {
          "name": "ontransitionend",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TransitionEvent) => any"
          },
          "tags": {}
        },
        "ontransitionrun": {
          "name": "ontransitionrun",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionrun_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TransitionEvent) => any"
          },
          "tags": {}
        },
        "ontransitionstart": {
          "name": "ontransitionstart",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionstart_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TransitionEvent) => any"
          },
          "tags": {}
        },
        "onvolumechange": {
          "name": "onvolumechange",
          "defaultValue": null,
          "description": "Occurs when the volume is changed, or playback is muted or unmuted.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/volumechange_event)"
          }
        },
        "onwaiting": {
          "name": "onwaiting",
          "defaultValue": null,
          "description": "Occurs when playback stops because the next frame of a video resource is not available.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/waiting_event)"
          }
        },
        "onwebkitanimationend": {
          "name": "onwebkitanimationend",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "deprecated": "This is a legacy alias of `onanimationend`.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event)"
          }
        },
        "onwebkitanimationiteration": {
          "name": "onwebkitanimationiteration",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "deprecated": "This is a legacy alias of `onanimationiteration`.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event)"
          }
        },
        "onwebkitanimationstart": {
          "name": "onwebkitanimationstart",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "deprecated": "This is a legacy alias of `onanimationstart`.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event)"
          }
        },
        "onwebkittransitionend": {
          "name": "onwebkittransitionend",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "deprecated": "This is a legacy alias of `ontransitionend`.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event)"
          }
        },
        "onwheel": {
          "name": "onwheel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/wheel_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: WheelEvent) => any"
          },
          "tags": {}
        }
      },
      "HTMLOrSVGElement": {
        "autofocus": {
          "name": "autofocus",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/autofocus)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "dataset": {
          "name": "dataset",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dataset)",
          "required": true,
          "type": {
            "name": "DOMStringMap"
          },
          "tags": {}
        },
        "nonce": {
          "name": "nonce",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/nonce)",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "tabIndex": {
          "name": "tabIndex",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/tabIndex)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "blur": {
          "name": "blur",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/blur)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "focus": {
          "name": "focus",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/focus)",
          "required": true,
          "type": {
            "name": "(options?: FocusOptions) => void"
          },
          "tags": {}
        }
      }
    }
  },
  {
    "tags": {},
    "description": "Returns the first focusable element within a given element\n\nFocusable elements defined in the constant {@link baseFocusableElementSelectors}",
    "methods": [],
    "displayName": "queryFirstFocusableElement",
    "props": {
      "HTMLElement": {
        "accessKey": {
          "name": "accessKey",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/accessKey)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "accessKeyLabel": {
          "name": "accessKeyLabel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/accessKeyLabel)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "autocapitalize": {
          "name": "autocapitalize",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/autocapitalize)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "dir": {
          "name": "dir",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dir)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "draggable": {
          "name": "draggable",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/draggable)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "hidden": {
          "name": "hidden",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/hidden)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "inert": {
          "name": "inert",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/inert)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "innerText": {
          "name": "innerText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/innerText)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "lang": {
          "name": "lang",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/lang)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "offsetHeight": {
          "name": "offsetHeight",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetHeight)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "offsetLeft": {
          "name": "offsetLeft",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetLeft)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "offsetParent": {
          "name": "offsetParent",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetParent)",
          "required": true,
          "type": {
            "name": "Element"
          },
          "tags": {}
        },
        "offsetTop": {
          "name": "offsetTop",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetTop)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "offsetWidth": {
          "name": "offsetWidth",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetWidth)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "outerText": {
          "name": "outerText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/outerText)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "popover": {
          "name": "popover",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/popover)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "spellcheck": {
          "name": "spellcheck",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/spellcheck)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "title": {
          "name": "title",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/title)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "translate": {
          "name": "translate",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/translate)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "writingSuggestions": {
          "name": "writingSuggestions",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/writingSuggestions)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "attachInternals": {
          "name": "attachInternals",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/attachInternals)",
          "required": true,
          "type": {
            "name": "() => ElementInternals"
          },
          "tags": {}
        },
        "click": {
          "name": "click",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/click)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "hidePopover": {
          "name": "hidePopover",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/hidePopover)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "showPopover": {
          "name": "showPopover",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/showPopover)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "togglePopover": {
          "name": "togglePopover",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/togglePopover)",
          "required": true,
          "type": {
            "name": "(options?: boolean) => boolean"
          },
          "tags": {}
        },
        "addEventListener": {
          "name": "addEventListener",
          "defaultValue": null,
          "description": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/addEventListener)\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/addEventListener)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void; (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void; }"
          },
          "tags": {}
        },
        "removeEventListener": {
          "name": "removeEventListener",
          "defaultValue": null,
          "description": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/removeEventListener)\nRemoves the event listener in target's event listener list with the same type, callback, and options.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/removeEventListener)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void; (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void; }"
          },
          "tags": {}
        }
      },
      "Element": {
        "attributes": {
          "name": "attributes",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/attributes)",
          "required": true,
          "type": {
            "name": "NamedNodeMap"
          },
          "tags": {}
        },
        "classList": {
          "name": "classList",
          "defaultValue": null,
          "description": "Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/classList)",
          "required": true,
          "type": {
            "name": "DOMTokenList"
          },
          "tags": {}
        },
        "className": {
          "name": "className",
          "defaultValue": null,
          "description": "Returns the value of element's class content attribute. Can be set to change it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/className)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "clientHeight": {
          "name": "clientHeight",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientHeight)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "clientLeft": {
          "name": "clientLeft",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientLeft)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "clientTop": {
          "name": "clientTop",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientTop)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "clientWidth": {
          "name": "clientWidth",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientWidth)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "currentCSSZoom": {
          "name": "currentCSSZoom",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/currentCSSZoom)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "id": {
          "name": "id",
          "defaultValue": null,
          "description": "Returns the value of element's id content attribute. Can be set to change it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/id)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "innerHTML": {
          "name": "innerHTML",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/innerHTML)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "localName": {
          "name": "localName",
          "defaultValue": null,
          "description": "Returns the local name.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/localName)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "namespaceURI": {
          "name": "namespaceURI",
          "defaultValue": null,
          "description": "Returns the namespace.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/namespaceURI)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "onfullscreenchange": {
          "name": "onfullscreenchange",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/fullscreenchange_event)",
          "required": true,
          "type": {
            "name": "(this: Element, ev: Event) => any"
          },
          "tags": {}
        },
        "onfullscreenerror": {
          "name": "onfullscreenerror",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/fullscreenerror_event)",
          "required": true,
          "type": {
            "name": "(this: Element, ev: Event) => any"
          },
          "tags": {}
        },
        "outerHTML": {
          "name": "outerHTML",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/outerHTML)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ownerDocument": {
          "name": "ownerDocument",
          "defaultValue": null,
          "description": "Returns the node document. Returns null for documents.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/ownerDocument)",
          "required": true,
          "type": {
            "name": "Document"
          },
          "tags": {}
        },
        "part": {
          "name": "part",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/part)",
          "required": true,
          "type": {
            "name": "DOMTokenList"
          },
          "tags": {}
        },
        "prefix": {
          "name": "prefix",
          "defaultValue": null,
          "description": "Returns the namespace prefix.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/prefix)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "scrollHeight": {
          "name": "scrollHeight",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollHeight)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "scrollLeft": {
          "name": "scrollLeft",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollLeft)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "scrollTop": {
          "name": "scrollTop",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollTop)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "scrollWidth": {
          "name": "scrollWidth",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollWidth)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "shadowRoot": {
          "name": "shadowRoot",
          "defaultValue": null,
          "description": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/shadowRoot)",
          "required": true,
          "type": {
            "name": "ShadowRoot"
          },
          "tags": {}
        },
        "slot": {
          "name": "slot",
          "defaultValue": null,
          "description": "Returns the value of element's slot content attribute. Can be set to change it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/slot)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "tagName": {
          "name": "tagName",
          "defaultValue": null,
          "description": "Returns the HTML-uppercased qualified name.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/tagName)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "attachShadow": {
          "name": "attachShadow",
          "defaultValue": null,
          "description": "Creates a shadow root for element and returns it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/attachShadow)",
          "required": true,
          "type": {
            "name": "(init: ShadowRootInit) => ShadowRoot"
          },
          "tags": {}
        },
        "checkVisibility": {
          "name": "checkVisibility",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/checkVisibility)",
          "required": true,
          "type": {
            "name": "(options?: CheckVisibilityOptions) => boolean"
          },
          "tags": {}
        },
        "closest": {
          "name": "closest",
          "defaultValue": null,
          "description": "Returns the first (starting at element) inclusive ancestor that matches selectors, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/closest)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementTagNameMap>(selector: K): HTMLElementTagNameMap[K]; <K extends keyof SVGElementTagNameMap>(selector: K): SVGElementTagNameMap[K]; <K extends keyof MathMLElementTagNameMap>(selector: K): MathMLElementTagNameMap[K]; <E extends Element = Element>(selectors: string): E; }"
          },
          "tags": {}
        },
        "computedStyleMap": {
          "name": "computedStyleMap",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/computedStyleMap)",
          "required": true,
          "type": {
            "name": "() => StylePropertyMapReadOnly"
          },
          "tags": {}
        },
        "getAttribute": {
          "name": "getAttribute",
          "defaultValue": null,
          "description": "Returns element's first attribute whose qualified name is qualifiedName, and null if there is no such attribute otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttribute)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string) => string"
          },
          "tags": {}
        },
        "getAttributeNS": {
          "name": "getAttributeNS",
          "defaultValue": null,
          "description": "Returns element's attribute whose namespace is namespace and local name is localName, and null if there is no such attribute otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNS)",
          "required": true,
          "type": {
            "name": "(namespace: string, localName: string) => string"
          },
          "tags": {}
        },
        "getAttributeNames": {
          "name": "getAttributeNames",
          "defaultValue": null,
          "description": "Returns the qualified names of all element's attributes. Can contain duplicates.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNames)",
          "required": true,
          "type": {
            "name": "() => string[]"
          },
          "tags": {}
        },
        "getAttributeNode": {
          "name": "getAttributeNode",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNode)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string) => Attr"
          },
          "tags": {}
        },
        "getAttributeNodeNS": {
          "name": "getAttributeNodeNS",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNodeNS)",
          "required": true,
          "type": {
            "name": "(namespace: string, localName: string) => Attr"
          },
          "tags": {}
        },
        "getBoundingClientRect": {
          "name": "getBoundingClientRect",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getBoundingClientRect)",
          "required": true,
          "type": {
            "name": "() => DOMRect"
          },
          "tags": {}
        },
        "getClientRects": {
          "name": "getClientRects",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getClientRects)",
          "required": true,
          "type": {
            "name": "() => DOMRectList"
          },
          "tags": {}
        },
        "getElementsByClassName": {
          "name": "getElementsByClassName",
          "defaultValue": null,
          "description": "Returns a HTMLCollection of the elements in the object on which the method was invoked (a document or an element) that have all the classes given by classNames. The classNames argument is interpreted as a space-separated list of classes.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getElementsByClassName)",
          "required": true,
          "type": {
            "name": "(classNames: string) => HTMLCollectionOf<Element>"
          },
          "tags": {}
        },
        "getElementsByTagName": {
          "name": "getElementsByTagName",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getElementsByTagName)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<HTMLElementTagNameMap[K]>; <K extends keyof SVGElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<...>; <K extends keyof MathMLElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<...>; <K extends keyof HTMLElementDeprecatedTagNameMa..."
          },
          "tags": {
            "deprecated": ""
          }
        },
        "getElementsByTagNameNS": {
          "name": "getElementsByTagNameNS",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getElementsByTagNameNS)",
          "required": true,
          "type": {
            "name": "{ (namespaceURI: \"http://www.w3.org/1999/xhtml\", localName: string): HTMLCollectionOf<HTMLElement>; (namespaceURI: \"http://www.w3.org/2000/svg\", localName: string): HTMLCollectionOf<...>; (namespaceURI: \"http://www.w3.org/1998/Math/MathML\", localName: string): HTMLCollectionOf<...>; (namespace: string, localName: st..."
          },
          "tags": {}
        },
        "getHTML": {
          "name": "getHTML",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getHTML)",
          "required": true,
          "type": {
            "name": "(options?: GetHTMLOptions) => string"
          },
          "tags": {}
        },
        "hasAttribute": {
          "name": "hasAttribute",
          "defaultValue": null,
          "description": "Returns true if element has an attribute whose qualified name is qualifiedName, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasAttribute)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string) => boolean"
          },
          "tags": {}
        },
        "hasAttributeNS": {
          "name": "hasAttributeNS",
          "defaultValue": null,
          "description": "Returns true if element has an attribute whose namespace is namespace and local name is localName.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasAttributeNS)",
          "required": true,
          "type": {
            "name": "(namespace: string, localName: string) => boolean"
          },
          "tags": {}
        },
        "hasAttributes": {
          "name": "hasAttributes",
          "defaultValue": null,
          "description": "Returns true if element has attributes, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasAttributes)",
          "required": true,
          "type": {
            "name": "() => boolean"
          },
          "tags": {}
        },
        "hasPointerCapture": {
          "name": "hasPointerCapture",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasPointerCapture)",
          "required": true,
          "type": {
            "name": "(pointerId: number) => boolean"
          },
          "tags": {}
        },
        "insertAdjacentElement": {
          "name": "insertAdjacentElement",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/insertAdjacentElement)",
          "required": true,
          "type": {
            "name": "(where: InsertPosition, element: Element) => Element"
          },
          "tags": {}
        },
        "insertAdjacentHTML": {
          "name": "insertAdjacentHTML",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/insertAdjacentHTML)",
          "required": true,
          "type": {
            "name": "(position: InsertPosition, string: string) => void"
          },
          "tags": {}
        },
        "insertAdjacentText": {
          "name": "insertAdjacentText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/insertAdjacentText)",
          "required": true,
          "type": {
            "name": "(where: InsertPosition, data: string) => void"
          },
          "tags": {}
        },
        "matches": {
          "name": "matches",
          "defaultValue": null,
          "description": "Returns true if matching selectors against element's root yields element, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/matches)",
          "required": true,
          "type": {
            "name": "(selectors: string) => boolean"
          },
          "tags": {}
        },
        "releasePointerCapture": {
          "name": "releasePointerCapture",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/releasePointerCapture)",
          "required": true,
          "type": {
            "name": "(pointerId: number) => void"
          },
          "tags": {}
        },
        "removeAttribute": {
          "name": "removeAttribute",
          "defaultValue": null,
          "description": "Removes element's first attribute whose qualified name is qualifiedName.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/removeAttribute)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string) => void"
          },
          "tags": {}
        },
        "removeAttributeNS": {
          "name": "removeAttributeNS",
          "defaultValue": null,
          "description": "Removes element's attribute whose namespace is namespace and local name is localName.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/removeAttributeNS)",
          "required": true,
          "type": {
            "name": "(namespace: string, localName: string) => void"
          },
          "tags": {}
        },
        "removeAttributeNode": {
          "name": "removeAttributeNode",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/removeAttributeNode)",
          "required": true,
          "type": {
            "name": "(attr: Attr) => Attr"
          },
          "tags": {}
        },
        "requestFullscreen": {
          "name": "requestFullscreen",
          "defaultValue": null,
          "description": "Displays element fullscreen and resolves promise when done.\n\nWhen supplied, options's navigationUI member indicates whether showing navigation UI while in fullscreen is preferred or not. If set to \"show\", navigation simplicity is preferred over screen space, and if set to \"hide\", more screen space is preferred. User agents are always free to honor user preference over the application's. The default value \"auto\" indicates no application preference.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/requestFullscreen)",
          "required": true,
          "type": {
            "name": "(options?: FullscreenOptions) => Promise<void>"
          },
          "tags": {}
        },
        "requestPointerLock": {
          "name": "requestPointerLock",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/requestPointerLock)",
          "required": true,
          "type": {
            "name": "(options?: PointerLockOptions) => Promise<void>"
          },
          "tags": {}
        },
        "scroll": {
          "name": "scroll",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scroll)",
          "required": true,
          "type": {
            "name": "{ (options?: ScrollToOptions): void; (x: number, y: number): void; }"
          },
          "tags": {}
        },
        "scrollBy": {
          "name": "scrollBy",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollBy)",
          "required": true,
          "type": {
            "name": "{ (options?: ScrollToOptions): void; (x: number, y: number): void; }"
          },
          "tags": {}
        },
        "scrollIntoView": {
          "name": "scrollIntoView",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollIntoView)",
          "required": true,
          "type": {
            "name": "(arg?: boolean | ScrollIntoViewOptions) => void"
          },
          "tags": {}
        },
        "scrollTo": {
          "name": "scrollTo",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollTo)",
          "required": true,
          "type": {
            "name": "{ (options?: ScrollToOptions): void; (x: number, y: number): void; }"
          },
          "tags": {}
        },
        "setAttribute": {
          "name": "setAttribute",
          "defaultValue": null,
          "description": "Sets the value of element's first attribute whose qualified name is qualifiedName to value.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttribute)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string, value: string) => void"
          },
          "tags": {}
        },
        "setAttributeNS": {
          "name": "setAttributeNS",
          "defaultValue": null,
          "description": "Sets the value of element's attribute whose namespace is namespace and local name is localName to value.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttributeNS)",
          "required": true,
          "type": {
            "name": "(namespace: string, qualifiedName: string, value: string) => void"
          },
          "tags": {}
        },
        "setAttributeNode": {
          "name": "setAttributeNode",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttributeNode)",
          "required": true,
          "type": {
            "name": "(attr: Attr) => Attr"
          },
          "tags": {}
        },
        "setAttributeNodeNS": {
          "name": "setAttributeNodeNS",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttributeNodeNS)",
          "required": true,
          "type": {
            "name": "(attr: Attr) => Attr"
          },
          "tags": {}
        },
        "setHTMLUnsafe": {
          "name": "setHTMLUnsafe",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setHTMLUnsafe)",
          "required": true,
          "type": {
            "name": "(html: string) => void"
          },
          "tags": {}
        },
        "setPointerCapture": {
          "name": "setPointerCapture",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setPointerCapture)",
          "required": true,
          "type": {
            "name": "(pointerId: number) => void"
          },
          "tags": {}
        },
        "toggleAttribute": {
          "name": "toggleAttribute",
          "defaultValue": null,
          "description": "If force is not given, \"toggles\" qualifiedName, removing it if it is present and adding it if it is not present. If force is true, adds qualifiedName. If force is false, removes qualifiedName.\n\nReturns true if qualifiedName is now present, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/toggleAttribute)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string, force?: boolean) => boolean"
          },
          "tags": {}
        },
        "webkitMatchesSelector": {
          "name": "webkitMatchesSelector",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(selectors: string) => boolean"
          },
          "tags": {
            "deprecated": "This is a legacy alias of `matches`.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/matches)"
          }
        }
      },
      "Node": {
        "baseURI": {
          "name": "baseURI",
          "defaultValue": null,
          "description": "Returns node's node document's document base URL.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/baseURI)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "childNodes": {
          "name": "childNodes",
          "defaultValue": null,
          "description": "Returns the children.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/childNodes)",
          "required": true,
          "type": {
            "name": "NodeListOf<ChildNode>"
          },
          "tags": {}
        },
        "firstChild": {
          "name": "firstChild",
          "defaultValue": null,
          "description": "Returns the first child.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/firstChild)",
          "required": true,
          "type": {
            "name": "ChildNode"
          },
          "tags": {}
        },
        "isConnected": {
          "name": "isConnected",
          "defaultValue": null,
          "description": "Returns true if node is connected and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isConnected)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "lastChild": {
          "name": "lastChild",
          "defaultValue": null,
          "description": "Returns the last child.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lastChild)",
          "required": true,
          "type": {
            "name": "ChildNode"
          },
          "tags": {}
        },
        "nextSibling": {
          "name": "nextSibling",
          "defaultValue": null,
          "description": "Returns the next sibling.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nextSibling)",
          "required": true,
          "type": {
            "name": "ChildNode"
          },
          "tags": {}
        },
        "nodeName": {
          "name": "nodeName",
          "defaultValue": null,
          "description": "Returns a string appropriate for the type of node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeName)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "nodeType": {
          "name": "nodeType",
          "defaultValue": null,
          "description": "Returns the type of node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeType)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "nodeValue": {
          "name": "nodeValue",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeValue)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "parentElement": {
          "name": "parentElement",
          "defaultValue": null,
          "description": "Returns the parent element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/parentElement)",
          "required": true,
          "type": {
            "name": "HTMLElement"
          },
          "tags": {}
        },
        "parentNode": {
          "name": "parentNode",
          "defaultValue": null,
          "description": "Returns the parent.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/parentNode)",
          "required": true,
          "type": {
            "name": "ParentNode"
          },
          "tags": {}
        },
        "previousSibling": {
          "name": "previousSibling",
          "defaultValue": null,
          "description": "Returns the previous sibling.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/previousSibling)",
          "required": true,
          "type": {
            "name": "ChildNode"
          },
          "tags": {}
        },
        "textContent": {
          "name": "textContent",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/textContent)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "appendChild": {
          "name": "appendChild",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/appendChild)",
          "required": true,
          "type": {
            "name": "<T extends Node>(node: T) => T"
          },
          "tags": {}
        },
        "cloneNode": {
          "name": "cloneNode",
          "defaultValue": null,
          "description": "Returns a copy of node. If deep is true, the copy also includes the node's descendants.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/cloneNode)",
          "required": true,
          "type": {
            "name": "(subtree?: boolean) => Node"
          },
          "tags": {}
        },
        "compareDocumentPosition": {
          "name": "compareDocumentPosition",
          "defaultValue": null,
          "description": "Returns a bitmask indicating the position of other relative to node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/compareDocumentPosition)",
          "required": true,
          "type": {
            "name": "(other: Node) => number"
          },
          "tags": {}
        },
        "contains": {
          "name": "contains",
          "defaultValue": null,
          "description": "Returns true if other is an inclusive descendant of node, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/contains)",
          "required": true,
          "type": {
            "name": "(other: Node) => boolean"
          },
          "tags": {}
        },
        "getRootNode": {
          "name": "getRootNode",
          "defaultValue": null,
          "description": "Returns node's root.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/getRootNode)",
          "required": true,
          "type": {
            "name": "(options?: GetRootNodeOptions) => Node"
          },
          "tags": {}
        },
        "hasChildNodes": {
          "name": "hasChildNodes",
          "defaultValue": null,
          "description": "Returns whether node has children.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/hasChildNodes)",
          "required": true,
          "type": {
            "name": "() => boolean"
          },
          "tags": {}
        },
        "insertBefore": {
          "name": "insertBefore",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/insertBefore)",
          "required": true,
          "type": {
            "name": "<T extends Node>(node: T, child: Node) => T"
          },
          "tags": {}
        },
        "isDefaultNamespace": {
          "name": "isDefaultNamespace",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isDefaultNamespace)",
          "required": true,
          "type": {
            "name": "(namespace: string) => boolean"
          },
          "tags": {}
        },
        "isEqualNode": {
          "name": "isEqualNode",
          "defaultValue": null,
          "description": "Returns whether node and otherNode have the same properties.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isEqualNode)",
          "required": true,
          "type": {
            "name": "(otherNode: Node) => boolean"
          },
          "tags": {}
        },
        "isSameNode": {
          "name": "isSameNode",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isSameNode)",
          "required": true,
          "type": {
            "name": "(otherNode: Node) => boolean"
          },
          "tags": {}
        },
        "lookupNamespaceURI": {
          "name": "lookupNamespaceURI",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lookupNamespaceURI)",
          "required": true,
          "type": {
            "name": "(prefix: string) => string"
          },
          "tags": {}
        },
        "lookupPrefix": {
          "name": "lookupPrefix",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lookupPrefix)",
          "required": true,
          "type": {
            "name": "(namespace: string) => string"
          },
          "tags": {}
        },
        "normalize": {
          "name": "normalize",
          "defaultValue": null,
          "description": "Removes empty exclusive Text nodes and concatenates the data of remaining contiguous exclusive Text nodes into the first of their nodes.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/normalize)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "removeChild": {
          "name": "removeChild",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/removeChild)",
          "required": true,
          "type": {
            "name": "<T extends Node>(child: T) => T"
          },
          "tags": {}
        },
        "replaceChild": {
          "name": "replaceChild",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/replaceChild)",
          "required": true,
          "type": {
            "name": "<T extends Node>(node: Node, child: T) => T"
          },
          "tags": {}
        },
        "ELEMENT_NODE": {
          "name": "ELEMENT_NODE",
          "defaultValue": null,
          "description": "node is an element.",
          "required": true,
          "type": {
            "name": "1"
          },
          "tags": {}
        },
        "ATTRIBUTE_NODE": {
          "name": "ATTRIBUTE_NODE",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "2"
          },
          "tags": {}
        },
        "TEXT_NODE": {
          "name": "TEXT_NODE",
          "defaultValue": null,
          "description": "node is a Text node.",
          "required": true,
          "type": {
            "name": "3"
          },
          "tags": {}
        },
        "CDATA_SECTION_NODE": {
          "name": "CDATA_SECTION_NODE",
          "defaultValue": null,
          "description": "node is a CDATASection node.",
          "required": true,
          "type": {
            "name": "4"
          },
          "tags": {}
        },
        "ENTITY_REFERENCE_NODE": {
          "name": "ENTITY_REFERENCE_NODE",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "5"
          },
          "tags": {}
        },
        "ENTITY_NODE": {
          "name": "ENTITY_NODE",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "6"
          },
          "tags": {}
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "name": "PROCESSING_INSTRUCTION_NODE",
          "defaultValue": null,
          "description": "node is a ProcessingInstruction node.",
          "required": true,
          "type": {
            "name": "7"
          },
          "tags": {}
        },
        "COMMENT_NODE": {
          "name": "COMMENT_NODE",
          "defaultValue": null,
          "description": "node is a Comment node.",
          "required": true,
          "type": {
            "name": "8"
          },
          "tags": {}
        },
        "DOCUMENT_NODE": {
          "name": "DOCUMENT_NODE",
          "defaultValue": null,
          "description": "node is a document.",
          "required": true,
          "type": {
            "name": "9"
          },
          "tags": {}
        },
        "DOCUMENT_TYPE_NODE": {
          "name": "DOCUMENT_TYPE_NODE",
          "defaultValue": null,
          "description": "node is a doctype.",
          "required": true,
          "type": {
            "name": "10"
          },
          "tags": {}
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "name": "DOCUMENT_FRAGMENT_NODE",
          "defaultValue": null,
          "description": "node is a DocumentFragment node.",
          "required": true,
          "type": {
            "name": "11"
          },
          "tags": {}
        },
        "NOTATION_NODE": {
          "name": "NOTATION_NODE",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "12"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "name": "DOCUMENT_POSITION_DISCONNECTED",
          "defaultValue": null,
          "description": "Set when node and other are not in the same tree.",
          "required": true,
          "type": {
            "name": "1"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "name": "DOCUMENT_POSITION_PRECEDING",
          "defaultValue": null,
          "description": "Set when other is preceding node.",
          "required": true,
          "type": {
            "name": "2"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "name": "DOCUMENT_POSITION_FOLLOWING",
          "defaultValue": null,
          "description": "Set when other is following node.",
          "required": true,
          "type": {
            "name": "4"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "name": "DOCUMENT_POSITION_CONTAINS",
          "defaultValue": null,
          "description": "Set when other is an ancestor of node.",
          "required": true,
          "type": {
            "name": "8"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "name": "DOCUMENT_POSITION_CONTAINED_BY",
          "defaultValue": null,
          "description": "Set when other is a descendant of node.",
          "required": true,
          "type": {
            "name": "16"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "name": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "32"
          },
          "tags": {}
        }
      },
      "EventTarget": {
        "dispatchEvent": {
          "name": "dispatchEvent",
          "defaultValue": null,
          "description": "Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent)",
          "required": true,
          "type": {
            "name": "(event: Event) => boolean"
          },
          "tags": {}
        }
      },
      "ARIAMixin": {
        "ariaAtomic": {
          "name": "ariaAtomic",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaAtomic)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaAutoComplete": {
          "name": "ariaAutoComplete",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaAutoComplete)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaBrailleLabel": {
          "name": "ariaBrailleLabel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaBrailleLabel)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaBrailleRoleDescription": {
          "name": "ariaBrailleRoleDescription",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaBrailleRoleDescription)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaBusy": {
          "name": "ariaBusy",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaBusy)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaChecked": {
          "name": "ariaChecked",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaChecked)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaColCount": {
          "name": "ariaColCount",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColCount)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaColIndex": {
          "name": "ariaColIndex",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColIndex)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaColIndexText": {
          "name": "ariaColIndexText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColIndexText)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaColSpan": {
          "name": "ariaColSpan",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColSpan)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaCurrent": {
          "name": "ariaCurrent",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaCurrent)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaDescription": {
          "name": "ariaDescription",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaDescription)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaDisabled": {
          "name": "ariaDisabled",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaDisabled)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaExpanded": {
          "name": "ariaExpanded",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaExpanded)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaHasPopup": {
          "name": "ariaHasPopup",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaHasPopup)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaHidden": {
          "name": "ariaHidden",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaHidden)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaInvalid": {
          "name": "ariaInvalid",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaKeyShortcuts": {
          "name": "ariaKeyShortcuts",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaKeyShortcuts)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaLabel": {
          "name": "ariaLabel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaLabel)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaLevel": {
          "name": "ariaLevel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaLevel)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaLive": {
          "name": "ariaLive",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaLive)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaModal": {
          "name": "ariaModal",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaModal)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaMultiLine": {
          "name": "ariaMultiLine",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaMultiLine)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaMultiSelectable": {
          "name": "ariaMultiSelectable",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaMultiSelectable)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaOrientation": {
          "name": "ariaOrientation",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaOrientation)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaPlaceholder": {
          "name": "ariaPlaceholder",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaPlaceholder)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaPosInSet": {
          "name": "ariaPosInSet",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaPosInSet)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaPressed": {
          "name": "ariaPressed",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaPressed)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaReadOnly": {
          "name": "ariaReadOnly",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaReadOnly)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRelevant": {
          "name": "ariaRelevant",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRelevant)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRequired": {
          "name": "ariaRequired",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRequired)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRoleDescription": {
          "name": "ariaRoleDescription",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRoleDescription)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRowCount": {
          "name": "ariaRowCount",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowCount)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRowIndex": {
          "name": "ariaRowIndex",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowIndex)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRowIndexText": {
          "name": "ariaRowIndexText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowIndexText)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRowSpan": {
          "name": "ariaRowSpan",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowSpan)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaSelected": {
          "name": "ariaSelected",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaSelected)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaSetSize": {
          "name": "ariaSetSize",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaSetSize)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaSort": {
          "name": "ariaSort",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaSort)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaValueMax": {
          "name": "ariaValueMax",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueMax)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaValueMin": {
          "name": "ariaValueMin",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueMin)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaValueNow": {
          "name": "ariaValueNow",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueNow)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaValueText": {
          "name": "ariaValueText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueText)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "role": {
          "name": "role",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        }
      },
      "Animatable": {
        "animate": {
          "name": "animate",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animate)",
          "required": true,
          "type": {
            "name": "(keyframes: Keyframe[] | PropertyIndexedKeyframes, options?: number | KeyframeAnimationOptions) => Animation"
          },
          "tags": {}
        },
        "getAnimations": {
          "name": "getAnimations",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAnimations)",
          "required": true,
          "type": {
            "name": "(options?: GetAnimationsOptions) => Animation[]"
          },
          "tags": {}
        }
      },
      "ChildNode": {
        "after": {
          "name": "after",
          "defaultValue": null,
          "description": "Inserts nodes just after node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/after)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        },
        "before": {
          "name": "before",
          "defaultValue": null,
          "description": "Inserts nodes just before node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/before)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        },
        "remove": {
          "name": "remove",
          "defaultValue": null,
          "description": "Removes node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/remove)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "replaceWith": {
          "name": "replaceWith",
          "defaultValue": null,
          "description": "Replaces node with nodes, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/replaceWith)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        }
      },
      "NonDocumentTypeChildNode": {
        "nextElementSibling": {
          "name": "nextElementSibling",
          "defaultValue": null,
          "description": "Returns the first following sibling that is an element, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/nextElementSibling)",
          "required": true,
          "type": {
            "name": "Element"
          },
          "tags": {}
        },
        "previousElementSibling": {
          "name": "previousElementSibling",
          "defaultValue": null,
          "description": "Returns the first preceding sibling that is an element, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/previousElementSibling)",
          "required": true,
          "type": {
            "name": "Element"
          },
          "tags": {}
        }
      },
      "ParentNode": {
        "childElementCount": {
          "name": "childElementCount",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/childElementCount)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "children": {
          "name": "children",
          "defaultValue": null,
          "description": "Returns the child elements.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/children)",
          "required": true,
          "type": {
            "name": "HTMLCollection"
          },
          "tags": {}
        },
        "firstElementChild": {
          "name": "firstElementChild",
          "defaultValue": null,
          "description": "Returns the first child that is an element, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/firstElementChild)",
          "required": true,
          "type": {
            "name": "Element"
          },
          "tags": {}
        },
        "lastElementChild": {
          "name": "lastElementChild",
          "defaultValue": null,
          "description": "Returns the last child that is an element, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/lastElementChild)",
          "required": true,
          "type": {
            "name": "Element"
          },
          "tags": {}
        },
        "append": {
          "name": "append",
          "defaultValue": null,
          "description": "Inserts nodes after the last child of node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/append)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        },
        "prepend": {
          "name": "prepend",
          "defaultValue": null,
          "description": "Inserts nodes before the first child of node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/prepend)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        },
        "querySelector": {
          "name": "querySelector",
          "defaultValue": null,
          "description": "Returns the first element that is a descendant of node that matches selectors.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/querySelector)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementTagNameMap>(selectors: K): HTMLElementTagNameMap[K]; <K extends keyof SVGElementTagNameMap>(selectors: K): SVGElementTagNameMap[K]; <K extends keyof MathMLElementTagNameMap>(selectors: K): MathMLElementTagNameMap[K]; <K extends keyof HTMLElementDeprecatedTagNameMap>(selectors: K): HTMLE..."
          },
          "tags": {
            "deprecated": ""
          }
        },
        "querySelectorAll": {
          "name": "querySelectorAll",
          "defaultValue": null,
          "description": "Returns all element descendants of node that match selectors.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/querySelectorAll)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementTagNameMap>(selectors: K): NodeListOf<HTMLElementTagNameMap[K]>; <K extends keyof SVGElementTagNameMap>(selectors: K): NodeListOf<...>; <K extends keyof MathMLElementTagNameMap>(selectors: K): NodeListOf<...>; <K extends keyof HTMLElementDeprecatedTagNameMap>(selectors: K): NodeListOf<...."
          },
          "tags": {
            "deprecated": ""
          }
        },
        "replaceChildren": {
          "name": "replaceChildren",
          "defaultValue": null,
          "description": "Replace all children of node with nodes, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/replaceChildren)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        }
      },
      "Slottable": {
        "assignedSlot": {
          "name": "assignedSlot",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/assignedSlot)",
          "required": true,
          "type": {
            "name": "HTMLSlotElement"
          },
          "tags": {}
        }
      },
      "ElementCSSInlineStyle": {
        "attributeStyleMap": {
          "name": "attributeStyleMap",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/attributeStyleMap)",
          "required": true,
          "type": {
            "name": "StylePropertyMap"
          },
          "tags": {}
        },
        "style": {
          "name": "style",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/style)",
          "required": true,
          "type": {
            "name": "CSSStyleDeclaration"
          },
          "tags": {}
        }
      },
      "ElementContentEditable": {
        "contentEditable": {
          "name": "contentEditable",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/contentEditable)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "enterKeyHint": {
          "name": "enterKeyHint",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/enterKeyHint)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "inputMode": {
          "name": "inputMode",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/inputMode)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "isContentEditable": {
          "name": "isContentEditable",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/isContentEditable)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        }
      },
      "GlobalEventHandlers": {
        "onabort": {
          "name": "onabort",
          "defaultValue": null,
          "description": "Fires when the user aborts the download.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: UIEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/abort_event)"
          }
        },
        "onanimationcancel": {
          "name": "onanimationcancel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationcancel_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: AnimationEvent) => any"
          },
          "tags": {}
        },
        "onanimationend": {
          "name": "onanimationend",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: AnimationEvent) => any"
          },
          "tags": {}
        },
        "onanimationiteration": {
          "name": "onanimationiteration",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: AnimationEvent) => any"
          },
          "tags": {}
        },
        "onanimationstart": {
          "name": "onanimationstart",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: AnimationEvent) => any"
          },
          "tags": {}
        },
        "onauxclick": {
          "name": "onauxclick",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/auxclick_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {}
        },
        "onbeforeinput": {
          "name": "onbeforeinput",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/beforeinput_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: InputEvent) => any"
          },
          "tags": {}
        },
        "onbeforetoggle": {
          "name": "onbeforetoggle",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/beforetoggle_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onblur": {
          "name": "onblur",
          "defaultValue": null,
          "description": "Fires when the object loses the input focus.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: FocusEvent) => any"
          },
          "tags": {
            "param": "ev The focus event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/blur_event)"
          }
        },
        "oncancel": {
          "name": "oncancel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/cancel_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oncanplay": {
          "name": "oncanplay",
          "defaultValue": null,
          "description": "Occurs when playback is possible, but would require further buffering.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplay_event)"
          }
        },
        "oncanplaythrough": {
          "name": "oncanplaythrough",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplaythrough_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onchange": {
          "name": "onchange",
          "defaultValue": null,
          "description": "Fires when the contents of the object or selection have changed.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/change_event)"
          }
        },
        "onclick": {
          "name": "onclick",
          "defaultValue": null,
          "description": "Fires when the user clicks the left mouse button on the object",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/click_event)"
          }
        },
        "onclose": {
          "name": "onclose",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/close_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oncontextlost": {
          "name": "oncontextlost",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/contextlost_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oncontextmenu": {
          "name": "oncontextmenu",
          "defaultValue": null,
          "description": "Fires when the user clicks the right mouse button in the client area, opening the context menu.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/contextmenu_event)"
          }
        },
        "oncontextrestored": {
          "name": "oncontextrestored",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/contextrestored_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oncopy": {
          "name": "oncopy",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/copy_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: ClipboardEvent) => any"
          },
          "tags": {}
        },
        "oncuechange": {
          "name": "oncuechange",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/cuechange_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oncut": {
          "name": "oncut",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/cut_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: ClipboardEvent) => any"
          },
          "tags": {}
        },
        "ondblclick": {
          "name": "ondblclick",
          "defaultValue": null,
          "description": "Fires when the user double-clicks the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/dblclick_event)"
          }
        },
        "ondrag": {
          "name": "ondrag",
          "defaultValue": null,
          "description": "Fires on the source object continuously during a drag operation.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drag_event)"
          }
        },
        "ondragend": {
          "name": "ondragend",
          "defaultValue": null,
          "description": "Fires on the source object when the user releases the mouse at the close of a drag operation.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragend_event)"
          }
        },
        "ondragenter": {
          "name": "ondragenter",
          "defaultValue": null,
          "description": "Fires on the target element when the user drags the object to a valid drop target.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The drag event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragenter_event)"
          }
        },
        "ondragleave": {
          "name": "ondragleave",
          "defaultValue": null,
          "description": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The drag event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragleave_event)"
          }
        },
        "ondragover": {
          "name": "ondragover",
          "defaultValue": null,
          "description": "Fires on the target element continuously while the user drags the object over a valid drop target.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragover_event)"
          }
        },
        "ondragstart": {
          "name": "ondragstart",
          "defaultValue": null,
          "description": "Fires on the source object when the user starts to drag a text selection or selected object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragstart_event)"
          }
        },
        "ondrop": {
          "name": "ondrop",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drop_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {}
        },
        "ondurationchange": {
          "name": "ondurationchange",
          "defaultValue": null,
          "description": "Occurs when the duration attribute is updated.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/durationchange_event)"
          }
        },
        "onemptied": {
          "name": "onemptied",
          "defaultValue": null,
          "description": "Occurs when the media element is reset to its initial state.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/emptied_event)"
          }
        },
        "onended": {
          "name": "onended",
          "defaultValue": null,
          "description": "Occurs when the end of playback is reached.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ended_event)"
          }
        },
        "onerror": {
          "name": "onerror",
          "defaultValue": null,
          "description": "Fires when an error occurs during object loading.",
          "required": true,
          "type": {
            "name": "OnErrorEventHandlerNonNull"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/error_event)"
          }
        },
        "onfocus": {
          "name": "onfocus",
          "defaultValue": null,
          "description": "Fires when the object receives focus.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: FocusEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/focus_event)"
          }
        },
        "onformdata": {
          "name": "onformdata",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/formdata_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: FormDataEvent) => any"
          },
          "tags": {}
        },
        "ongotpointercapture": {
          "name": "ongotpointercapture",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/gotpointercapture_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "oninput": {
          "name": "oninput",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/input_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oninvalid": {
          "name": "oninvalid",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/invalid_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onkeydown": {
          "name": "onkeydown",
          "defaultValue": null,
          "description": "Fires when the user presses a key.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: KeyboardEvent) => any"
          },
          "tags": {
            "param": "ev The keyboard event\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keydown_event)"
          }
        },
        "onkeypress": {
          "name": "onkeypress",
          "defaultValue": null,
          "description": "Fires when the user presses an alphanumeric key.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: KeyboardEvent) => any"
          },
          "tags": {
            "param": "ev The event.",
            "deprecated": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keypress_event)"
          }
        },
        "onkeyup": {
          "name": "onkeyup",
          "defaultValue": null,
          "description": "Fires when the user releases a key.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: KeyboardEvent) => any"
          },
          "tags": {
            "param": "ev The keyboard event\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keyup_event)"
          }
        },
        "onload": {
          "name": "onload",
          "defaultValue": null,
          "description": "Fires immediately after the browser loads the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGElement/load_event)"
          }
        },
        "onloadeddata": {
          "name": "onloadeddata",
          "defaultValue": null,
          "description": "Occurs when media data is loaded at the current playback position.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadeddata_event)"
          }
        },
        "onloadedmetadata": {
          "name": "onloadedmetadata",
          "defaultValue": null,
          "description": "Occurs when the duration and dimensions of the media have been determined.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadedmetadata_event)"
          }
        },
        "onloadstart": {
          "name": "onloadstart",
          "defaultValue": null,
          "description": "Occurs when Internet Explorer begins looking for media data.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadstart_event)"
          }
        },
        "onlostpointercapture": {
          "name": "onlostpointercapture",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/lostpointercapture_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onmousedown": {
          "name": "onmousedown",
          "defaultValue": null,
          "description": "Fires when the user clicks the object with either mouse button.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mousedown_event)"
          }
        },
        "onmouseenter": {
          "name": "onmouseenter",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseenter_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {}
        },
        "onmouseleave": {
          "name": "onmouseleave",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseleave_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {}
        },
        "onmousemove": {
          "name": "onmousemove",
          "defaultValue": null,
          "description": "Fires when the user moves the mouse over the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mousemove_event)"
          }
        },
        "onmouseout": {
          "name": "onmouseout",
          "defaultValue": null,
          "description": "Fires when the user moves the mouse pointer outside the boundaries of the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseout_event)"
          }
        },
        "onmouseover": {
          "name": "onmouseover",
          "defaultValue": null,
          "description": "Fires when the user moves the mouse pointer into the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseover_event)"
          }
        },
        "onmouseup": {
          "name": "onmouseup",
          "defaultValue": null,
          "description": "Fires when the user releases a mouse button while the mouse is over the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseup_event)"
          }
        },
        "onpaste": {
          "name": "onpaste",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/paste_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: ClipboardEvent) => any"
          },
          "tags": {}
        },
        "onpause": {
          "name": "onpause",
          "defaultValue": null,
          "description": "Occurs when playback is paused.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/pause_event)"
          }
        },
        "onplay": {
          "name": "onplay",
          "defaultValue": null,
          "description": "Occurs when the play method is requested.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/play_event)"
          }
        },
        "onplaying": {
          "name": "onplaying",
          "defaultValue": null,
          "description": "Occurs when the audio or video has started playing.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/playing_event)"
          }
        },
        "onpointercancel": {
          "name": "onpointercancel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointercancel_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerdown": {
          "name": "onpointerdown",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerdown_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerenter": {
          "name": "onpointerenter",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerenter_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerleave": {
          "name": "onpointerleave",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerleave_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointermove": {
          "name": "onpointermove",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointermove_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerout": {
          "name": "onpointerout",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerout_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerover": {
          "name": "onpointerover",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerover_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerup": {
          "name": "onpointerup",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerup_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onprogress": {
          "name": "onprogress",
          "defaultValue": null,
          "description": "Occurs to indicate progress while downloading media data.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: ProgressEvent<EventTarget>) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/progress_event)"
          }
        },
        "onratechange": {
          "name": "onratechange",
          "defaultValue": null,
          "description": "Occurs when the playback rate is increased or decreased.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ratechange_event)"
          }
        },
        "onreset": {
          "name": "onreset",
          "defaultValue": null,
          "description": "Fires when the user resets a form.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/reset_event)"
          }
        },
        "onresize": {
          "name": "onresize",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/resize_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: UIEvent) => any"
          },
          "tags": {}
        },
        "onscroll": {
          "name": "onscroll",
          "defaultValue": null,
          "description": "Fires when the user repositions the scroll box in the scroll bar on the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scroll_event)"
          }
        },
        "onscrollend": {
          "name": "onscrollend",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scrollend_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onsecuritypolicyviolation": {
          "name": "onsecuritypolicyviolation",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/securitypolicyviolation_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: SecurityPolicyViolationEvent) => any"
          },
          "tags": {}
        },
        "onseeked": {
          "name": "onseeked",
          "defaultValue": null,
          "description": "Occurs when the seek operation ends.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeked_event)"
          }
        },
        "onseeking": {
          "name": "onseeking",
          "defaultValue": null,
          "description": "Occurs when the current playback position is moved.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeking_event)"
          }
        },
        "onselect": {
          "name": "onselect",
          "defaultValue": null,
          "description": "Fires when the current selection changes.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/select_event)"
          }
        },
        "onselectionchange": {
          "name": "onselectionchange",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/selectionchange_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onselectstart": {
          "name": "onselectstart",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/selectstart_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onslotchange": {
          "name": "onslotchange",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSlotElement/slotchange_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onstalled": {
          "name": "onstalled",
          "defaultValue": null,
          "description": "Occurs when the download has stopped.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/stalled_event)"
          }
        },
        "onsubmit": {
          "name": "onsubmit",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/submit_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: SubmitEvent) => any"
          },
          "tags": {}
        },
        "onsuspend": {
          "name": "onsuspend",
          "defaultValue": null,
          "description": "Occurs if the load operation has been intentionally halted.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/suspend_event)"
          }
        },
        "ontimeupdate": {
          "name": "ontimeupdate",
          "defaultValue": null,
          "description": "Occurs to indicate the current playback position.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/timeupdate_event)"
          }
        },
        "ontoggle": {
          "name": "ontoggle",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/toggle_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "ontouchcancel": {
          "name": "ontouchcancel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchcancel_event)",
          "required": false,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TouchEvent) => any"
          },
          "tags": {}
        },
        "ontouchend": {
          "name": "ontouchend",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchend_event)",
          "required": false,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TouchEvent) => any"
          },
          "tags": {}
        },
        "ontouchmove": {
          "name": "ontouchmove",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchmove_event)",
          "required": false,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TouchEvent) => any"
          },
          "tags": {}
        },
        "ontouchstart": {
          "name": "ontouchstart",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchstart_event)",
          "required": false,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TouchEvent) => any"
          },
          "tags": {}
        },
        "ontransitioncancel": {
          "name": "ontransitioncancel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitioncancel_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TransitionEvent) => any"
          },
          "tags": {}
        },
        "ontransitionend": {
          "name": "ontransitionend",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TransitionEvent) => any"
          },
          "tags": {}
        },
        "ontransitionrun": {
          "name": "ontransitionrun",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionrun_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TransitionEvent) => any"
          },
          "tags": {}
        },
        "ontransitionstart": {
          "name": "ontransitionstart",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionstart_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TransitionEvent) => any"
          },
          "tags": {}
        },
        "onvolumechange": {
          "name": "onvolumechange",
          "defaultValue": null,
          "description": "Occurs when the volume is changed, or playback is muted or unmuted.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/volumechange_event)"
          }
        },
        "onwaiting": {
          "name": "onwaiting",
          "defaultValue": null,
          "description": "Occurs when playback stops because the next frame of a video resource is not available.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/waiting_event)"
          }
        },
        "onwebkitanimationend": {
          "name": "onwebkitanimationend",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "deprecated": "This is a legacy alias of `onanimationend`.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event)"
          }
        },
        "onwebkitanimationiteration": {
          "name": "onwebkitanimationiteration",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "deprecated": "This is a legacy alias of `onanimationiteration`.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event)"
          }
        },
        "onwebkitanimationstart": {
          "name": "onwebkitanimationstart",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "deprecated": "This is a legacy alias of `onanimationstart`.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event)"
          }
        },
        "onwebkittransitionend": {
          "name": "onwebkittransitionend",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "deprecated": "This is a legacy alias of `ontransitionend`.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event)"
          }
        },
        "onwheel": {
          "name": "onwheel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/wheel_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: WheelEvent) => any"
          },
          "tags": {}
        }
      },
      "HTMLOrSVGElement": {
        "autofocus": {
          "name": "autofocus",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/autofocus)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "dataset": {
          "name": "dataset",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dataset)",
          "required": true,
          "type": {
            "name": "DOMStringMap"
          },
          "tags": {}
        },
        "nonce": {
          "name": "nonce",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/nonce)",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "tabIndex": {
          "name": "tabIndex",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/tabIndex)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "blur": {
          "name": "blur",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/blur)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "focus": {
          "name": "focus",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/focus)",
          "required": true,
          "type": {
            "name": "(options?: FocusOptions) => void"
          },
          "tags": {}
        }
      }
    }
  },
  {
    "tags": {},
    "description": "Returns the last focusable element within a given element\n\nFocusable elements defined in the constant {@link baseFocusableElementSelectors}",
    "methods": [],
    "displayName": "queryLastFocusableElement",
    "props": {
      "HTMLElement": {
        "accessKey": {
          "name": "accessKey",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/accessKey)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "accessKeyLabel": {
          "name": "accessKeyLabel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/accessKeyLabel)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "autocapitalize": {
          "name": "autocapitalize",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/autocapitalize)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "dir": {
          "name": "dir",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dir)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "draggable": {
          "name": "draggable",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/draggable)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "hidden": {
          "name": "hidden",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/hidden)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "inert": {
          "name": "inert",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/inert)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "innerText": {
          "name": "innerText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/innerText)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "lang": {
          "name": "lang",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/lang)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "offsetHeight": {
          "name": "offsetHeight",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetHeight)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "offsetLeft": {
          "name": "offsetLeft",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetLeft)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "offsetParent": {
          "name": "offsetParent",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetParent)",
          "required": true,
          "type": {
            "name": "Element"
          },
          "tags": {}
        },
        "offsetTop": {
          "name": "offsetTop",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetTop)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "offsetWidth": {
          "name": "offsetWidth",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/offsetWidth)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "outerText": {
          "name": "outerText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/outerText)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "popover": {
          "name": "popover",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/popover)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "spellcheck": {
          "name": "spellcheck",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/spellcheck)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "title": {
          "name": "title",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/title)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "translate": {
          "name": "translate",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/translate)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "writingSuggestions": {
          "name": "writingSuggestions",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/writingSuggestions)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "attachInternals": {
          "name": "attachInternals",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/attachInternals)",
          "required": true,
          "type": {
            "name": "() => ElementInternals"
          },
          "tags": {}
        },
        "click": {
          "name": "click",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/click)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "hidePopover": {
          "name": "hidePopover",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/hidePopover)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "showPopover": {
          "name": "showPopover",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/showPopover)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "togglePopover": {
          "name": "togglePopover",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/togglePopover)",
          "required": true,
          "type": {
            "name": "(options?: boolean) => boolean"
          },
          "tags": {}
        },
        "addEventListener": {
          "name": "addEventListener",
          "defaultValue": null,
          "description": "\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/addEventListener)\nAppends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n\nThe options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options's capture.\n\nWhen set to true, options's capture prevents callback from being invoked when the event's eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event's eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event's eventPhase attribute value is AT_TARGET.\n\nWhen set to true, options's passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n\nWhen set to true, options's once indicates that the callback will only be invoked once after which the event listener will be removed.\n\nIf an AbortSignal is passed for options's signal, then the event listener will be removed when signal is aborted.\n\nThe event listener is appended to target's event listener list and is not appended if it has the same type, callback, and capture.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/addEventListener)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void; (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void; }"
          },
          "tags": {}
        },
        "removeEventListener": {
          "name": "removeEventListener",
          "defaultValue": null,
          "description": "\nRemoves the event listener in target's event listener list with the same type, callback, and options.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/removeEventListener)\nRemoves the event listener in target's event listener list with the same type, callback, and options.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/removeEventListener)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void; (type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void; }"
          },
          "tags": {}
        }
      },
      "Element": {
        "attributes": {
          "name": "attributes",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/attributes)",
          "required": true,
          "type": {
            "name": "NamedNodeMap"
          },
          "tags": {}
        },
        "classList": {
          "name": "classList",
          "defaultValue": null,
          "description": "Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/classList)",
          "required": true,
          "type": {
            "name": "DOMTokenList"
          },
          "tags": {}
        },
        "className": {
          "name": "className",
          "defaultValue": null,
          "description": "Returns the value of element's class content attribute. Can be set to change it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/className)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "clientHeight": {
          "name": "clientHeight",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientHeight)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "clientLeft": {
          "name": "clientLeft",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientLeft)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "clientTop": {
          "name": "clientTop",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientTop)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "clientWidth": {
          "name": "clientWidth",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/clientWidth)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "currentCSSZoom": {
          "name": "currentCSSZoom",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/currentCSSZoom)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "id": {
          "name": "id",
          "defaultValue": null,
          "description": "Returns the value of element's id content attribute. Can be set to change it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/id)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "innerHTML": {
          "name": "innerHTML",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/innerHTML)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "localName": {
          "name": "localName",
          "defaultValue": null,
          "description": "Returns the local name.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/localName)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "namespaceURI": {
          "name": "namespaceURI",
          "defaultValue": null,
          "description": "Returns the namespace.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/namespaceURI)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "onfullscreenchange": {
          "name": "onfullscreenchange",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/fullscreenchange_event)",
          "required": true,
          "type": {
            "name": "(this: Element, ev: Event) => any"
          },
          "tags": {}
        },
        "onfullscreenerror": {
          "name": "onfullscreenerror",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/fullscreenerror_event)",
          "required": true,
          "type": {
            "name": "(this: Element, ev: Event) => any"
          },
          "tags": {}
        },
        "outerHTML": {
          "name": "outerHTML",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/outerHTML)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ownerDocument": {
          "name": "ownerDocument",
          "defaultValue": null,
          "description": "Returns the node document. Returns null for documents.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/ownerDocument)",
          "required": true,
          "type": {
            "name": "Document"
          },
          "tags": {}
        },
        "part": {
          "name": "part",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/part)",
          "required": true,
          "type": {
            "name": "DOMTokenList"
          },
          "tags": {}
        },
        "prefix": {
          "name": "prefix",
          "defaultValue": null,
          "description": "Returns the namespace prefix.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/prefix)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "scrollHeight": {
          "name": "scrollHeight",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollHeight)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "scrollLeft": {
          "name": "scrollLeft",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollLeft)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "scrollTop": {
          "name": "scrollTop",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollTop)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "scrollWidth": {
          "name": "scrollWidth",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollWidth)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "shadowRoot": {
          "name": "shadowRoot",
          "defaultValue": null,
          "description": "Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/shadowRoot)",
          "required": true,
          "type": {
            "name": "ShadowRoot"
          },
          "tags": {}
        },
        "slot": {
          "name": "slot",
          "defaultValue": null,
          "description": "Returns the value of element's slot content attribute. Can be set to change it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/slot)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "tagName": {
          "name": "tagName",
          "defaultValue": null,
          "description": "Returns the HTML-uppercased qualified name.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/tagName)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "attachShadow": {
          "name": "attachShadow",
          "defaultValue": null,
          "description": "Creates a shadow root for element and returns it.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/attachShadow)",
          "required": true,
          "type": {
            "name": "(init: ShadowRootInit) => ShadowRoot"
          },
          "tags": {}
        },
        "checkVisibility": {
          "name": "checkVisibility",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/checkVisibility)",
          "required": true,
          "type": {
            "name": "(options?: CheckVisibilityOptions) => boolean"
          },
          "tags": {}
        },
        "closest": {
          "name": "closest",
          "defaultValue": null,
          "description": "Returns the first (starting at element) inclusive ancestor that matches selectors, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/closest)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementTagNameMap>(selector: K): HTMLElementTagNameMap[K]; <K extends keyof SVGElementTagNameMap>(selector: K): SVGElementTagNameMap[K]; <K extends keyof MathMLElementTagNameMap>(selector: K): MathMLElementTagNameMap[K]; <E extends Element = Element>(selectors: string): E; }"
          },
          "tags": {}
        },
        "computedStyleMap": {
          "name": "computedStyleMap",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/computedStyleMap)",
          "required": true,
          "type": {
            "name": "() => StylePropertyMapReadOnly"
          },
          "tags": {}
        },
        "getAttribute": {
          "name": "getAttribute",
          "defaultValue": null,
          "description": "Returns element's first attribute whose qualified name is qualifiedName, and null if there is no such attribute otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttribute)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string) => string"
          },
          "tags": {}
        },
        "getAttributeNS": {
          "name": "getAttributeNS",
          "defaultValue": null,
          "description": "Returns element's attribute whose namespace is namespace and local name is localName, and null if there is no such attribute otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNS)",
          "required": true,
          "type": {
            "name": "(namespace: string, localName: string) => string"
          },
          "tags": {}
        },
        "getAttributeNames": {
          "name": "getAttributeNames",
          "defaultValue": null,
          "description": "Returns the qualified names of all element's attributes. Can contain duplicates.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNames)",
          "required": true,
          "type": {
            "name": "() => string[]"
          },
          "tags": {}
        },
        "getAttributeNode": {
          "name": "getAttributeNode",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNode)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string) => Attr"
          },
          "tags": {}
        },
        "getAttributeNodeNS": {
          "name": "getAttributeNodeNS",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAttributeNodeNS)",
          "required": true,
          "type": {
            "name": "(namespace: string, localName: string) => Attr"
          },
          "tags": {}
        },
        "getBoundingClientRect": {
          "name": "getBoundingClientRect",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getBoundingClientRect)",
          "required": true,
          "type": {
            "name": "() => DOMRect"
          },
          "tags": {}
        },
        "getClientRects": {
          "name": "getClientRects",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getClientRects)",
          "required": true,
          "type": {
            "name": "() => DOMRectList"
          },
          "tags": {}
        },
        "getElementsByClassName": {
          "name": "getElementsByClassName",
          "defaultValue": null,
          "description": "Returns a HTMLCollection of the elements in the object on which the method was invoked (a document or an element) that have all the classes given by classNames. The classNames argument is interpreted as a space-separated list of classes.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getElementsByClassName)",
          "required": true,
          "type": {
            "name": "(classNames: string) => HTMLCollectionOf<Element>"
          },
          "tags": {}
        },
        "getElementsByTagName": {
          "name": "getElementsByTagName",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getElementsByTagName)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<HTMLElementTagNameMap[K]>; <K extends keyof SVGElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<...>; <K extends keyof MathMLElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<...>; <K extends keyof HTMLElementDeprecatedTagNameMa..."
          },
          "tags": {
            "deprecated": ""
          }
        },
        "getElementsByTagNameNS": {
          "name": "getElementsByTagNameNS",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getElementsByTagNameNS)",
          "required": true,
          "type": {
            "name": "{ (namespaceURI: \"http://www.w3.org/1999/xhtml\", localName: string): HTMLCollectionOf<HTMLElement>; (namespaceURI: \"http://www.w3.org/2000/svg\", localName: string): HTMLCollectionOf<...>; (namespaceURI: \"http://www.w3.org/1998/Math/MathML\", localName: string): HTMLCollectionOf<...>; (namespace: string, localName: st..."
          },
          "tags": {}
        },
        "getHTML": {
          "name": "getHTML",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getHTML)",
          "required": true,
          "type": {
            "name": "(options?: GetHTMLOptions) => string"
          },
          "tags": {}
        },
        "hasAttribute": {
          "name": "hasAttribute",
          "defaultValue": null,
          "description": "Returns true if element has an attribute whose qualified name is qualifiedName, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasAttribute)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string) => boolean"
          },
          "tags": {}
        },
        "hasAttributeNS": {
          "name": "hasAttributeNS",
          "defaultValue": null,
          "description": "Returns true if element has an attribute whose namespace is namespace and local name is localName.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasAttributeNS)",
          "required": true,
          "type": {
            "name": "(namespace: string, localName: string) => boolean"
          },
          "tags": {}
        },
        "hasAttributes": {
          "name": "hasAttributes",
          "defaultValue": null,
          "description": "Returns true if element has attributes, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasAttributes)",
          "required": true,
          "type": {
            "name": "() => boolean"
          },
          "tags": {}
        },
        "hasPointerCapture": {
          "name": "hasPointerCapture",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/hasPointerCapture)",
          "required": true,
          "type": {
            "name": "(pointerId: number) => boolean"
          },
          "tags": {}
        },
        "insertAdjacentElement": {
          "name": "insertAdjacentElement",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/insertAdjacentElement)",
          "required": true,
          "type": {
            "name": "(where: InsertPosition, element: Element) => Element"
          },
          "tags": {}
        },
        "insertAdjacentHTML": {
          "name": "insertAdjacentHTML",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/insertAdjacentHTML)",
          "required": true,
          "type": {
            "name": "(position: InsertPosition, string: string) => void"
          },
          "tags": {}
        },
        "insertAdjacentText": {
          "name": "insertAdjacentText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/insertAdjacentText)",
          "required": true,
          "type": {
            "name": "(where: InsertPosition, data: string) => void"
          },
          "tags": {}
        },
        "matches": {
          "name": "matches",
          "defaultValue": null,
          "description": "Returns true if matching selectors against element's root yields element, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/matches)",
          "required": true,
          "type": {
            "name": "(selectors: string) => boolean"
          },
          "tags": {}
        },
        "releasePointerCapture": {
          "name": "releasePointerCapture",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/releasePointerCapture)",
          "required": true,
          "type": {
            "name": "(pointerId: number) => void"
          },
          "tags": {}
        },
        "removeAttribute": {
          "name": "removeAttribute",
          "defaultValue": null,
          "description": "Removes element's first attribute whose qualified name is qualifiedName.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/removeAttribute)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string) => void"
          },
          "tags": {}
        },
        "removeAttributeNS": {
          "name": "removeAttributeNS",
          "defaultValue": null,
          "description": "Removes element's attribute whose namespace is namespace and local name is localName.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/removeAttributeNS)",
          "required": true,
          "type": {
            "name": "(namespace: string, localName: string) => void"
          },
          "tags": {}
        },
        "removeAttributeNode": {
          "name": "removeAttributeNode",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/removeAttributeNode)",
          "required": true,
          "type": {
            "name": "(attr: Attr) => Attr"
          },
          "tags": {}
        },
        "requestFullscreen": {
          "name": "requestFullscreen",
          "defaultValue": null,
          "description": "Displays element fullscreen and resolves promise when done.\n\nWhen supplied, options's navigationUI member indicates whether showing navigation UI while in fullscreen is preferred or not. If set to \"show\", navigation simplicity is preferred over screen space, and if set to \"hide\", more screen space is preferred. User agents are always free to honor user preference over the application's. The default value \"auto\" indicates no application preference.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/requestFullscreen)",
          "required": true,
          "type": {
            "name": "(options?: FullscreenOptions) => Promise<void>"
          },
          "tags": {}
        },
        "requestPointerLock": {
          "name": "requestPointerLock",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/requestPointerLock)",
          "required": true,
          "type": {
            "name": "(options?: PointerLockOptions) => Promise<void>"
          },
          "tags": {}
        },
        "scroll": {
          "name": "scroll",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scroll)",
          "required": true,
          "type": {
            "name": "{ (options?: ScrollToOptions): void; (x: number, y: number): void; }"
          },
          "tags": {}
        },
        "scrollBy": {
          "name": "scrollBy",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollBy)",
          "required": true,
          "type": {
            "name": "{ (options?: ScrollToOptions): void; (x: number, y: number): void; }"
          },
          "tags": {}
        },
        "scrollIntoView": {
          "name": "scrollIntoView",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollIntoView)",
          "required": true,
          "type": {
            "name": "(arg?: boolean | ScrollIntoViewOptions) => void"
          },
          "tags": {}
        },
        "scrollTo": {
          "name": "scrollTo",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/scrollTo)",
          "required": true,
          "type": {
            "name": "{ (options?: ScrollToOptions): void; (x: number, y: number): void; }"
          },
          "tags": {}
        },
        "setAttribute": {
          "name": "setAttribute",
          "defaultValue": null,
          "description": "Sets the value of element's first attribute whose qualified name is qualifiedName to value.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttribute)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string, value: string) => void"
          },
          "tags": {}
        },
        "setAttributeNS": {
          "name": "setAttributeNS",
          "defaultValue": null,
          "description": "Sets the value of element's attribute whose namespace is namespace and local name is localName to value.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttributeNS)",
          "required": true,
          "type": {
            "name": "(namespace: string, qualifiedName: string, value: string) => void"
          },
          "tags": {}
        },
        "setAttributeNode": {
          "name": "setAttributeNode",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttributeNode)",
          "required": true,
          "type": {
            "name": "(attr: Attr) => Attr"
          },
          "tags": {}
        },
        "setAttributeNodeNS": {
          "name": "setAttributeNodeNS",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setAttributeNodeNS)",
          "required": true,
          "type": {
            "name": "(attr: Attr) => Attr"
          },
          "tags": {}
        },
        "setHTMLUnsafe": {
          "name": "setHTMLUnsafe",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setHTMLUnsafe)",
          "required": true,
          "type": {
            "name": "(html: string) => void"
          },
          "tags": {}
        },
        "setPointerCapture": {
          "name": "setPointerCapture",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/setPointerCapture)",
          "required": true,
          "type": {
            "name": "(pointerId: number) => void"
          },
          "tags": {}
        },
        "toggleAttribute": {
          "name": "toggleAttribute",
          "defaultValue": null,
          "description": "If force is not given, \"toggles\" qualifiedName, removing it if it is present and adding it if it is not present. If force is true, adds qualifiedName. If force is false, removes qualifiedName.\n\nReturns true if qualifiedName is now present, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/toggleAttribute)",
          "required": true,
          "type": {
            "name": "(qualifiedName: string, force?: boolean) => boolean"
          },
          "tags": {}
        },
        "webkitMatchesSelector": {
          "name": "webkitMatchesSelector",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(selectors: string) => boolean"
          },
          "tags": {
            "deprecated": "This is a legacy alias of `matches`.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/matches)"
          }
        }
      },
      "Node": {
        "baseURI": {
          "name": "baseURI",
          "defaultValue": null,
          "description": "Returns node's node document's document base URL.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/baseURI)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "childNodes": {
          "name": "childNodes",
          "defaultValue": null,
          "description": "Returns the children.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/childNodes)",
          "required": true,
          "type": {
            "name": "NodeListOf<ChildNode>"
          },
          "tags": {}
        },
        "firstChild": {
          "name": "firstChild",
          "defaultValue": null,
          "description": "Returns the first child.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/firstChild)",
          "required": true,
          "type": {
            "name": "ChildNode"
          },
          "tags": {}
        },
        "isConnected": {
          "name": "isConnected",
          "defaultValue": null,
          "description": "Returns true if node is connected and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isConnected)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "lastChild": {
          "name": "lastChild",
          "defaultValue": null,
          "description": "Returns the last child.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lastChild)",
          "required": true,
          "type": {
            "name": "ChildNode"
          },
          "tags": {}
        },
        "nextSibling": {
          "name": "nextSibling",
          "defaultValue": null,
          "description": "Returns the next sibling.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nextSibling)",
          "required": true,
          "type": {
            "name": "ChildNode"
          },
          "tags": {}
        },
        "nodeName": {
          "name": "nodeName",
          "defaultValue": null,
          "description": "Returns a string appropriate for the type of node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeName)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "nodeType": {
          "name": "nodeType",
          "defaultValue": null,
          "description": "Returns the type of node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeType)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "nodeValue": {
          "name": "nodeValue",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/nodeValue)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "parentElement": {
          "name": "parentElement",
          "defaultValue": null,
          "description": "Returns the parent element.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/parentElement)",
          "required": true,
          "type": {
            "name": "HTMLElement"
          },
          "tags": {}
        },
        "parentNode": {
          "name": "parentNode",
          "defaultValue": null,
          "description": "Returns the parent.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/parentNode)",
          "required": true,
          "type": {
            "name": "ParentNode"
          },
          "tags": {}
        },
        "previousSibling": {
          "name": "previousSibling",
          "defaultValue": null,
          "description": "Returns the previous sibling.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/previousSibling)",
          "required": true,
          "type": {
            "name": "ChildNode"
          },
          "tags": {}
        },
        "textContent": {
          "name": "textContent",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/textContent)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "appendChild": {
          "name": "appendChild",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/appendChild)",
          "required": true,
          "type": {
            "name": "<T extends Node>(node: T) => T"
          },
          "tags": {}
        },
        "cloneNode": {
          "name": "cloneNode",
          "defaultValue": null,
          "description": "Returns a copy of node. If deep is true, the copy also includes the node's descendants.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/cloneNode)",
          "required": true,
          "type": {
            "name": "(subtree?: boolean) => Node"
          },
          "tags": {}
        },
        "compareDocumentPosition": {
          "name": "compareDocumentPosition",
          "defaultValue": null,
          "description": "Returns a bitmask indicating the position of other relative to node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/compareDocumentPosition)",
          "required": true,
          "type": {
            "name": "(other: Node) => number"
          },
          "tags": {}
        },
        "contains": {
          "name": "contains",
          "defaultValue": null,
          "description": "Returns true if other is an inclusive descendant of node, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/contains)",
          "required": true,
          "type": {
            "name": "(other: Node) => boolean"
          },
          "tags": {}
        },
        "getRootNode": {
          "name": "getRootNode",
          "defaultValue": null,
          "description": "Returns node's root.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/getRootNode)",
          "required": true,
          "type": {
            "name": "(options?: GetRootNodeOptions) => Node"
          },
          "tags": {}
        },
        "hasChildNodes": {
          "name": "hasChildNodes",
          "defaultValue": null,
          "description": "Returns whether node has children.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/hasChildNodes)",
          "required": true,
          "type": {
            "name": "() => boolean"
          },
          "tags": {}
        },
        "insertBefore": {
          "name": "insertBefore",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/insertBefore)",
          "required": true,
          "type": {
            "name": "<T extends Node>(node: T, child: Node) => T"
          },
          "tags": {}
        },
        "isDefaultNamespace": {
          "name": "isDefaultNamespace",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isDefaultNamespace)",
          "required": true,
          "type": {
            "name": "(namespace: string) => boolean"
          },
          "tags": {}
        },
        "isEqualNode": {
          "name": "isEqualNode",
          "defaultValue": null,
          "description": "Returns whether node and otherNode have the same properties.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isEqualNode)",
          "required": true,
          "type": {
            "name": "(otherNode: Node) => boolean"
          },
          "tags": {}
        },
        "isSameNode": {
          "name": "isSameNode",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/isSameNode)",
          "required": true,
          "type": {
            "name": "(otherNode: Node) => boolean"
          },
          "tags": {}
        },
        "lookupNamespaceURI": {
          "name": "lookupNamespaceURI",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lookupNamespaceURI)",
          "required": true,
          "type": {
            "name": "(prefix: string) => string"
          },
          "tags": {}
        },
        "lookupPrefix": {
          "name": "lookupPrefix",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/lookupPrefix)",
          "required": true,
          "type": {
            "name": "(namespace: string) => string"
          },
          "tags": {}
        },
        "normalize": {
          "name": "normalize",
          "defaultValue": null,
          "description": "Removes empty exclusive Text nodes and concatenates the data of remaining contiguous exclusive Text nodes into the first of their nodes.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/normalize)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "removeChild": {
          "name": "removeChild",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/removeChild)",
          "required": true,
          "type": {
            "name": "<T extends Node>(child: T) => T"
          },
          "tags": {}
        },
        "replaceChild": {
          "name": "replaceChild",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/replaceChild)",
          "required": true,
          "type": {
            "name": "<T extends Node>(node: Node, child: T) => T"
          },
          "tags": {}
        },
        "ELEMENT_NODE": {
          "name": "ELEMENT_NODE",
          "defaultValue": null,
          "description": "node is an element.",
          "required": true,
          "type": {
            "name": "1"
          },
          "tags": {}
        },
        "ATTRIBUTE_NODE": {
          "name": "ATTRIBUTE_NODE",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "2"
          },
          "tags": {}
        },
        "TEXT_NODE": {
          "name": "TEXT_NODE",
          "defaultValue": null,
          "description": "node is a Text node.",
          "required": true,
          "type": {
            "name": "3"
          },
          "tags": {}
        },
        "CDATA_SECTION_NODE": {
          "name": "CDATA_SECTION_NODE",
          "defaultValue": null,
          "description": "node is a CDATASection node.",
          "required": true,
          "type": {
            "name": "4"
          },
          "tags": {}
        },
        "ENTITY_REFERENCE_NODE": {
          "name": "ENTITY_REFERENCE_NODE",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "5"
          },
          "tags": {}
        },
        "ENTITY_NODE": {
          "name": "ENTITY_NODE",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "6"
          },
          "tags": {}
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "name": "PROCESSING_INSTRUCTION_NODE",
          "defaultValue": null,
          "description": "node is a ProcessingInstruction node.",
          "required": true,
          "type": {
            "name": "7"
          },
          "tags": {}
        },
        "COMMENT_NODE": {
          "name": "COMMENT_NODE",
          "defaultValue": null,
          "description": "node is a Comment node.",
          "required": true,
          "type": {
            "name": "8"
          },
          "tags": {}
        },
        "DOCUMENT_NODE": {
          "name": "DOCUMENT_NODE",
          "defaultValue": null,
          "description": "node is a document.",
          "required": true,
          "type": {
            "name": "9"
          },
          "tags": {}
        },
        "DOCUMENT_TYPE_NODE": {
          "name": "DOCUMENT_TYPE_NODE",
          "defaultValue": null,
          "description": "node is a doctype.",
          "required": true,
          "type": {
            "name": "10"
          },
          "tags": {}
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "name": "DOCUMENT_FRAGMENT_NODE",
          "defaultValue": null,
          "description": "node is a DocumentFragment node.",
          "required": true,
          "type": {
            "name": "11"
          },
          "tags": {}
        },
        "NOTATION_NODE": {
          "name": "NOTATION_NODE",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "12"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "name": "DOCUMENT_POSITION_DISCONNECTED",
          "defaultValue": null,
          "description": "Set when node and other are not in the same tree.",
          "required": true,
          "type": {
            "name": "1"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "name": "DOCUMENT_POSITION_PRECEDING",
          "defaultValue": null,
          "description": "Set when other is preceding node.",
          "required": true,
          "type": {
            "name": "2"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "name": "DOCUMENT_POSITION_FOLLOWING",
          "defaultValue": null,
          "description": "Set when other is following node.",
          "required": true,
          "type": {
            "name": "4"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "name": "DOCUMENT_POSITION_CONTAINS",
          "defaultValue": null,
          "description": "Set when other is an ancestor of node.",
          "required": true,
          "type": {
            "name": "8"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "name": "DOCUMENT_POSITION_CONTAINED_BY",
          "defaultValue": null,
          "description": "Set when other is a descendant of node.",
          "required": true,
          "type": {
            "name": "16"
          },
          "tags": {}
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "name": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "32"
          },
          "tags": {}
        }
      },
      "EventTarget": {
        "dispatchEvent": {
          "name": "dispatchEvent",
          "defaultValue": null,
          "description": "Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/EventTarget/dispatchEvent)",
          "required": true,
          "type": {
            "name": "(event: Event) => boolean"
          },
          "tags": {}
        }
      },
      "ARIAMixin": {
        "ariaAtomic": {
          "name": "ariaAtomic",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaAtomic)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaAutoComplete": {
          "name": "ariaAutoComplete",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaAutoComplete)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaBrailleLabel": {
          "name": "ariaBrailleLabel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaBrailleLabel)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaBrailleRoleDescription": {
          "name": "ariaBrailleRoleDescription",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaBrailleRoleDescription)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaBusy": {
          "name": "ariaBusy",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaBusy)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaChecked": {
          "name": "ariaChecked",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaChecked)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaColCount": {
          "name": "ariaColCount",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColCount)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaColIndex": {
          "name": "ariaColIndex",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColIndex)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaColIndexText": {
          "name": "ariaColIndexText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColIndexText)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaColSpan": {
          "name": "ariaColSpan",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaColSpan)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaCurrent": {
          "name": "ariaCurrent",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaCurrent)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaDescription": {
          "name": "ariaDescription",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaDescription)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaDisabled": {
          "name": "ariaDisabled",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaDisabled)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaExpanded": {
          "name": "ariaExpanded",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaExpanded)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaHasPopup": {
          "name": "ariaHasPopup",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaHasPopup)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaHidden": {
          "name": "ariaHidden",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaHidden)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaInvalid": {
          "name": "ariaInvalid",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaKeyShortcuts": {
          "name": "ariaKeyShortcuts",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaKeyShortcuts)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaLabel": {
          "name": "ariaLabel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaLabel)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaLevel": {
          "name": "ariaLevel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaLevel)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaLive": {
          "name": "ariaLive",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaLive)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaModal": {
          "name": "ariaModal",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaModal)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaMultiLine": {
          "name": "ariaMultiLine",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaMultiLine)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaMultiSelectable": {
          "name": "ariaMultiSelectable",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaMultiSelectable)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaOrientation": {
          "name": "ariaOrientation",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaOrientation)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaPlaceholder": {
          "name": "ariaPlaceholder",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaPlaceholder)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaPosInSet": {
          "name": "ariaPosInSet",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaPosInSet)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaPressed": {
          "name": "ariaPressed",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaPressed)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaReadOnly": {
          "name": "ariaReadOnly",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaReadOnly)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRelevant": {
          "name": "ariaRelevant",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRelevant)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRequired": {
          "name": "ariaRequired",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRequired)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRoleDescription": {
          "name": "ariaRoleDescription",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRoleDescription)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRowCount": {
          "name": "ariaRowCount",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowCount)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRowIndex": {
          "name": "ariaRowIndex",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowIndex)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRowIndexText": {
          "name": "ariaRowIndexText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowIndexText)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaRowSpan": {
          "name": "ariaRowSpan",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaRowSpan)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaSelected": {
          "name": "ariaSelected",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaSelected)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaSetSize": {
          "name": "ariaSetSize",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaSetSize)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaSort": {
          "name": "ariaSort",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaSort)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaValueMax": {
          "name": "ariaValueMax",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueMax)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaValueMin": {
          "name": "ariaValueMin",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueMin)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaValueNow": {
          "name": "ariaValueNow",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueNow)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "ariaValueText": {
          "name": "ariaValueText",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/ariaValueText)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "role": {
          "name": "role",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        }
      },
      "Animatable": {
        "animate": {
          "name": "animate",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animate)",
          "required": true,
          "type": {
            "name": "(keyframes: Keyframe[] | PropertyIndexedKeyframes, options?: number | KeyframeAnimationOptions) => Animation"
          },
          "tags": {}
        },
        "getAnimations": {
          "name": "getAnimations",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/getAnimations)",
          "required": true,
          "type": {
            "name": "(options?: GetAnimationsOptions) => Animation[]"
          },
          "tags": {}
        }
      },
      "ChildNode": {
        "after": {
          "name": "after",
          "defaultValue": null,
          "description": "Inserts nodes just after node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/after)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        },
        "before": {
          "name": "before",
          "defaultValue": null,
          "description": "Inserts nodes just before node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/before)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        },
        "remove": {
          "name": "remove",
          "defaultValue": null,
          "description": "Removes node.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/remove)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "replaceWith": {
          "name": "replaceWith",
          "defaultValue": null,
          "description": "Replaces node with nodes, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/replaceWith)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        }
      },
      "NonDocumentTypeChildNode": {
        "nextElementSibling": {
          "name": "nextElementSibling",
          "defaultValue": null,
          "description": "Returns the first following sibling that is an element, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/nextElementSibling)",
          "required": true,
          "type": {
            "name": "Element"
          },
          "tags": {}
        },
        "previousElementSibling": {
          "name": "previousElementSibling",
          "defaultValue": null,
          "description": "Returns the first preceding sibling that is an element, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/CharacterData/previousElementSibling)",
          "required": true,
          "type": {
            "name": "Element"
          },
          "tags": {}
        }
      },
      "ParentNode": {
        "childElementCount": {
          "name": "childElementCount",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/childElementCount)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "children": {
          "name": "children",
          "defaultValue": null,
          "description": "Returns the child elements.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/children)",
          "required": true,
          "type": {
            "name": "HTMLCollection"
          },
          "tags": {}
        },
        "firstElementChild": {
          "name": "firstElementChild",
          "defaultValue": null,
          "description": "Returns the first child that is an element, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/firstElementChild)",
          "required": true,
          "type": {
            "name": "Element"
          },
          "tags": {}
        },
        "lastElementChild": {
          "name": "lastElementChild",
          "defaultValue": null,
          "description": "Returns the last child that is an element, and null otherwise.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/lastElementChild)",
          "required": true,
          "type": {
            "name": "Element"
          },
          "tags": {}
        },
        "append": {
          "name": "append",
          "defaultValue": null,
          "description": "Inserts nodes after the last child of node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/append)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        },
        "prepend": {
          "name": "prepend",
          "defaultValue": null,
          "description": "Inserts nodes before the first child of node, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/prepend)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        },
        "querySelector": {
          "name": "querySelector",
          "defaultValue": null,
          "description": "Returns the first element that is a descendant of node that matches selectors.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/querySelector)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementTagNameMap>(selectors: K): HTMLElementTagNameMap[K]; <K extends keyof SVGElementTagNameMap>(selectors: K): SVGElementTagNameMap[K]; <K extends keyof MathMLElementTagNameMap>(selectors: K): MathMLElementTagNameMap[K]; <K extends keyof HTMLElementDeprecatedTagNameMap>(selectors: K): HTMLE..."
          },
          "tags": {
            "deprecated": ""
          }
        },
        "querySelectorAll": {
          "name": "querySelectorAll",
          "defaultValue": null,
          "description": "Returns all element descendants of node that match selectors.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/querySelectorAll)",
          "required": true,
          "type": {
            "name": "{ <K extends keyof HTMLElementTagNameMap>(selectors: K): NodeListOf<HTMLElementTagNameMap[K]>; <K extends keyof SVGElementTagNameMap>(selectors: K): NodeListOf<...>; <K extends keyof MathMLElementTagNameMap>(selectors: K): NodeListOf<...>; <K extends keyof HTMLElementDeprecatedTagNameMap>(selectors: K): NodeListOf<...."
          },
          "tags": {
            "deprecated": ""
          }
        },
        "replaceChildren": {
          "name": "replaceChildren",
          "defaultValue": null,
          "description": "Replace all children of node with nodes, while replacing strings in nodes with equivalent Text nodes.\n\nThrows a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/replaceChildren)",
          "required": true,
          "type": {
            "name": "(...nodes: (string | Node)[]) => void"
          },
          "tags": {}
        }
      },
      "Slottable": {
        "assignedSlot": {
          "name": "assignedSlot",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/assignedSlot)",
          "required": true,
          "type": {
            "name": "HTMLSlotElement"
          },
          "tags": {}
        }
      },
      "ElementCSSInlineStyle": {
        "attributeStyleMap": {
          "name": "attributeStyleMap",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/attributeStyleMap)",
          "required": true,
          "type": {
            "name": "StylePropertyMap"
          },
          "tags": {}
        },
        "style": {
          "name": "style",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/style)",
          "required": true,
          "type": {
            "name": "CSSStyleDeclaration"
          },
          "tags": {}
        }
      },
      "ElementContentEditable": {
        "contentEditable": {
          "name": "contentEditable",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/contentEditable)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "enterKeyHint": {
          "name": "enterKeyHint",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/enterKeyHint)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "inputMode": {
          "name": "inputMode",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/inputMode)",
          "required": true,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "isContentEditable": {
          "name": "isContentEditable",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/isContentEditable)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        }
      },
      "GlobalEventHandlers": {
        "onabort": {
          "name": "onabort",
          "defaultValue": null,
          "description": "Fires when the user aborts the download.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: UIEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/abort_event)"
          }
        },
        "onanimationcancel": {
          "name": "onanimationcancel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationcancel_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: AnimationEvent) => any"
          },
          "tags": {}
        },
        "onanimationend": {
          "name": "onanimationend",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: AnimationEvent) => any"
          },
          "tags": {}
        },
        "onanimationiteration": {
          "name": "onanimationiteration",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: AnimationEvent) => any"
          },
          "tags": {}
        },
        "onanimationstart": {
          "name": "onanimationstart",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: AnimationEvent) => any"
          },
          "tags": {}
        },
        "onauxclick": {
          "name": "onauxclick",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/auxclick_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {}
        },
        "onbeforeinput": {
          "name": "onbeforeinput",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/beforeinput_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: InputEvent) => any"
          },
          "tags": {}
        },
        "onbeforetoggle": {
          "name": "onbeforetoggle",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/beforetoggle_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onblur": {
          "name": "onblur",
          "defaultValue": null,
          "description": "Fires when the object loses the input focus.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: FocusEvent) => any"
          },
          "tags": {
            "param": "ev The focus event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/blur_event)"
          }
        },
        "oncancel": {
          "name": "oncancel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/cancel_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oncanplay": {
          "name": "oncanplay",
          "defaultValue": null,
          "description": "Occurs when playback is possible, but would require further buffering.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplay_event)"
          }
        },
        "oncanplaythrough": {
          "name": "oncanplaythrough",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/canplaythrough_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onchange": {
          "name": "onchange",
          "defaultValue": null,
          "description": "Fires when the contents of the object or selection have changed.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/change_event)"
          }
        },
        "onclick": {
          "name": "onclick",
          "defaultValue": null,
          "description": "Fires when the user clicks the left mouse button on the object",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/click_event)"
          }
        },
        "onclose": {
          "name": "onclose",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLDialogElement/close_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oncontextlost": {
          "name": "oncontextlost",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/contextlost_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oncontextmenu": {
          "name": "oncontextmenu",
          "defaultValue": null,
          "description": "Fires when the user clicks the right mouse button in the client area, opening the context menu.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/contextmenu_event)"
          }
        },
        "oncontextrestored": {
          "name": "oncontextrestored",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLCanvasElement/contextrestored_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oncopy": {
          "name": "oncopy",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/copy_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: ClipboardEvent) => any"
          },
          "tags": {}
        },
        "oncuechange": {
          "name": "oncuechange",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLTrackElement/cuechange_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oncut": {
          "name": "oncut",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/cut_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: ClipboardEvent) => any"
          },
          "tags": {}
        },
        "ondblclick": {
          "name": "ondblclick",
          "defaultValue": null,
          "description": "Fires when the user double-clicks the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/dblclick_event)"
          }
        },
        "ondrag": {
          "name": "ondrag",
          "defaultValue": null,
          "description": "Fires on the source object continuously during a drag operation.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drag_event)"
          }
        },
        "ondragend": {
          "name": "ondragend",
          "defaultValue": null,
          "description": "Fires on the source object when the user releases the mouse at the close of a drag operation.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragend_event)"
          }
        },
        "ondragenter": {
          "name": "ondragenter",
          "defaultValue": null,
          "description": "Fires on the target element when the user drags the object to a valid drop target.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The drag event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragenter_event)"
          }
        },
        "ondragleave": {
          "name": "ondragleave",
          "defaultValue": null,
          "description": "Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The drag event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragleave_event)"
          }
        },
        "ondragover": {
          "name": "ondragover",
          "defaultValue": null,
          "description": "Fires on the target element continuously while the user drags the object over a valid drop target.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragover_event)"
          }
        },
        "ondragstart": {
          "name": "ondragstart",
          "defaultValue": null,
          "description": "Fires on the source object when the user starts to drag a text selection or selected object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dragstart_event)"
          }
        },
        "ondrop": {
          "name": "ondrop",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/drop_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: DragEvent) => any"
          },
          "tags": {}
        },
        "ondurationchange": {
          "name": "ondurationchange",
          "defaultValue": null,
          "description": "Occurs when the duration attribute is updated.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/durationchange_event)"
          }
        },
        "onemptied": {
          "name": "onemptied",
          "defaultValue": null,
          "description": "Occurs when the media element is reset to its initial state.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/emptied_event)"
          }
        },
        "onended": {
          "name": "onended",
          "defaultValue": null,
          "description": "Occurs when the end of playback is reached.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ended_event)"
          }
        },
        "onerror": {
          "name": "onerror",
          "defaultValue": null,
          "description": "Fires when an error occurs during object loading.",
          "required": true,
          "type": {
            "name": "OnErrorEventHandlerNonNull"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/error_event)"
          }
        },
        "onfocus": {
          "name": "onfocus",
          "defaultValue": null,
          "description": "Fires when the object receives focus.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: FocusEvent) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/focus_event)"
          }
        },
        "onformdata": {
          "name": "onformdata",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/formdata_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: FormDataEvent) => any"
          },
          "tags": {}
        },
        "ongotpointercapture": {
          "name": "ongotpointercapture",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/gotpointercapture_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "oninput": {
          "name": "oninput",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/input_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "oninvalid": {
          "name": "oninvalid",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/invalid_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onkeydown": {
          "name": "onkeydown",
          "defaultValue": null,
          "description": "Fires when the user presses a key.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: KeyboardEvent) => any"
          },
          "tags": {
            "param": "ev The keyboard event\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keydown_event)"
          }
        },
        "onkeypress": {
          "name": "onkeypress",
          "defaultValue": null,
          "description": "Fires when the user presses an alphanumeric key.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: KeyboardEvent) => any"
          },
          "tags": {
            "param": "ev The event.",
            "deprecated": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keypress_event)"
          }
        },
        "onkeyup": {
          "name": "onkeyup",
          "defaultValue": null,
          "description": "Fires when the user releases a key.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: KeyboardEvent) => any"
          },
          "tags": {
            "param": "ev The keyboard event\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/keyup_event)"
          }
        },
        "onload": {
          "name": "onload",
          "defaultValue": null,
          "description": "Fires immediately after the browser loads the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/SVGElement/load_event)"
          }
        },
        "onloadeddata": {
          "name": "onloadeddata",
          "defaultValue": null,
          "description": "Occurs when media data is loaded at the current playback position.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadeddata_event)"
          }
        },
        "onloadedmetadata": {
          "name": "onloadedmetadata",
          "defaultValue": null,
          "description": "Occurs when the duration and dimensions of the media have been determined.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadedmetadata_event)"
          }
        },
        "onloadstart": {
          "name": "onloadstart",
          "defaultValue": null,
          "description": "Occurs when Internet Explorer begins looking for media data.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/loadstart_event)"
          }
        },
        "onlostpointercapture": {
          "name": "onlostpointercapture",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/lostpointercapture_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onmousedown": {
          "name": "onmousedown",
          "defaultValue": null,
          "description": "Fires when the user clicks the object with either mouse button.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mousedown_event)"
          }
        },
        "onmouseenter": {
          "name": "onmouseenter",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseenter_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {}
        },
        "onmouseleave": {
          "name": "onmouseleave",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseleave_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {}
        },
        "onmousemove": {
          "name": "onmousemove",
          "defaultValue": null,
          "description": "Fires when the user moves the mouse over the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mousemove_event)"
          }
        },
        "onmouseout": {
          "name": "onmouseout",
          "defaultValue": null,
          "description": "Fires when the user moves the mouse pointer outside the boundaries of the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseout_event)"
          }
        },
        "onmouseover": {
          "name": "onmouseover",
          "defaultValue": null,
          "description": "Fires when the user moves the mouse pointer into the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseover_event)"
          }
        },
        "onmouseup": {
          "name": "onmouseup",
          "defaultValue": null,
          "description": "Fires when the user releases a mouse button while the mouse is over the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: MouseEvent) => any"
          },
          "tags": {
            "param": "ev The mouse event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/mouseup_event)"
          }
        },
        "onpaste": {
          "name": "onpaste",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/paste_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: ClipboardEvent) => any"
          },
          "tags": {}
        },
        "onpause": {
          "name": "onpause",
          "defaultValue": null,
          "description": "Occurs when playback is paused.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/pause_event)"
          }
        },
        "onplay": {
          "name": "onplay",
          "defaultValue": null,
          "description": "Occurs when the play method is requested.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/play_event)"
          }
        },
        "onplaying": {
          "name": "onplaying",
          "defaultValue": null,
          "description": "Occurs when the audio or video has started playing.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/playing_event)"
          }
        },
        "onpointercancel": {
          "name": "onpointercancel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointercancel_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerdown": {
          "name": "onpointerdown",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerdown_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerenter": {
          "name": "onpointerenter",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerenter_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerleave": {
          "name": "onpointerleave",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerleave_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointermove": {
          "name": "onpointermove",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointermove_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerout": {
          "name": "onpointerout",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerout_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerover": {
          "name": "onpointerover",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerover_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onpointerup": {
          "name": "onpointerup",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/pointerup_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: PointerEvent) => any"
          },
          "tags": {}
        },
        "onprogress": {
          "name": "onprogress",
          "defaultValue": null,
          "description": "Occurs to indicate progress while downloading media data.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: ProgressEvent<EventTarget>) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/progress_event)"
          }
        },
        "onratechange": {
          "name": "onratechange",
          "defaultValue": null,
          "description": "Occurs when the playback rate is increased or decreased.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/ratechange_event)"
          }
        },
        "onreset": {
          "name": "onreset",
          "defaultValue": null,
          "description": "Fires when the user resets a form.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/reset_event)"
          }
        },
        "onresize": {
          "name": "onresize",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLVideoElement/resize_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: UIEvent) => any"
          },
          "tags": {}
        },
        "onscroll": {
          "name": "onscroll",
          "defaultValue": null,
          "description": "Fires when the user repositions the scroll box in the scroll bar on the object.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scroll_event)"
          }
        },
        "onscrollend": {
          "name": "onscrollend",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/scrollend_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onsecuritypolicyviolation": {
          "name": "onsecuritypolicyviolation",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/securitypolicyviolation_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: SecurityPolicyViolationEvent) => any"
          },
          "tags": {}
        },
        "onseeked": {
          "name": "onseeked",
          "defaultValue": null,
          "description": "Occurs when the seek operation ends.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeked_event)"
          }
        },
        "onseeking": {
          "name": "onseeking",
          "defaultValue": null,
          "description": "Occurs when the current playback position is moved.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/seeking_event)"
          }
        },
        "onselect": {
          "name": "onselect",
          "defaultValue": null,
          "description": "Fires when the current selection changes.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLInputElement/select_event)"
          }
        },
        "onselectionchange": {
          "name": "onselectionchange",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Document/selectionchange_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onselectstart": {
          "name": "onselectstart",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Node/selectstart_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onslotchange": {
          "name": "onslotchange",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLSlotElement/slotchange_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "onstalled": {
          "name": "onstalled",
          "defaultValue": null,
          "description": "Occurs when the download has stopped.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/stalled_event)"
          }
        },
        "onsubmit": {
          "name": "onsubmit",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLFormElement/submit_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: SubmitEvent) => any"
          },
          "tags": {}
        },
        "onsuspend": {
          "name": "onsuspend",
          "defaultValue": null,
          "description": "Occurs if the load operation has been intentionally halted.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/suspend_event)"
          }
        },
        "ontimeupdate": {
          "name": "ontimeupdate",
          "defaultValue": null,
          "description": "Occurs to indicate the current playback position.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/timeupdate_event)"
          }
        },
        "ontoggle": {
          "name": "ontoggle",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/toggle_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {}
        },
        "ontouchcancel": {
          "name": "ontouchcancel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchcancel_event)",
          "required": false,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TouchEvent) => any"
          },
          "tags": {}
        },
        "ontouchend": {
          "name": "ontouchend",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchend_event)",
          "required": false,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TouchEvent) => any"
          },
          "tags": {}
        },
        "ontouchmove": {
          "name": "ontouchmove",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchmove_event)",
          "required": false,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TouchEvent) => any"
          },
          "tags": {}
        },
        "ontouchstart": {
          "name": "ontouchstart",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/touchstart_event)",
          "required": false,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TouchEvent) => any"
          },
          "tags": {}
        },
        "ontransitioncancel": {
          "name": "ontransitioncancel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitioncancel_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TransitionEvent) => any"
          },
          "tags": {}
        },
        "ontransitionend": {
          "name": "ontransitionend",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TransitionEvent) => any"
          },
          "tags": {}
        },
        "ontransitionrun": {
          "name": "ontransitionrun",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionrun_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TransitionEvent) => any"
          },
          "tags": {}
        },
        "ontransitionstart": {
          "name": "ontransitionstart",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionstart_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: TransitionEvent) => any"
          },
          "tags": {}
        },
        "onvolumechange": {
          "name": "onvolumechange",
          "defaultValue": null,
          "description": "Occurs when the volume is changed, or playback is muted or unmuted.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/volumechange_event)"
          }
        },
        "onwaiting": {
          "name": "onwaiting",
          "defaultValue": null,
          "description": "Occurs when playback stops because the next frame of a video resource is not available.",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "param": "ev The event.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLMediaElement/waiting_event)"
          }
        },
        "onwebkitanimationend": {
          "name": "onwebkitanimationend",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "deprecated": "This is a legacy alias of `onanimationend`.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationend_event)"
          }
        },
        "onwebkitanimationiteration": {
          "name": "onwebkitanimationiteration",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "deprecated": "This is a legacy alias of `onanimationiteration`.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationiteration_event)"
          }
        },
        "onwebkitanimationstart": {
          "name": "onwebkitanimationstart",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "deprecated": "This is a legacy alias of `onanimationstart`.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/animationstart_event)"
          }
        },
        "onwebkittransitionend": {
          "name": "onwebkittransitionend",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: Event) => any"
          },
          "tags": {
            "deprecated": "This is a legacy alias of `ontransitionend`.\n\n[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/transitionend_event)"
          }
        },
        "onwheel": {
          "name": "onwheel",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/Element/wheel_event)",
          "required": true,
          "type": {
            "name": "(this: GlobalEventHandlers, ev: WheelEvent) => any"
          },
          "tags": {}
        }
      },
      "HTMLOrSVGElement": {
        "autofocus": {
          "name": "autofocus",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/autofocus)",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "boolean",
            "value": [
              {
                "value": "false"
              },
              {
                "value": "true"
              }
            ]
          },
          "tags": {}
        },
        "dataset": {
          "name": "dataset",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/dataset)",
          "required": true,
          "type": {
            "name": "DOMStringMap"
          },
          "tags": {}
        },
        "nonce": {
          "name": "nonce",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/nonce)",
          "required": false,
          "type": {
            "name": "string"
          },
          "tags": {}
        },
        "tabIndex": {
          "name": "tabIndex",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/tabIndex)",
          "required": true,
          "type": {
            "name": "number"
          },
          "tags": {}
        },
        "blur": {
          "name": "blur",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/blur)",
          "required": true,
          "type": {
            "name": "() => void"
          },
          "tags": {}
        },
        "focus": {
          "name": "focus",
          "defaultValue": null,
          "description": "[MDN Reference](https://developer.mozilla.org/docs/Web/API/HTMLElement/focus)",
          "required": true,
          "type": {
            "name": "(options?: FocusOptions) => void"
          },
          "tags": {}
        }
      }
    }
  },
  {
    "tags": {},
    "description": "Returns the text string of a React node",
    "methods": [],
    "displayName": "LeafygreenUiLib",
    "props": {
      "String": "",
      "RelativeIndexable": {
        "at": {
          "name": "at",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "(index: number) => string"
          },
          "tags": {}
        }
      },
      "Number": {
        "toFixed": {
          "name": "toFixed",
          "defaultValue": null,
          "description": "Returns a string representing a number in fixed-point notation.",
          "required": true,
          "type": {
            "name": "(fractionDigits?: number) => string"
          },
          "tags": {
            "param": "fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive."
          }
        },
        "toExponential": {
          "name": "toExponential",
          "defaultValue": null,
          "description": "Returns a string containing a number represented in exponential notation.",
          "required": true,
          "type": {
            "name": "(fractionDigits?: number) => string"
          },
          "tags": {
            "param": "fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive."
          }
        },
        "toPrecision": {
          "name": "toPrecision",
          "defaultValue": null,
          "description": "Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.",
          "required": true,
          "type": {
            "name": "(precision?: number) => string"
          },
          "tags": {
            "param": "precision Number of significant digits. Must be in the range 1 - 21, inclusive."
          }
        }
      },
      "Object": {
        "toLocaleString": {
          "name": "toLocaleString",
          "defaultValue": {},
          "description": "Returns a date converted to a string using the current locale.\nConverts a number to a string by using the current or specified locale.",
          "required": false,
          "type": {
            "name": "enum",
            "raw": "(() => string) | { (locales?: string | string[], options?: NumberFormatOptions): string; (locales?: LocalesArgument, options?: NumberFormatOptions): string; }",
            "value": [
              {
                "value": "() => string",
                "description": "Returns a date converted to a string using the current locale.",
                "fullComment": "Returns a date converted to a string using the current locale.",
                "tags": {}
              },
              {
                "value": "{ (locales?: string | string[], options?: NumberFormatOptions): string; (locales?: LocalesArgument, options?: NumberFormatOptions): string; }",
                "description": "Converts a number to a string by using the current or specified locale.",
                "fullComment": "Converts a number to a string by using the current or specified locale.\n@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.\n@param locales A locale string, array of locale strings, Intl.Locale object, or array of Intl.Locale objects that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\n@param options An object that contains one or more properties that specify comparison options.",
                "tags": {
                  "param": "locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\noptions An object that contains one or more properties that specify comparison options.\nlocales A locale string, array of locale strings, Intl.Locale object, or array of Intl.Locale objects that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\noptions An object that contains one or more properties that specify comparison options."
                }
              }
            ]
          },
          "tags": {
            "param": "locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\noptions An object that contains one or more properties that specify comparison options.\nlocales A locale string, array of locale strings, Intl.Locale object, or array of Intl.Locale objects that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\noptions An object that contains one or more properties that specify comparison options."
          }
        }
      },
      "ReactElement": {
        "type": {
          "name": "type",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "string | JSXElementConstructor<any>",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "(props: any, deprecatedLegacyContext?: any) => ReactNode",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "new (props: any, deprecatedLegacyContext?: any) => Component<any, any, any>",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        },
        "props": {
          "name": "props",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "any"
          },
          "tags": {}
        }
      },
      "ReactPortal": {
        "children": {
          "name": "children",
          "defaultValue": null,
          "description": "",
          "required": true,
          "type": {
            "name": "enum",
            "raw": "ReactNode",
            "value": [
              {
                "value": "string"
              },
              {
                "value": "number"
              },
              {
                "value": "false"
              },
              {
                "value": "true"
              },
              {
                "value": "ReactElement<any, string | JSXElementConstructor<any>>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "Iterable<ReactNode>",
                "description": "",
                "fullComment": "",
                "tags": {}
              },
              {
                "value": "ReactPortal",
                "description": "",
                "fullComment": "",
                "tags": {}
              }
            ]
          },
          "tags": {}
        }
      }
    }
  },
  {
    "tags": {
      "param": "darkMode",
      "returns": "`Theme.Dark || Theme.Light`"
    },
    "description": "\nGiven a `darkMode` boolean, returns a `Theme` value - either dark or light.",
    "methods": [],
    "displayName": "getTheme",
    "props": {
      "Boolean": {
        "valueOf": {
          "name": "valueOf",
          "defaultValue": {},
          "description": "Returns the primitive value of the specified object.",
          "required": false,
          "type": {
            "name": "() => boolean"
          },
          "tags": {}
        }
      }
    }
  }
]