import { CreateUIResourceOptions, UIResourceProps, AdaptersConfig } from './types.js';

export declare function getAdditionalResourceProps(resourceOptions: Partial<CreateUIResourceOptions>): UIResourceProps;
/**
 * Robustly encodes a UTF-8 string to Base64.
 * Uses Node.js Buffer if available, otherwise TextEncoder and btoa.
 * @param str The string to encode.
 * @returns Base64 encoded string.
 */
export declare function utf8ToBase64(str: string): string;
/**
 * Determines the MIME type based on enabled adapters.
 *
 * @param adaptersConfig - Configuration for all adapters
 * @returns The MIME type to use, or undefined if no adapters are enabled
 */
export declare function getAdapterMimeType(adaptersConfig?: AdaptersConfig): string | undefined;
/**
 * Wraps HTML content with enabled adapter scripts.
 * This allows the HTML to communicate with different platform environments.
 *
 * @param htmlContent - The HTML content to wrap
 * @param adaptersConfig - Configuration for all adapters
 * @returns The wrapped HTML content with adapter scripts injected
 */
export declare function wrapHtmlWithAdapters(htmlContent: string, adaptersConfig?: AdaptersConfig): string;
//# sourceMappingURL=utils.d.ts.map