import { LGGlyph } from '../types';
declare const _glyphs: {
    readonly AIModel: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly ActivityFeed: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly AddFile: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly AllProducts: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly AnalyticsNode: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Apps: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Array: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly ArrowDown: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly ArrowLeft: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly ArrowRight: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly ArrowUp: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Award: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Beaker: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Bell: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Biometric: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Boolean: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Building: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Bulb: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Calendar: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Camera: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Cap: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly CaretDown: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly CaretLeft: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly CaretRight: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly CaretUp: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly ChartFilled: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Charts: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Checkmark: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly CheckmarkWithCircle: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly ChevronDown: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly ChevronLeft: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly ChevronRight: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly ChevronUp: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Circle: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Clock: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly ClockWithArrow: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Clone: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Cloud: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Code: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly CodeBlock: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Coin: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Colon: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Config: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Connect: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Copy: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly CreditCard: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly CurlyBraces: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Cursor: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Dashboard: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Database: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Diagram: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Diagram2: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Diagram3: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Disconnect: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Download: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Drag: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Edit: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Ellipsis: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Email: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly EmptyDatabase: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly EmptyFolder: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Eraser: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Escalation: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Export: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Favorite: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Federation: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly File: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Filter: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Folder: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Format: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly FullScreenEnter: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly FullScreenExit: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Function: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Gauge: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly GlobeAmericas: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly GovernmentBuilding: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Guide: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Hash: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly HiddenSecondaryNode: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Highlight: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Home: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly HorizontalDrag: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Import: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly ImportantWithCircle: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly InfoWithCircle: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly InternalEmployee: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly InviteUser: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Key: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Laptop: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly LightningBolt: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Link: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly List: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Lock: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly LogIn: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly LogOut: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly MagnifyingGlass: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Megaphone: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Menu: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Minus: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Mobile: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Moon: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly MultiDirectionArrow: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly MultiLayers: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly NavCollapse: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly NavExpand: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly NoFilter: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly NotAllowed: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Note: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly NumberedList: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly OpenNewTab: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly OutlineFavorite: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Package: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Pause: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Pending: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Person: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly PersonGroup: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly PersonWithLock: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Pin: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Play: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Plus: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly PlusWithCircle: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Primary: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Project: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly QuestionMarkWithCircle: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Read: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Recommended: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Redo: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Refresh: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Relationship: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly ReplicaSet: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Resize: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Resource: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Return: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Revert: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Router: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly SMS: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Save: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly SearchIndex: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Secondary: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Serverless: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Settings: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly ShardedCluster: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Shell: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Shield: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Shirt: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Shortcut: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly SortAscending: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly SortDescending: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Sparkle: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly SplitHorizontal: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly SplitVertical: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Stitch: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Stop: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Streaming: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly String: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Sun: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Support: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Sweep: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Table: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Tag: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly TemporaryTable: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly ThumbsDown: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly ThumbsUp: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly TimeSeries: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly TimeSeriesCollection: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Trash: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Undo: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly University: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Unlock: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Unsorted: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly UpDownCarets: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Upload: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly VerticalEllipsis: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly View: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Visibility: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly VisibilityOff: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Warning: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Wizard: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Wrench: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly Write: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly X: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
    readonly XWithCircle: import("react").ComponentType<import("react").SVGProps<SVGSVGElement> & {
        title?: string | null;
        role?: "img" | "presentation";
    }>;
};
export type GlyphName = keyof typeof _glyphs;
export declare const glyphs: Record<"Edit" | "AIModel" | "ActivityFeed" | "AddFile" | "AllProducts" | "AnalyticsNode" | "Apps" | "Array" | "ArrowDown" | "ArrowLeft" | "ArrowRight" | "ArrowUp" | "Award" | "Beaker" | "Bell" | "Biometric" | "Boolean" | "Building" | "Bulb" | "Calendar" | "Camera" | "Cap" | "CaretDown" | "CaretLeft" | "CaretRight" | "CaretUp" | "ChartFilled" | "Charts" | "Checkmark" | "CheckmarkWithCircle" | "ChevronDown" | "ChevronLeft" | "ChevronRight" | "ChevronUp" | "Circle" | "Clock" | "ClockWithArrow" | "Clone" | "Cloud" | "Code" | "CodeBlock" | "Coin" | "Colon" | "Config" | "Connect" | "Copy" | "CreditCard" | "CurlyBraces" | "Cursor" | "Dashboard" | "Database" | "Diagram" | "Diagram2" | "Diagram3" | "Disconnect" | "Download" | "Drag" | "Ellipsis" | "Email" | "EmptyDatabase" | "EmptyFolder" | "Eraser" | "Escalation" | "Export" | "Favorite" | "Federation" | "File" | "Filter" | "Folder" | "Format" | "FullScreenEnter" | "FullScreenExit" | "Function" | "Gauge" | "GlobeAmericas" | "GovernmentBuilding" | "Guide" | "Hash" | "HiddenSecondaryNode" | "Highlight" | "Home" | "HorizontalDrag" | "Import" | "ImportantWithCircle" | "InfoWithCircle" | "InternalEmployee" | "InviteUser" | "Key" | "Laptop" | "LightningBolt" | "Link" | "List" | "Lock" | "LogIn" | "LogOut" | "MagnifyingGlass" | "Megaphone" | "Menu" | "Minus" | "Mobile" | "Moon" | "MultiDirectionArrow" | "MultiLayers" | "NavCollapse" | "NavExpand" | "NoFilter" | "NotAllowed" | "Note" | "NumberedList" | "OpenNewTab" | "OutlineFavorite" | "Package" | "Pause" | "Pending" | "Person" | "PersonGroup" | "PersonWithLock" | "Pin" | "Play" | "Plus" | "PlusWithCircle" | "Primary" | "Project" | "QuestionMarkWithCircle" | "Read" | "Recommended" | "Redo" | "Refresh" | "Relationship" | "ReplicaSet" | "Resize" | "Resource" | "Return" | "Revert" | "Router" | "SMS" | "Save" | "SearchIndex" | "Secondary" | "Serverless" | "Settings" | "ShardedCluster" | "Shell" | "Shield" | "Shirt" | "Shortcut" | "SortAscending" | "SortDescending" | "Sparkle" | "SplitHorizontal" | "SplitVertical" | "Stitch" | "Stop" | "Streaming" | "String" | "Sun" | "Support" | "Sweep" | "Table" | "Tag" | "TemporaryTable" | "ThumbsDown" | "ThumbsUp" | "TimeSeries" | "TimeSeriesCollection" | "Trash" | "Undo" | "University" | "Unlock" | "Unsorted" | "UpDownCarets" | "Upload" | "VerticalEllipsis" | "View" | "Visibility" | "VisibilityOff" | "Warning" | "Wizard" | "Wrench" | "Write" | "X" | "XWithCircle", LGGlyph.Component>;
export {};
//# sourceMappingURL=index.d.ts.map