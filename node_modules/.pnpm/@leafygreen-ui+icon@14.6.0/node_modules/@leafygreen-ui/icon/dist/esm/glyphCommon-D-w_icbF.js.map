{"version":3,"file":"glyphCommon-D-w_icbF.js","sources":["../../src/glyphCommon.ts"],"sourcesContent":["export const Size = {\n  Small: 'small',\n  Default: 'default',\n  Large: 'large',\n  XLarge: 'xlarge',\n} as const;\n\nexport type Size = (typeof Size)[keyof typeof Size];\n\nexport const sizeMap: Record<Size, number> = {\n  small: 14,\n  default: 16,\n  large: 20,\n  xlarge: 24,\n} as const;\n\ninterface AccessibleFunctionParams {\n  'aria-labelledby'?: string;\n  'aria-label'?: string;\n  title?: string | null;\n}\n\ntype AccessibleFunctionReturnType =\n  | AccessibleFunctionParams\n  | { 'aria-hidden': true; alt: '' };\n\nexport function generateAccessibleProps(\n  role: 'img' | 'presentation',\n  glyphName: string,\n  {\n    ['aria-label']: ariaLabel,\n    ['aria-labelledby']: ariaLabelledby,\n    title,\n  }: AccessibleFunctionParams,\n): AccessibleFunctionReturnType {\n  switch (role) {\n    case 'img':\n      if (!ariaLabel && !ariaLabelledby && !title) {\n        return { 'aria-label': getGlyphLabel(glyphName) };\n      }\n\n      return {\n        ['aria-labelledby']: ariaLabelledby,\n        ['aria-label']: ariaLabel,\n        title,\n      };\n\n    case 'presentation':\n      return { 'aria-hidden': true, alt: '' };\n  }\n}\n\nexport function getGlyphLabel(name: string) {\n  return `${name.replace(/([a-z])([A-Z])/g, '$1 $2')} Icon`;\n}\n"],"names":["sizeMap","small","default","large","xlarge","generateAccessibleProps","role","glyphName","_ref","name","ariaLabel","ariaLabelledby","title","_defineProperty","concat","replace","alt"],"mappings":"slCAOU,IAACA,EAAU,CACnBC,MAAO,GACPC,QAAS,GACTC,MAAO,GACPC,OAAQ,IAEH,SAASC,EAAwBC,EAAMC,EAAWC,GACvD,IAkB4BC,EAlBxBC,EAAYF,EAAK,cACnBG,EAAiBH,EAAK,mBACtBI,EAAQJ,EAAKI,MACf,OAAQN,GACN,IAAK,MACH,OAAKI,GAAcC,GAAmBC,EAK/BC,EAAgBA,EAAgBA,EAAgB,CAAE,EAAE,kBAAmBF,GAAiB,aAAcD,GAAY,QAASE,GAJzH,CACL,cAWoBH,EAXQF,EAY7B,GAAGO,OAAOL,EAAKM,QAAQ,kBAAmB,SAAU,WARzD,IAAK,eACH,MAAO,CACL,eAAe,EACfC,IAAK,IAGb"}