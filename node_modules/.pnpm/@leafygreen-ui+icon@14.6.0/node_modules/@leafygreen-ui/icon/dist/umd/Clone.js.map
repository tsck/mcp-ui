{"version":3,"file":"Clone.js","sources":["../../../emotion/dist/esm/index.js","../../src/glyphCommon.ts","../../src/generated/Clone.tsx"],"sourcesContent":["import e from\"@emotion/server/create-instance\";import r from\"@emotion/css/create-instance\";var t=r({key:\"leafygreen-ui\",nonce:\"5.0.3\",prepend:!0}),a=t.flush,s=t.hydrate,n=t.cx,o=t.merge,c=t.getRegisteredStyles,i=t.injectGlobal,l=t.keyframes,m=t.css,d=t.sheet,y=t.cache,f=e(y),g=f.extractCritical,p=f.renderStylesToString,S=f.renderStylesToNodeStream;export{y as cache,m as css,n as cx,t as default,g as extractCritical,a as flush,c as getRegisteredStyles,s as hydrate,i as injectGlobal,l as keyframes,o as merge,S as renderStylesToNodeStream,p as renderStylesToString,d as sheet};\n//# sourceMappingURL=index.js.map\n","export const Size = {\n  Small: 'small',\n  Default: 'default',\n  Large: 'large',\n  XLarge: 'xlarge',\n} as const;\n\nexport type Size = (typeof Size)[keyof typeof Size];\n\nexport const sizeMap: Record<Size, number> = {\n  small: 14,\n  default: 16,\n  large: 20,\n  xlarge: 24,\n} as const;\n\ninterface AccessibleFunctionParams {\n  'aria-labelledby'?: string;\n  'aria-label'?: string;\n  title?: string | null;\n}\n\ntype AccessibleFunctionReturnType =\n  | AccessibleFunctionParams\n  | { 'aria-hidden': true; alt: '' };\n\nexport function generateAccessibleProps(\n  role: 'img' | 'presentation',\n  glyphName: string,\n  {\n    ['aria-label']: ariaLabel,\n    ['aria-labelledby']: ariaLabelledby,\n    title,\n  }: AccessibleFunctionParams,\n): AccessibleFunctionReturnType {\n  switch (role) {\n    case 'img':\n      if (!ariaLabel && !ariaLabelledby && !title) {\n        return { 'aria-label': getGlyphLabel(glyphName) };\n      }\n\n      return {\n        ['aria-labelledby']: ariaLabelledby,\n        ['aria-label']: ariaLabel,\n        title,\n      };\n\n    case 'presentation':\n      return { 'aria-hidden': true, alt: '' };\n  }\n}\n\nexport function getGlyphLabel(name: string) {\n  return `${name.replace(/([a-z])([A-Z])/g, '$1 $2')} Icon`;\n}\n","/**\n* This is a generated file. Do not modify it manually.\n*\n* @script packages/icon/scripts/prebuild/index.ts\n* @checksum c49bb6f86ac38132c73ffe2cd13d6343\n*/\nimport * as React from \"react\";\nimport { css, cx } from '@leafygreen-ui/emotion';\nimport { generateAccessibleProps, sizeMap } from '../glyphCommon';\nimport { LGGlyph } from '../types';\nexport interface CloneProps extends LGGlyph.ComponentProps {}\nconst Clone = ({\n  className,\n  size = 16,\n  title,\n  ['aria-label']: ariaLabel,\n  ['aria-labelledby']: ariaLabelledby,\n  fill,\n  role = 'img',\n  ...props\n}: CloneProps) => {\n  const fillStyle = css`\n        color: ${fill};\n      `;\n  const noFlexShrink = css`\n        flex-shrink: 0;\n      `;\n  const accessibleProps = generateAccessibleProps(role, 'Clone', {\n    title,\n    ['aria-label']: ariaLabel,\n    ['aria-labelledby']: ariaLabelledby\n  });\n  return <svg className={cx({\n    [fillStyle]: fill != null\n  }, noFlexShrink, className)} height={typeof size === 'number' ? size : sizeMap[size]} width={typeof size === 'number' ? size : sizeMap[size]} role={role} {...accessibleProps} {...props} viewBox=\"0 0 16 16\"><path d=\"M5.5 12C5.5 13.1046 6.39543 14 7.5 14H12.5C13.6046 14 14.5 13.1046 14.5 12V8C14.5 6.89543 13.6046 6 12.5 6H7.5C6.39543 6 5.5 6.89543 5.5 8V12Z\" fill={'currentColor'} /><path d=\"M4.25 10H3.5C2.39543 10 1.5 9.10457 1.5 8V4C1.5 2.89543 2.39543 2 3.5 2H8.5C9.60457 2 10.5 2.89543 10.5 4V4.75H8.5V4H3.5L3.5 8H4.25V10Z\" fill={'currentColor'} /></svg>;\n};\nClone.displayName = 'Clone';\nClone.isGlyph = true;\nexport default Clone;"],"names":["t","r","key","nonce","prepend","flush","hydrate","n","cx","merge","getRegisteredStyles","injectGlobal","keyframes","m","css","sheet","y","cache","f","e","default","extractCritical","renderStylesToString","renderStylesToNodeStream","_templateObject","_templateObject2","sizeMap","small","large","xlarge","_excluded","Clone","_ref","className","_ref$size","size","title","ariaLabel","ariaLabelledby","fill","_ref$role","role","props","_objectWithoutProperties","fillStyle","_taggedTemplateLiteral","noFlexShrink","accessibleProps","glyphName","name","_defineProperty","concat","replace","alt","generateAccessibleProps","React","createElement","_extends","height","width","viewBox","d","displayName","isGlyph"],"mappings":"skDAA8F,IAACA,OAAEC,QAAE,CAACC,IAAI,gBAAgBC,MAAM,QAAQC,SAAQ,IAAOJ,EAAEK,MAAQL,EAAEM,YAAQC,EAAEP,EAAEQ,GAAKR,EAAES,MAAQT,EAAEU,oBAAsBV,EAAEW,aAAeX,EAAEY,UAAU,IAAAC,EAAEb,EAAEc,IAAMd,EAAEe,UAAMC,EAAEhB,EAAEiB,MAAMC,EAAEC,EAACC,QAACJ,GAAKE,EAAEG,gBAAkBH,EAAEI,qBAAuBJ,EAAEK,yBCO9T,ICNHC,EAAiBC,EDMVC,EAAU,CACnBC,MAAO,GACPP,QAAS,GACTQ,MAAO,GACPC,OAAQ,ICTV,IAAIC,EAAY,CAAC,YAAa,OAAQ,QAAS,aAAc,kBAAmB,OAAQ,QAUpFC,EAAQ,SAAeC,GACzB,IAAIC,EAAYD,EAAKC,UACnBC,EAAYF,EAAKG,KACjBA,OAAqB,IAAdD,EAAuB,GAAKA,EACnCE,EAAQJ,EAAKI,MACbC,EAAYL,EAAK,cACjBM,EAAiBN,EAAK,mBACtBO,EAAOP,EAAKO,KACZC,EAAYR,EAAKS,KACjBA,OAAqB,IAAdD,EAAuB,MAAQA,EACtCE,+WAAQC,CAAyBX,EAAMF,GACrCc,EAAY9B,EAAIU,IAAoBA,EAAkBqB,EAAuB,CAAC,oBAAqB,eAAgBN,GACnHO,EAAehC,EAAIW,IAAqBA,EAAmBoB,EAAuB,CAAC,wCACnFE,EDZC,SAAiCN,EAAMO,EAAWhB,GACvD,IAkB4BiB,EAlBxBZ,EAAYL,EAAK,cACnBM,EAAiBN,EAAK,mBACtBI,EAAQJ,EAAKI,MACf,OAAQK,GACN,IAAK,MACH,OAAKJ,GAAcC,GAAmBF,EAK/Bc,EAAgBA,EAAgBA,EAAgB,CAAE,EAAE,kBAAmBZ,GAAiB,aAAcD,GAAY,QAASD,GAJzH,CACL,cAWoBa,EAXQD,EAY7B,GAAGG,OAAOF,EAAKG,QAAQ,kBAAmB,SAAU,WARzD,IAAK,eACH,MAAO,CACL,eAAe,EACfC,IAAK,IAGb,CCNwBC,CAAwBb,EAAM,QAASS,EAAgBA,EAAgB,CAC3Fd,MAAOA,GACN,aAAcC,GAAY,kBAAmBC,IAChD,OAAoBiB,EAAMC,cAAc,MAAOC,EAAS,CACtDxB,UAAWzB,EAAG0C,EAAgB,GAAIN,EAAmB,MAARL,GAAeO,EAAcb,GAC1EyB,OAAwB,iBAATvB,EAAoBA,EAAOT,EAAQS,GAClDwB,MAAuB,iBAATxB,EAAoBA,EAAOT,EAAQS,GACjDM,KAAMA,GACLM,EAAiBL,EAAO,CACzBkB,QAAS,cACML,EAAMC,cAAc,OAAQ,CAC3CK,EAAG,iJACHtB,KAAM,iBACSgB,EAAMC,cAAc,OAAQ,CAC3CK,EAAG,0IACHtB,KAAM,iBAEV,SACAR,EAAM+B,YAAc,QACpB/B,EAAMgC,SAAU"}